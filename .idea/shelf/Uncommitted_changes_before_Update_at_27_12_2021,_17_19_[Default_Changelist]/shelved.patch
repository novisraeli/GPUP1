Index: UI/src/FXML/main/mainAppController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package FXML.main;\n\nimport FXML.error.errorController;\nimport FXML.file.fileController;\nimport FXML.path.pathController;\nimport FXML.setting.settingController;\nimport FXML.table.tableController;\nimport FXML.whatIf.whatIfController;\nimport engine.*;\nimport javafx.beans.property.SimpleBooleanProperty;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.ScrollPane;\nimport javafx.scene.control.Tab;\nimport javafx.scene.layout.BorderPane;\nimport javafx.scene.text.Text;\nimport javafx.stage.FileChooser;\nimport javafx.stage.Stage;\nimport target.Target;\nimport target.targetTable;\n\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.Map;\n\npublic class mainAppController {\n    public final static String ERROR_FXML = \"/FXML/error/erroe.fxml\";\n    private final engine engine = new engineImpl();\n    private SimpleBooleanProperty isFileSelected;\n    public ObservableList<targetTable> items = FXCollections.observableArrayList();\n\n    @FXML private Tab tableTab;\n    @FXML private Tab graphTab;\n    @FXML private Tab pathTab;\n    @FXML private Tab taskTab;\n    @FXML private Tab whatIfTab;\n\n    @FXML private BorderPane fileComponent;\n    @FXML private fileController fileComponentController;\n\n    @FXML private BorderPane pathComponent;\n    @FXML private pathController pathComponentController;\n\n    @FXML private BorderPane settingComponent;\n    @FXML private settingController settingComponentController;\n\n    @FXML private BorderPane tableComponent;\n    @FXML private tableController tableComponentController;\n\n    @FXML private BorderPane whatIfComponent;\n    @FXML private whatIfController whatIfComponentController;\n\n    public mainAppController() {\n        isFileSelected = new SimpleBooleanProperty(false);\n    }\n\n    public SimpleBooleanProperty isFileSelected(){return isFileSelected;}\n    public ObservableList observableList(){return items;}\n\n\n    @FXML\n    public void initialize() {\n        if (fileComponentController != null && pathComponentController != null &&\n            settingComponentController != null && tableComponentController != null && whatIfComponentController != null){\n\n            fileComponentController.setMainController(this);\n            pathComponentController.setMainController(this);\n            settingComponentController.setMainController(this);\n            tableComponentController.setMainController(this);\n            whatIfComponentController.setMainController(this);\n        }\n        tableTab.disableProperty().bind(isFileSelected.not());\n        graphTab.disableProperty().bind(isFileSelected.not());\n        pathTab.disableProperty().bind(isFileSelected.not());\n        taskTab.disableProperty().bind(isFileSelected.not());\n        whatIfTab.disableProperty().bind(isFileSelected.not());\n    }\n\n    public engine getEngine(){return engine;}\n\n\n    public void showTable() {\n        pathComponentController.show();\n        tableComponentController.show();\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/main/mainAppController.java b/UI/src/FXML/main/mainAppController.java
--- a/UI/src/FXML/main/mainAppController.java	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/main/mainAppController.java	(date 1640617936504)
@@ -1,44 +1,33 @@
 package FXML.main;
-
-import FXML.error.errorController;
 import FXML.file.fileController;
 import FXML.path.pathController;
 import FXML.setting.settingController;
 import FXML.table.tableController;
-import FXML.whatIf.whatIfController;
+import FXML.task.taskController;
 import engine.*;
 import javafx.beans.property.SimpleBooleanProperty;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
 import javafx.fxml.FXML;
-import javafx.fxml.FXMLLoader;
-import javafx.scene.Parent;
-import javafx.scene.Scene;
-import javafx.scene.control.ScrollPane;
 import javafx.scene.control.Tab;
+import javafx.scene.control.TableColumn;
+import javafx.scene.control.cell.PropertyValueFactory;
 import javafx.scene.layout.BorderPane;
-import javafx.scene.text.Text;
-import javafx.stage.FileChooser;
-import javafx.stage.Stage;
 import target.Target;
 import target.targetTable;
 
-import java.io.IOException;
-import java.net.URL;
-import java.util.Map;
 
 public class mainAppController {
-    public final static String ERROR_FXML = "/FXML/error/erroe.fxml";
     private final engine engine = new engineImpl();
-    private SimpleBooleanProperty isFileSelected;
+    private final SimpleBooleanProperty isFileSelected;
     public ObservableList<targetTable> items = FXCollections.observableArrayList();
-
+/// tab fxml
     @FXML private Tab tableTab;
     @FXML private Tab graphTab;
     @FXML private Tab pathTab;
     @FXML private Tab taskTab;
-    @FXML private Tab whatIfTab;
 
+    @FXML private BorderPane mainBorderPane;
     @FXML private BorderPane fileComponent;
     @FXML private fileController fileComponentController;
 
@@ -51,8 +40,8 @@
     @FXML private BorderPane tableComponent;
     @FXML private tableController tableComponentController;
 
-    @FXML private BorderPane whatIfComponent;
-    @FXML private whatIfController whatIfComponentController;
+    @FXML private BorderPane taskComponent;
+    @FXML private taskController taskComponentController;
 
     public mainAppController() {
         isFileSelected = new SimpleBooleanProperty(false);
@@ -61,31 +50,51 @@
     public SimpleBooleanProperty isFileSelected(){return isFileSelected;}
     public ObservableList observableList(){return items;}
 
+    @FXML public void initialize() {
+        setMainForComponentController();
+        setBinding();
+    }
+    public static void setGeneralTableCol(TableColumn<targetTable,String> nameTableCol,
+                                          TableColumn<targetTable, Target.Type> typeTableCol,
+                                          TableColumn<targetTable, String> dataTableCol,
+                                          TableColumn<targetTable, Integer> serialSetTableCol,
+                                          TableColumn<targetTable, Integer> directRequiredForTableCol,
+                                          TableColumn<targetTable, Integer> directDependsOnTableCol,
+                                          TableColumn<targetTable, Integer> totalRequiredForTableCol,
+                                          TableColumn<targetTable, Integer> totalDependsOnTableCol) {
+        nameTableCol.setCellValueFactory(new PropertyValueFactory<>("name"));
+        typeTableCol.setCellValueFactory(new PropertyValueFactory<>("type"));
+        directRequiredForTableCol.setCellValueFactory(new PropertyValueFactory<>("directRequiredForTableCol"));
+        directDependsOnTableCol.setCellValueFactory(new PropertyValueFactory<>("directDependsOnTableCol"));
+        totalRequiredForTableCol.setCellValueFactory(new PropertyValueFactory<>("totalRequiredForTableCol"));
+        totalDependsOnTableCol.setCellValueFactory(new PropertyValueFactory<>("totalDependsOnTableCol"));
+        serialSetTableCol.setCellValueFactory(new PropertyValueFactory<>("serialSetTableCol"));
+        dataTableCol.setCellValueFactory(new PropertyValueFactory<>("userData"));
 
-    @FXML
-    public void initialize() {
+    }
+    public void setMainForComponentController(){
         if (fileComponentController != null && pathComponentController != null &&
-            settingComponentController != null && tableComponentController != null && whatIfComponentController != null){
+                settingComponentController != null && tableComponentController != null &&
+               taskComponentController != null){
 
             fileComponentController.setMainController(this);
             pathComponentController.setMainController(this);
             settingComponentController.setMainController(this);
             tableComponentController.setMainController(this);
-            whatIfComponentController.setMainController(this);
+            taskComponentController.setMainController(this);
         }
-        tableTab.disableProperty().bind(isFileSelected.not());
-        graphTab.disableProperty().bind(isFileSelected.not());
-        pathTab.disableProperty().bind(isFileSelected.not());
-        taskTab.disableProperty().bind(isFileSelected.not());
-        whatIfTab.disableProperty().bind(isFileSelected.not());
     }
-
     public engine getEngine(){return engine;}
-
-
     public void showTable() {
         pathComponentController.show();
         tableComponentController.show();
+        taskComponentController.show();
+    }
+    public void setBinding(){
+        tableTab.disableProperty().bind(isFileSelected.not());
+        graphTab.disableProperty().bind(isFileSelected.not());
+        pathTab.disableProperty().bind(isFileSelected.not());
+        taskTab.disableProperty().bind(isFileSelected.not());
     }
 }
 
Index: Engine/src/engine/engineImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engine;\n\nimport information.*;\nimport target.Target;\nimport target.TargetIsExists;\nimport target.Targets;\nimport xml.XmlNotLoad;\nimport xml.Xmlimpl;\n\nimport java.io.*;\nimport java.util.*;\nimport java.time.format.DateTimeFormatter;\nimport java.time.LocalDateTime;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.util.concurrent.Executor;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.ThreadPoolExecutor;\n\npublic class engineImpl implements engine {\n    private boolean loadFile = false;\n    private Map<String, Target> targetMap;\n    private String workingDirectory;\n    private List<Information> res;\n    private int maxThreads;\n    private Set<Set<String>> serielSets;\n\n    /** Load file\n     *  Open XML file\n     *  if the XML is corrupt stay with the last detail you have\n     *  @throws  target.TargetIsExists on if target isn't exists\n     *  @throws target.UniqueTarget on if target isn't unique\n     *  @throws target.DependsOnConflict on there is conflict between targets\n     *  @throws target.RequiredForConflict on there is conflict between targets\n     *  @throws xml.XmlIsExists on the XML not exists\n     */\n    @Override\n    public void loadFile(String path) throws Exception {/// option 2 in the menu\n        Map<String, Target> targetMapTemp;\n        //// member\n        Xmlimpl file = new Xmlimpl(path);                       // load XML file\n        targetMapTemp = file.makeAMap();// check if the XML file is proper and crate map (key - target name, val - target) from file\n        workingDirectory= file.getWorkingDirectoryXml();\n        loadFile = true;\n        targetMap = targetMapTemp;\n        maxThreads=file.getMaxParallelism();\n        serielSets=file.getSerielSets();\n\n    }\n\n    /** Targets in formation\n     *  @return all the information about the graph:\n     *  amount of roots\n     *  amount of leaves\n     *  amount of middles\n     *  amount of independents\n     */\n    @Override\n    public GraphInformation targetsInFormation() throws Exception{ /// option 2 in the menu\n        if (!loadFile)\n            throw new XmlNotLoad();\n        int amountOfTargets = targetMap.entrySet().size();          // count all the targets in the map\n\n        int levies = (int) targetMap.entrySet()                                     // count all the levies targets in the map\n                .stream()\n                .filter(e -> e.getValue().getType().equals(Target.Type.LEAF))\n                .count();\n\n        int roots = (int) targetMap.entrySet()                                      // count all the roots targets in the map\n                .stream()\n                .filter(e -> e.getValue().getType().equals(Target.Type.ROOT))\n                .count();\n\n        int middles = (int) targetMap.entrySet()                                    // count all the middles targets in the map\n                .stream()\n                .filter(e -> e.getValue().getType().equals(Target.Type.MIDDLE))\n                .count();\n\n        int independents = (int) targetMap.entrySet()                               // count all the independents targets in the map\n                .stream()\n                .filter(e -> e.getValue().getType().equals(Target.Type.INDEPENDENTS))\n                .count();\n\n        return new GraphInformation(amountOfTargets, levies, middles, roots, independents);\n    }\n\n    /** Specific target information\n     *  @return all the information about the targets:\n     *  target name\n     *  type (root, middle , leaf , independent)\n     *  all the target that depends-on\n     *  all the target required-for\n     *  user data\n     * @throws TargetIsExists on if target isn't exists\n     */\n    @Override\n    public Information specificTargetInformation(String name) throws Exception {\n        if (!loadFile)\n            throw new XmlNotLoad();\n        Target target = targetMap.get(name);\n\n        if (target == null)                                               // the  target not found in the map\n            throw new TargetIsExists(name);\n        else {\n            Target.Type type = target.getType();\n            Set<String> dependsOn = target.getSetDependsOn();\n            Set<String> requiredFor = target.getSetRequiredFor();\n            String data = target.getUserData();\n            return new TargetInformation(name, type, dependsOn, requiredFor, data);\n        }\n    }\n\n    /** Specific target information\n     *  @return all the information between the targets:\n     *  target names\n     *  all the path between the targets with a specific dependence\n     * @throws TargetIsExists on if target isn't exists\n     */\n    @Override\n    public PathBetweenTwoTargetsInfo findAPathBetweenTwoTargets(String t1, String t2, Dependence dependence) throws Exception {\n        if (!loadFile)\n            throw new XmlNotLoad();\n        Target target1 = targetMap.get(t1);\n        Target target2 = targetMap.get(t2);\n        IntX i = new IntX();\n        i.x = 0;\n\n        List<Targets> list = new ArrayList<>();\n        list.add(new Targets());\n\n       // check if the two targets are in the map\n        if (null == target1)\n            throw new TargetIsExists(t1);\n        if (null == target2)\n            throw new TargetIsExists(t2);\n\n        if (dependence == Dependence.REQUIRED_FOR && target1.getSetRequiredFor().size() != 0)\n            findPathBetweenTwoTargetsHelper(target1,target2,list,i, dependence);\n        else if (dependence == Dependence.DEPENDS_ON && target1.getSetDependsOn().size() != 0)\n            findPathBetweenTwoTargetsHelper(target1,target2,list,i , dependence);\n\n        return  new PathBetweenTwoTargetsInfo(t1 , t2 , dependence.name() , list);\n    }\n    /** Specific target information - helper (recursion)\n     */\n    public void findPathBetweenTwoTargetsHelper(Target t1, Target t2, List<Targets> listSt , IntX index , Dependence dependence) {\n\n        Set<String> tOneSet;\n\n        if (Dependence.DEPENDS_ON == dependence)\n            tOneSet = t1.getSetDependsOn();\n        else\n            tOneSet = t1.getSetRequiredFor();\n\n\n        if (tOneSet.size() == 0) {\n            listSt.get(index.x).getTargetsList().remove(listSt.get(index.x).getTargetsList().size() - 1);\n        }\n\n        else {\n            for (String st : tOneSet) {  /// search in all DEPENDS_ON or REQUIRED_FOR for each target\n                if (st.equals(t2.getName())) {\n                    listSt.add(new Targets()); /// the next list\n                    listSt.get(index.x).setFind(true); // find\n                    listSt.get(listSt.size()-1).getTargetsList().addAll(listSt.get(index.x).getTargetsList());\n                    ++index.x;\n                }\n\n                else if (! listSt.get(index.x).getTargetsList().contains(st)) { /// skip on direct dependency and handle cycle\n                    listSt.get(index.x).getTargetsList().add(st);\n                    findPathBetweenTwoTargetsHelper(targetMap.get(st), t2, listSt, index , dependence);\n                }\n            }\n\n            if ( listSt.get(index.x).getTargetsList().size() != 0 )\n                listSt.get(index.x).getTargetsList().remove(listSt.get(index.x).getTargetsList().size()-1);\n        }\n    }\n\n    @Override\n    public List<Information> runTask(int time, boolean random, float success, float warning,boolean keepLastRun) throws Exception {\n        /*\n        if (!loadFile)\n            throw new XmlNotLoad();\n        boolean done = false;\n        res = new ArrayList<Information>();\n        //String path=openDir();\n        if(!keepLastRun){\n            for(Map.Entry<String, Target> e : targetMap.entrySet()){//set all targets to waiting\n                e.getValue().SetStatus(Target.Status.Waiting);\n            }\n        }\n        else{\n            for(Map.Entry<String, Target> e : targetMap.entrySet()){//set all failed or skipped targets to waiting\n                if(e.getValue().getStatus()== Target.Status.Skipped||e.getValue().getStatus()== Target.Status.Failure){\n                    e.getValue().SetStatus(Target.Status.Waiting);\n                }\n            }\n        }\n        Set<Target>indi=new HashSet<>();\n        Set<Target>leavies=new HashSet<>();\n\n\n        for(Map.Entry<String,Target>e:targetMap.entrySet()){\n            if(e.getValue().getType()== Target.Type.INDEPENDENTS){\n                indi.add(e.getValue());\n            }\n            else if(e.getValue().getType()== Target.Type.LEAF){\n                leavies.add(e.getValue());//run on all leavies\n            }\n        }     /*\n        for(Target t:indi){\n            t.run(time,random,success,warning,res,targetMap,path);\n        }\n        for(Target t:leavies){\n            t.run(time,random,success,warning,res,targetMap,path);\n        }\n\n        while(!done) {\n            for (Map.Entry<String, Target> e : targetMap.entrySet()) {\n                e.getValue().run(time,random,success,warning,res,targetMap,path);\n            }\n            done=taskDoneCheck();\n        }\n\n        return res;\n        */\n        return null;//temp\n    }\n    public void taskSetUp(int time, boolean random, float success, float warning,boolean keepLastRun,String taskType,int threadsNum) throws Exception {\n        int randomTime=0;\n        if (!loadFile)\n            throw new XmlNotLoad();\n        String path=openDir(taskType);\n        if(!keepLastRun){\n            for(Map.Entry<String, Target> e : targetMap.entrySet()){//set all targets to waiting\n                e.getValue().SetStatus(Target.Status.Waiting);\n            }\n        }\n        else{\n            for(Map.Entry<String, Target> e : targetMap.entrySet()){//set all failed or skipped targets to waiting\n                if(e.getValue().getStatus()== Target.Status.Skipped||e.getValue().getStatus()== Target.Status.Failure){\n                    e.getValue().SetStatus(Target.Status.Waiting);\n                }\n            }\n        }\n        //set up thread pool\n        ExecutorService threads= Executors.newFixedThreadPool(threadsNum);\n        List<Target> l=new ArrayList<>();\n        Set<String> req;\n        Random r=new Random();\n        //now set variables for run\n        for(Map.Entry<String, Target> e : targetMap.entrySet()){//set all targets to waiting\n            if(random){\n                randomTime=r.nextInt(time)+1;\n            }\n            e.getValue().setRunTime(randomTime);\n            e.getValue().setSuccessChance(success);\n            e.getValue().setWarningChance(warning);\n            e.getValue().setPath(path);\n            e.getValue().setStartWaitingTime(System.currentTimeMillis());\n            if(e.getValue().getType()==Target.Type.LEAF||e.getValue().getType()==Target.Type.LEAF){\n                l.add(e.getValue());\n            }\n        }\n        for(Target tar:l){\n            tar.setIsInQueue(true);\n            threads.execute(tar);\n        }\n        //run on all targets\n        while(!taskDoneCheck()) {\n            for(Map.Entry<String, Target> e : targetMap.entrySet()){\n                if(e.getValue().getStatus()==Target.Status.Waiting&&!e.getValue().getIsInQueue()) {\n                    if (checkSerielSets(e.getValue().getName())) {\n                        e.getValue().setIsInQueue(true);\n                        threads.execute(e.getValue());\n                    }\n                }\n            }\n        }\n        //if we got here the there is not more waiting targets\n        threads.shutdown();\n\n    }\n    //may need to splite to 2 funcs because to task types\n    private String openDir(String taskType) throws IOException {//doesnt have path yet,this func create directory for simulation task\n        Path path=Paths.get(workingDirectory);\n        Files.createDirectories(path);\n        //File dir = new File(workingDirectory);\n        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"dd.mm.yyyy HH.MM.SS\");\n        LocalDateTime now = LocalDateTime.now();\n        String s =taskType+\" \"+dtf.format(now);\n        s= workingDirectory+\"\\\\\"+s;\n        Path innerPath=Paths.get(s);\n        Files.createDirectories(innerPath);\n        //File dir2 = new File(s);\n        return s;\n    }\n    private boolean taskDoneCheck(){\n        for(Map.Entry<String, Target> e : targetMap.entrySet()){\n            if(e.getValue().getStatus()== Target.Status.Waiting) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    @Override\n    public void writeTargetsAndInformationToTextFile(String path)throws Exception{\n        try{\n        ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(path));\n            out.writeObject(targetMap);\n            out.writeObject(workingDirectory);\n            out.writeObject(res);\n            out.flush();\n        }\n        catch (FileNotFoundException e){throw e;}\n        catch (Exception e){throw e;}\n    }\n    @Override\n    public void readTargetsAndInformationToTextFile(String path) throws Exception {\n        // Read the array list  from the file\n        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream(path))) {\n            // we know that we read array list of Persons\n            loadFile = true;\n            targetMap = (Map<String, Target>) in.readObject();\n            workingDirectory = (String)  in.readObject();\n            res = (ArrayList<Information>) in.readObject();\n        }\n        catch (FileNotFoundException e){throw e;}\n        catch (Exception e){throw e;}\n    }\n\n    /** Exit\n     */\n    @Override\n    public void exit() {\n        System.exit(0);\n    }\n\n    /** Circuit detection info\n     *  @return all the information between the targets:\n     *  target names\n     *  all the cycle paths\n     * @throws TargetIsExists on if target isn't exists\n     */\n    @Override\n    public CircuitDetectionInfo circuitDetection(String name)throws Exception {\n        if (!loadFile)\n            throw new XmlNotLoad();\n        PathBetweenTwoTargetsInfo info = findAPathBetweenTwoTargets(name,name,Dependence.DEPENDS_ON);\n        return new CircuitDetectionInfo(name , info.getPaths());\n    }\n    public boolean ifRunTask(){\n        return res==null;\n    }\n\n    public synchronized Map<String, Target> getMap(){return targetMap;}\n    public int getMaxThreads(){\n        return maxThreads;\n    }\n    private boolean checkSerielSets(String t){\n        for (Set<String> set:serielSets){\n            if(set.contains(t)){\n                for(String s : set){\n                    if(targetMap.get(s).getIsInQueue()){\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/engine/engineImpl.java b/Engine/src/engine/engineImpl.java
--- a/Engine/src/engine/engineImpl.java	(revision 29d4bc19db9754ac04f692fcddb4936a9ab677fe)
+++ b/Engine/src/engine/engineImpl.java	(date 1640618272194)
@@ -45,8 +45,8 @@
         workingDirectory= file.getWorkingDirectoryXml();
         loadFile = true;
         targetMap = targetMapTemp;
-        maxThreads=file.getMaxParallelism();
-        serielSets=file.getSerielSets();
+        maxThreads = file.getMaxParallelism();
+        serielSets = file.getSerielSets();
 
     }
 
@@ -373,4 +373,20 @@
         }
         return true;
     }
+    public void whatIf(String target, List<String>  newList, Dependence dependence) {
+        Set<String> tOneSet;
+        if (!newList.contains(target)) {
+            newList.add(target);
+            if (Dependence.DEPENDS_ON == dependence)
+                tOneSet = targetMap.get(target).getSetDependsOn();
+            else
+                tOneSet = targetMap.get(target).getSetRequiredFor();
+
+            if (tOneSet.size() != 0) {
+                for (String st2 : tOneSet) {
+                    whatIf(targetMap.get(st2).getName(), newList, dependence);
+                }
+            }
+        }
+    }
 }
Index: Engine/src/engine/engine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engine;\n\nimport information.Information;\nimport target.Target;\nimport target.Targets;\nimport java.util.*;\n\nimport java.util.List;\n\npublic interface engine{\n\n    Map<String, Target> getMap();\n    enum Dependence{DEPENDS_ON , REQUIRED_FOR}\n    void loadFile(String path) throws Exception;\n    Information targetsInFormation() throws Exception ;\n    Information specificTargetInformation(String name) throws Exception;\n    Information findAPathBetweenTwoTargets(String t1,String t2 , Dependence d) throws Exception;\n    List<Information> runTask(int time, boolean random, float success, float warning,boolean keepLastRun) throws Exception;\n    Information circuitDetection(String name)throws Exception;\n    void writeTargetsAndInformationToTextFile(String path)throws Exception;\n    void readTargetsAndInformationToTextFile(String path) throws Exception;\n    boolean ifRunTask();\n\n    void exit();\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/engine/engine.java b/Engine/src/engine/engine.java
--- a/Engine/src/engine/engine.java	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/Engine/src/engine/engine.java	(date 1640617936497)
@@ -1,5 +1,6 @@
 package engine;
 
+import information.GraphInformation;
 import information.Information;
 import target.Target;
 import target.Targets;
@@ -8,11 +9,12 @@
 import java.util.List;
 
 public interface engine{
-
-    Map<String, Target> getMap();
     enum Dependence{DEPENDS_ON , REQUIRED_FOR}
+
+    Map<String, Target> getMap();
+    public void whatIf(String t1, List<String>  newList, Dependence dependence);
     void loadFile(String path) throws Exception;
-    Information targetsInFormation() throws Exception ;
+    GraphInformation targetsInFormation() throws Exception ;
     Information specificTargetInformation(String name) throws Exception;
     Information findAPathBetweenTwoTargets(String t1,String t2 , Dependence d) throws Exception;
     List<Information> runTask(int time, boolean random, float success, float warning,boolean keepLastRun) throws Exception;
@@ -20,10 +22,5 @@
     void writeTargetsAndInformationToTextFile(String path)throws Exception;
     void readTargetsAndInformationToTextFile(String path) throws Exception;
     boolean ifRunTask();
-
     void exit();
-
-
-
-
 }
Index: Engine/src/xml/Xmlimpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package xml;\n//import generated2.*;\n//import generated2.GPUPDescriptor.GPUPSerialSets.GPUPSerialSet;\nimport generated.*;\nimport target.DependsOnConflict;\nimport target.*;\n\nimport java.io.FileInputStream;\nimport java.io.InputStream;\nimport javax.xml.bind.JAXBContext;\nimport javax.xml.bind.JAXBException;\nimport javax.xml.bind.Unmarshaller;\nimport java.io.File;\nimport java.util.*;\n\n\npublic class Xmlimpl implements Xml {\n    private final generated.GPUPDescriptor gpupDescriptor;\n    private final static String JAXB_XML_PACKAGE_NAME = \"generated\"; /////////////////\n\n    public Xmlimpl(String path) throws Exception {\n        try {\n            InputStream inputStream = new FileInputStream(new File(path));\n            gpupDescriptor = deserializeFrom(inputStream);\n        } catch (Exception ex) {\n            throw new XmlIsExists(path);\n        }\n    }\n    private static GPUPDescriptor deserializeFrom(InputStream in) throws JAXBException {\n        JAXBContext jc = JAXBContext.newInstance(JAXB_XML_PACKAGE_NAME);\n        Unmarshaller u = jc.createUnmarshaller();\n        return (GPUPDescriptor) u.unmarshal(in);\n    }\n    public Map<String, Target> makeAMap() throws Exception {\n        Target newTarget;\n        Map<String, Target> targetsMap = new HashMap<>();\n\n        for (GPUPTarget p : gpupDescriptor.getGPUPTargets().getGPUPTarget()) {\n\n            if (targetsMap.containsKey(p.getName())) {\n                throw new UniqueTarget(p.getName());\n            } else {\n                Set<String> newSetDependency = new HashSet<>();\n                Set<String> newSetRequiredFor = new HashSet<>();\n\n                if (p.getGPUPTargetDependencies() == null)\n                    newTarget = new Target(p.getName(), p.getGPUPUserData(), newSetDependency, newSetRequiredFor);\n\n                else {\n                    for (GPUPTargetDependencies.GPUGDependency p2 : p.getGPUPTargetDependencies().getGPUGDependency()) {\n                        if (p2.getType().equals(\"dependsOn\"))\n                            newSetDependency.add(p2.getValue());\n                        else if (p2.getType().equals(\"requiredFor\"))\n                            newSetRequiredFor.add(p2.getValue());\n                    }\n                    newTarget = new Target(p.getName(), p.getGPUPUserData(), newSetDependency, newSetRequiredFor);\n                }\n\n                targetsMap.put(newTarget.getName(), newTarget);\n            }\n        }\n /* /// test :\n\n        Set <String> setA = new HashSet<>();\n        setA.add(\"B\");\n        setA.add(\"G\");\n        Set <String> setB = new HashSet<>();\n        setB.add(\"C\");\n        Set <String> setC = new HashSet<>();\n        setC.add(\"A\");\n        setC.add(\"F\");\n        Set <String> setD = new HashSet<>();\n        setD.add(\"E\");\n        Set <String> setE = new HashSet<>();\n        setE.add(\"A\");\n        Set <String> setF = new HashSet<>();\n\n\n        targetsMap.put(\"A\" , new Target(\"A\" , null , setA , new HashSet()));\n        targetsMap.put(\"B\" , new Target(\"B\" , null , setB , new HashSet()));\n        targetsMap.put(\"C\" , new Target(\"C\" , null, setC , new HashSet()));\n        targetsMap.put(\"D\" , new Target(\"D\" , null , setD , new HashSet()));\n        targetsMap.put(\"E\" , new Target(\"E\" , null , setE , new HashSet()));\n        targetsMap.put(\"F\" , new Target(\"F\" , null , setF , new HashSet()));\n*/\n        organizeTheDependencies(targetsMap);\n        makeTypeForTargets(targetsMap);\n            return targetsMap;\n    }\n    public void organizeTheDependencies(Map<String, Target> targetMap) throws Exception {\n        Set<String> setOfKey = targetMap.keySet();\n\n        for (String targetKey: setOfKey) // organize all the map\n        {\n            // organize the RequiredFor of all target\n            for (String st2 : targetMap.get(targetKey).getSetDependsOn()) {\n                if (setOfKey.contains(st2)) { // check if the target is exists in the xml file\n                    if (!targetMap.get(st2).getSetDependsOn().contains(targetKey)) // check if there is a conflict\n                        targetMap.get(st2).addToSetRequiredFor(targetKey);\n                    else throw new DependsOnConflict(targetKey,st2);\n                }\n                else\n                    throw new TargetIsExists(st2);\n            }\n            // organize the DependsOn of all target\n            for (String st2 : targetMap.get(targetKey).getSetRequiredFor()) {\n                if (setOfKey.contains(st2)) { // check if the target is exists in the xml file\n                    if (!targetMap.get(st2).getSetRequiredFor().contains(targetKey)) // check if there is a conflict\n                        targetMap.get(st2).addToSetDependsOn(targetKey);\n                    else throw new RequiredForConflict(targetKey,st2);\n                }\n                else\n                    throw new TargetIsExists(st2);\n            }\n        }\n    }\n    public void makeTypeForTargets(Map<String, Target> targetMap) {\n        targetMap.forEach((k,t) ->\n                {\n                    if (t.getSetRequiredFor().size() == 0 && t.getSetDependsOn().size() == 0)\n                        t.SetType(Target.Type.INDEPENDENTS);\n                    else if (t.getSetDependsOn().size() == 0)\n                        t.SetType(Target.Type.LEAF);\n                    else if (t.getSetRequiredFor().size() == 0)\n                        t.SetType(Target.Type.ROOT);\n                    else\n                        t.SetType(Target.Type.MIDDLE);\n                }\n        );\n    }\n    public String getWorkingDirectoryXml(){\n        return gpupDescriptor.getGPUPConfiguration().getGPUPWorkingDirectory();\n    }\n    /*\n    public int getMaxParallelism(){\n        return gpupDescriptor.getGPUPConfiguration().getGPUPMaxParallelism();\n    }\n\n\n    public Set<Set<String>> getSerielSets(){\n        Set<Set<String>> res=new HashSet<>();\n        List<GPUPSerialSet> temp=gpupDescriptor.getGPUPSerialSets().getGPUPSerialSet();\n\n        for(GPUPSerialSet s:temp){\n            Set<String> set=new HashSet<>();\n            String t=\"\";\n            String targets=s.getTargets();\n            for(int i=0;i<targets.length();i++){\n                if(targets.charAt(i)==','){\n                    set.add(t);\n                    t=\"\";\n                }\n                else{\n                    t+=targets.charAt(i);\n                }\n            }\n            res.add(set);\n        }\n        return res;\n    }\n     */\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/xml/Xmlimpl.java b/Engine/src/xml/Xmlimpl.java
--- a/Engine/src/xml/Xmlimpl.java	(revision 29d4bc19db9754ac04f692fcddb4936a9ab677fe)
+++ b/Engine/src/xml/Xmlimpl.java	(date 1640618301001)
@@ -16,7 +16,7 @@
 
 public class Xmlimpl implements Xml {
     private final generated.GPUPDescriptor gpupDescriptor;
-    private final static String JAXB_XML_PACKAGE_NAME = "generated"; /////////////////
+    private final static String JAXB_XML_PACKAGE_NAME = "generated2"; /////////////////
 
     public Xmlimpl(String path) throws Exception {
         try {
Index: UI/src/FXML/error/errorMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package FXML.error;\n\nimport FXML.file.fileController;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.stage.Stage;\n\nimport java.io.IOException;\nimport java.net.URL;\n\npublic class errorMain {\n\n    public final static String ERROR_FXML = \"/FXML/error/erroe.fxml\";\n\n    public errorMain(Exception e) throws IOException {\n        Stage primaryStage = new Stage();\n        primaryStage.setTitle(\"Exception\");\n        FXMLLoader fxmlLoader = new FXMLLoader();\n        URL url = getClass().getResource(ERROR_FXML);\n        fxmlLoader.setLocation(url);\n        Parent root = fxmlLoader.load(url.openStream());\n        Scene scene = new Scene(root, 400, 200);\n        primaryStage.setScene(scene);\n        primaryStage.show();\n        errorController controller = fxmlLoader.getController();\n        controller.error(e);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/error/errorMain.java b/UI/src/FXML/error/errorMain.java
--- a/UI/src/FXML/error/errorMain.java	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/error/errorMain.java	(date 1640617936501)
@@ -14,18 +14,21 @@
 
     public final static String ERROR_FXML = "/FXML/error/erroe.fxml";
 
-    public errorMain(Exception e) throws IOException {
-        Stage primaryStage = new Stage();
-        primaryStage.setTitle("Exception");
-        FXMLLoader fxmlLoader = new FXMLLoader();
-        URL url = getClass().getResource(ERROR_FXML);
-        fxmlLoader.setLocation(url);
-        Parent root = fxmlLoader.load(url.openStream());
-        Scene scene = new Scene(root, 400, 200);
-        primaryStage.setScene(scene);
-        primaryStage.show();
-        errorController controller = fxmlLoader.getController();
-        controller.error(e);
+    public errorMain(Exception e) {
+        try {
+            Stage primaryStage = new Stage();
+            primaryStage.setTitle("Exception");
+            FXMLLoader fxmlLoader = new FXMLLoader();
+            URL url = getClass().getResource(ERROR_FXML);
+            fxmlLoader.setLocation(url);
+            Parent root = fxmlLoader.load(url.openStream());
+            Scene scene = new Scene(root, 400, 200);
+            primaryStage.setScene(scene);
+            primaryStage.show();
+            errorController controller = fxmlLoader.getController();
+            controller.error(e);
+        }
+        catch (Exception ex){}
     }
 
 }
Index: UI/src/FXML/file/fileController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package FXML.file;\n\nimport FXML.error.errorController;\nimport FXML.error.errorMain;\nimport FXML.main.mainAppController;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.text.Text;\nimport javafx.scene.text.TextFlow;\nimport javafx.stage.FileChooser;\nimport javafx.stage.Stage;\nimport target.Target;\nimport target.targetTable;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.Map;\n\n\npublic class fileController {\n    private mainAppController mainController;\n    @FXML\n    private Button loadFileButton;\n\n    @FXML\n    void loadFileButton(ActionEvent event) throws IOException {\n        try{\n            File file = new FileChooser().showOpenDialog(new Stage());\n            mainController.getEngine().loadFile(file.getPath());\n            mainController.isFileSelected().set(true);\n            addDataToTable();\n            mainController.showTable();\n        }\n        catch (Exception e) {\n              new errorMain(e);\n        }\n    }\n\n    public void setMainController(mainAppController mainController) {\n        this.mainController = mainController;\n    }\n\n    public void addDataToTable() {\n        try {\n            mainController.observableList().removeAll();\n            Map<String, Target> map = mainController.getEngine().getMap();\n            for (String keys : map.keySet())\n            {\n                mainController.observableList().add(new targetTable(map.get(keys)));\n            }\n        }\n        catch (Exception e){\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/file/fileController.java b/UI/src/FXML/file/fileController.java
--- a/UI/src/FXML/file/fileController.java	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/file/fileController.java	(date 1640617936503)
@@ -1,36 +1,47 @@
 package FXML.file;
-
-import FXML.error.errorController;
 import FXML.error.errorMain;
 import FXML.main.mainAppController;
-import javafx.collections.FXCollections;
-import javafx.collections.ObservableList;
+import engine.engine;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
-import javafx.fxml.FXMLLoader;
-import javafx.scene.Parent;
-import javafx.scene.Scene;
 import javafx.scene.control.Button;
-import javafx.scene.text.Text;
-import javafx.scene.text.TextFlow;
+import javafx.scene.layout.BorderPane;
 import javafx.stage.FileChooser;
 import javafx.stage.Stage;
 import target.Target;
 import target.targetTable;
-
 import java.io.File;
-import java.io.IOException;
-import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
 import java.util.Map;
 
-
 public class fileController {
+
     private mainAppController mainController;
-    @FXML
-    private Button loadFileButton;
+    public void setMainController(mainAppController mainController) {
+        this.mainController = mainController;
+    }
+    public void addDataToTable() {
+        try {
+            mainController.observableList().clear();
+            Map<String, Target> map = mainController.getEngine().getMap();
+            for (String keys : map.keySet()) {
+                targetTable t = new targetTable(map.get(keys));
+                //t.setSerialSetTableCol();
+                List<String > list= new ArrayList<>();
+                mainController.getEngine().whatIf(t.getName(),list, engine.Dependence.DEPENDS_ON);
+                t.setTotalDependsOnTableCol(list.size()-1);
+                list.clear();
+                mainController.getEngine().whatIf(t.getName(),list, engine.Dependence.REQUIRED_FOR);
+                t.setTotalRequiredForTableCol(list.size()-1);
+                mainController.observableList().add(t);
+            }
+        }
+        catch (Exception e){new errorMain(e);}
+    }
 
-    @FXML
-    void loadFileButton(ActionEvent event) throws IOException {
+    ////// set on action button
+    @FXML void loadFileButton(ActionEvent event) {
         try{
             File file = new FileChooser().showOpenDialog(new Stage());
             mainController.getEngine().loadFile(file.getPath());
@@ -39,24 +50,11 @@
             mainController.showTable();
         }
         catch (Exception e) {
-              new errorMain(e);
+            new errorMain(e);
         }
     }
 
-    public void setMainController(mainAppController mainController) {
-        this.mainController = mainController;
-    }
-
-    public void addDataToTable() {
-        try {
-            mainController.observableList().removeAll();
-            Map<String, Target> map = mainController.getEngine().getMap();
-            for (String keys : map.keySet())
-            {
-                mainController.observableList().add(new targetTable(map.get(keys)));
-            }
-        }
-        catch (Exception e){
-        }
-    }
+    ////// fxml member
+    @FXML private BorderPane image;
+    @FXML private Button loadFileButton;
 }
Index: UI/src/FXML/task/processing/targetInfoTaskController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/task/processing/targetInfoTaskController.java b/UI/src/FXML/task/processing/targetInfoTaskController.java
new file mode 100644
--- /dev/null	(date 1640617936507)
+++ b/UI/src/FXML/task/processing/targetInfoTaskController.java	(date 1640617936507)
@@ -0,0 +1,20 @@
+package FXML.task.processing;
+
+import javafx.fxml.FXML;
+import javafx.scene.text.Text;
+
+import java.util.List;
+
+public class targetInfoTaskController {
+    @FXML private Text nameTarget;
+    @FXML private Text statusTarget;
+    @FXML private Text serialSetInfo;
+    @FXML private Text processStatus;
+    public targetInfoTaskController(){}
+    public void setInfo(String name , String type , String serialSets ,  String process){
+        nameTarget.setText(name);
+        statusTarget.setText(type);
+        serialSetInfo.setText(serialSets);
+        processStatus.setText(process);
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ArtifactsWorkspaceSettings\">\n    <artifacts-to-build>\n      <artifact name=\"Engine:jar\" />\n      <artifact name=\"Exception:jar\" />\n      <artifact name=\"UI:jar\" />\n    </artifacts-to-build>\n  </component>\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"339a630a-84de-40d5-9cbb-25c18723ff73\" name=\"Default Changelist\" comment=\"bar\">\n      <change afterPath=\"$PROJECT_DIR$/Engine/src/generated/G.P.U.P-V1.xsd\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/Engine/src/generated/GPUPConfiguration.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/Engine/src/generated/GPUPDescriptor.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/Engine/src/generated/GPUPTarget.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/Engine/src/generated/GPUPTargetDependencies.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/Engine/src/generated/GPUPTargets.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/Engine/src/generated/ObjectFactory.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/UI/src/FXML/task/processing/targetInfoMain.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/UI/src/FXML/task/processing/targetInfoTaskController.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/UI/src/FXML/task/processing/targetInformationTask.fxml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/UI/src/FXML/task/taskController.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/UI/src/FXML/utility/buttonColor.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Engine/src/engine/engine.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Engine/src/engine/engine.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Engine/src/engine/engineImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Engine/src/engine/engineImpl.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Engine/src/information/GraphInformation.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Engine/src/information/GraphInformation.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Engine/src/target/targetTable.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Engine/src/target/targetTable.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Engine/src/xml/Xmlimpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Engine/src/xml/Xmlimpl.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/error/errorMain.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/error/errorMain.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/file/css/file.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/file/css/file.css\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/file/file.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/file/file.fxml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/file/fileController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/file/fileController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/main/css/mainApp.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/main/css/mainApp.css\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/main/mainApp.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/main/mainApp.fxml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/main/mainAppController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/main/mainAppController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/path/css/path.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/path/css/path.css\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/path/path.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/path/path.fxml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/path/pathController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/path/pathController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/table/table.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/table/table.fxml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/table/tableController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/table/tableController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/task/task.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/FXML/task/task.fxml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/whatIf/whatIf.fxml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/FXML/whatIf/whatIfController.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Engine/engine/engine$Dependence.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Engine/engine/engine$Dependence.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Engine/engine/engine.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Engine/engine/engine.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Engine/information/GraphInformation.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Engine/information/GraphInformation.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Engine/target/Target.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Engine/target/Target.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Engine/xml/Xmlimpl.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Engine/xml/Xmlimpl.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/UI/UIimpl.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/UI/UIimpl.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/UI/main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/UI/main.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"DefaultGradleProjectSettings\">\n    <option name=\"isMigrated\" value=\"true\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\n      <list>\n        <option value=\"nov israeli &lt;nov.israeli888@gmail.com&gt;\" />\n      </list>\n    </option>\n    <option name=\"PUSH_TAGS\">\n      <GitPushTagMode>\n        <option name=\"argument\" value=\"--tags\" />\n        <option name=\"title\" value=\"All\" />\n      </GitPushTagMode>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"HighlightingSettingsPerFile\">\n    <setting file=\"jar:///Library/Java/JavaVirtualMachines/jdk1.8.0_301.jdk/Contents/Home/src.zip!/java/util/HashSet.java\" root0=\"SKIP_INSPECTION\" />\n  </component>\n  <component name=\"IdeDocumentHistory\">\n    <option name=\"CHANGED_PATHS\">\n      <list>\n        <option value=\"$PROJECT_DIR$/Engine/src/target/Target.java\" />\n        <option value=\"$PROJECT_DIR$/Engine/src/engine/engineImpl.java\" />\n        <option value=\"$PROJECT_DIR$/Engine/src/engine/engine.java\" />\n        <option value=\"$PROJECT_DIR$/UI/src/UIimpl.java\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectFrameBounds\" extendedState=\"6\">\n    <option name=\"x\" value=\"390\" />\n    <option name=\"y\" value=\"30\" />\n    <option name=\"width\" value=\"2100\" />\n    <option name=\"height\" value=\"1500\" />\n  </component>\n  <component name=\"ProjectId\" id=\"20iixnmBC5nOpmacU5bSVUJFsGH\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectView\">\n    <navigator proportions=\"\" version=\"1\">\n      <foldersAlwaysOnTop value=\"true\" />\n    </navigator>\n    <panes>\n      <pane id=\"PackagesPane\" />\n      <pane id=\"ProjectPane\">\n        <subPane>\n          <expand>\n            <path>\n              <item name=\"GPUP1\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"GPUP1\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n            <path>\n              <item name=\"GPUP1\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"GPUP1\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"Engine\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n            <path>\n              <item name=\"GPUP1\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"GPUP1\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"Engine\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"src\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n            <path>\n              <item name=\"GPUP1\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"GPUP1\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"Engine\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"src\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"engine\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n            <path>\n              <item name=\"GPUP1\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"GPUP1\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"Engine\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"src\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"target\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n            <path>\n              <item name=\"GPUP1\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"GPUP1\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"UI\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n            <path>\n              <item name=\"GPUP1\" type=\"b2602c69:ProjectViewProjectNode\" />\n              <item name=\"GPUP1\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"UI\" type=\"462c0819:PsiDirectoryNode\" />\n              <item name=\"src\" type=\"462c0819:PsiDirectoryNode\" />\n            </path>\n          </expand>\n          <select />\n        </subPane>\n      </pane>\n      <pane id=\"Scope\" />\n    </panes>\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\n    <property name=\"ChangesTree.GroupingKeys\" value=\"directory\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"extract.method.default.visibility\" value=\"private\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/UI/src/FXML/utility\" />\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"configurable.group.language\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/UI/src/FXML/utility\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/UI/src/FXML/task/processing\" />\n      <recent name=\"$PROJECT_DIR$/UI/src/FXML/task/procssing\" />\n      <recent name=\"$PROJECT_DIR$/UI/src/FXML/circle/css\" />\n      <recent name=\"$PROJECT_DIR$/UI/src/FXML/file/css\" />\n      <recent name=\"$PROJECT_DIR$/UI/src/FXML/file\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"main\" />\n      <module name=\"UI\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"SvnConfiguration\">\n    <configuration />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <created>1636534060126</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1636534060126</updated>\n      <workItem from=\"1636534062741\" duration=\"27000\" />\n      <workItem from=\"1636534134964\" duration=\"484000\" />\n      <workItem from=\"1636534671547\" duration=\"16035000\" />\n      <workItem from=\"1636712961690\" duration=\"172000\" />\n      <workItem from=\"1636807537670\" duration=\"4000\" />\n      <workItem from=\"1636972352516\" duration=\"34939000\" />\n      <workItem from=\"1637136059584\" duration=\"17317000\" />\n      <workItem from=\"1637224988694\" duration=\"7528000\" />\n      <workItem from=\"1637745792876\" duration=\"2624000\" />\n      <workItem from=\"1637772271595\" duration=\"54000\" />\n      <workItem from=\"1637772344957\" duration=\"629000\" />\n      <workItem from=\"1637783225958\" duration=\"63000\" />\n      <workItem from=\"1637826383635\" duration=\"1690000\" />\n      <workItem from=\"1637828487713\" duration=\"842000\" />\n      <workItem from=\"1637939721999\" duration=\"116000\" />\n      <workItem from=\"1637939992079\" duration=\"5273000\" />\n      <workItem from=\"1637947111921\" duration=\"10000\" />\n      <workItem from=\"1640022925437\" duration=\"1256000\" />\n      <workItem from=\"1640025772025\" duration=\"178000\" />\n      <workItem from=\"1640119415741\" duration=\"2203000\" />\n      <workItem from=\"1640122014129\" duration=\"7416000\" />\n      <workItem from=\"1640169812525\" duration=\"4124000\" />\n      <workItem from=\"1640179370532\" duration=\"8483000\" />\n      <workItem from=\"1640260233220\" duration=\"19280000\" />\n      <workItem from=\"1640367445428\" duration=\"52500000\" />\n      <workItem from=\"1640599702615\" duration=\"9660000\" />\n      <workItem from=\"1640611629599\" duration=\"3399000\" />\n    </task>\n    <task id=\"LOCAL\u200E00001\" summary=\"zxc\">\n      <created>1636536346510</created>\n      <option name=\"number\" value=\"LOCAL\u200E00001\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00001\" />\n      <updated>1636536346510</updated>\n    </task>\n    <task id=\"LOCAL\u200E00002\" summary=\"zxc\">\n      <created>1636536370594</created>\n      <option name=\"number\" value=\"LOCAL\u200E00002\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00002\" />\n      <updated>1636536370594</updated>\n    </task>\n    <task id=\"LOCAL\u200E00003\" summary=\"bar sela\">\n      <created>1636536377644</created>\n      <option name=\"number\" value=\"LOCAL\u200E00003\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00003\" />\n      <updated>1636536377644</updated>\n    </task>\n    <task id=\"LOCAL\u200E00004\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636540270843</created>\n      <option name=\"number\" value=\"LOCAL\u200E00004\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00004\" />\n      <updated>1636540270843</updated>\n    </task>\n    <task id=\"LOCAL\u200E00005\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636542968700</created>\n      <option name=\"number\" value=\"LOCAL\u200E00005\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00005\" />\n      <updated>1636542968700</updated>\n    </task>\n    <task id=\"LOCAL\u200E00006\" summary=\"Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;UI/src/UI.java\">\n      <created>1636543508863</created>\n      <option name=\"number\" value=\"LOCAL\u200E00006\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00006\" />\n      <updated>1636543508863</updated>\n    </task>\n    <task id=\"LOCAL\u200E00007\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636545043696</created>\n      <option name=\"number\" value=\"LOCAL\u200E00007\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00007\" />\n      <updated>1636545043696</updated>\n    </task>\n    <task id=\"LOCAL\u200E00008\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636549521300</created>\n      <option name=\"number\" value=\"LOCAL\u200E00008\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00008\" />\n      <updated>1636549521300</updated>\n    </task>\n    <task id=\"LOCAL\u200E00009\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636550827160</created>\n      <option name=\"number\" value=\"LOCAL\u200E00009\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00009\" />\n      <updated>1636550827160</updated>\n    </task>\n    <task id=\"LOCAL\u200E00010\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636550832604</created>\n      <option name=\"number\" value=\"LOCAL\u200E00010\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00010\" />\n      <updated>1636550832604</updated>\n    </task>\n    <task id=\"LOCAL\u200E00011\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636550840509</created>\n      <option name=\"number\" value=\"LOCAL\u200E00011\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00011\" />\n      <updated>1636550840509</updated>\n    </task>\n    <task id=\"LOCAL\u200E00012\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636550845954</created>\n      <option name=\"number\" value=\"LOCAL\u200E00012\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00012\" />\n      <updated>1636550845954</updated>\n    </task>\n    <task id=\"LOCAL\u200E00013\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636551354349</created>\n      <option name=\"number\" value=\"LOCAL\u200E00013\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00013\" />\n      <updated>1636551354349</updated>\n    </task>\n    <task id=\"LOCAL\u200E00014\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636553052358</created>\n      <option name=\"number\" value=\"LOCAL\u200E00014\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00014\" />\n      <updated>1636553052358</updated>\n    </task>\n    <task id=\"LOCAL\u200E00015\" summary=\"bar tsukerberg\">\n      <created>1636558070597</created>\n      <option name=\"number\" value=\"LOCAL\u200E00015\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00015\" />\n      <updated>1636558070597</updated>\n    </task>\n    <task id=\"LOCAL\u200E00016\" summary=\"bar tsukerberg\">\n      <created>1636558504677</created>\n      <option name=\"number\" value=\"LOCAL\u200E00016\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00016\" />\n      <updated>1636558504677</updated>\n    </task>\n    <task id=\"LOCAL\u200E00017\" summary=\"Bar Sela\">\n      <created>1636562916712</created>\n      <option name=\"number\" value=\"LOCAL\u200E00017\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00017\" />\n      <updated>1636562916712</updated>\n    </task>\n    <task id=\"LOCAL\u200E00018\" summary=\"Bar Sela\">\n      <created>1636567432333</created>\n      <option name=\"number\" value=\"LOCAL\u200E00018\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00018\" />\n      <updated>1636567432333</updated>\n    </task>\n    <task id=\"LOCAL\u200E00019\" summary=\"Bar Sela\">\n      <created>1636641029440</created>\n      <option name=\"number\" value=\"LOCAL\u200E00019\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00019\" />\n      <updated>1636641029440</updated>\n    </task>\n    <task id=\"LOCAL\u200E00020\" summary=\"Bar Sela\">\n      <created>1636642226800</created>\n      <option name=\"number\" value=\"LOCAL\u200E00020\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00020\" />\n      <updated>1636642226800</updated>\n    </task>\n    <task id=\"LOCAL\u200E00021\" summary=\"Bar Sela\">\n      <created>1636974027744</created>\n      <option name=\"number\" value=\"LOCAL\u200E00021\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00021\" />\n      <updated>1636974027744</updated>\n    </task>\n    <task id=\"LOCAL\u200E00022\" summary=\"Bar Sela\">\n      <created>1636980754037</created>\n      <option name=\"number\" value=\"LOCAL\u200E00022\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00022\" />\n      <updated>1636980754037</updated>\n    </task>\n    <task id=\"LOCAL\u200E00023\" summary=\"Bar Sela\">\n      <created>1636985330931</created>\n      <option name=\"number\" value=\"LOCAL\u200E00023\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00023\" />\n      <updated>1636985330931</updated>\n    </task>\n    <task id=\"LOCAL\u200E00024\" summary=\"Bar Sela\">\n      <created>1637054192751</created>\n      <option name=\"number\" value=\"LOCAL\u200E00024\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00024\" />\n      <updated>1637054192751</updated>\n    </task>\n    <task id=\"LOCAL\u200E00025\" summary=\"Bar Sela\">\n      <created>1637098721072</created>\n      <option name=\"number\" value=\"LOCAL\u200E00025\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00025\" />\n      <updated>1637098721072</updated>\n    </task>\n    <task id=\"LOCAL\u200E00026\" summary=\"Bar Sela\">\n      <created>1637098737266</created>\n      <option name=\"number\" value=\"LOCAL\u200E00026\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00026\" />\n      <updated>1637098737266</updated>\n    </task>\n    <task id=\"LOCAL\u200E00027\" summary=\"Bar Sela\">\n      <created>1637098753562</created>\n      <option name=\"number\" value=\"LOCAL\u200E00027\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00027\" />\n      <updated>1637098753562</updated>\n    </task>\n    <task id=\"LOCAL\u200E00028\" summary=\"Bar Sela\">\n      <created>1637138398897</created>\n      <option name=\"number\" value=\"LOCAL\u200E00028\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00028\" />\n      <updated>1637138398897</updated>\n    </task>\n    <task id=\"LOCAL\u200E00029\" summary=\"Bar Sela\">\n      <created>1637149141728</created>\n      <option name=\"number\" value=\"LOCAL\u200E00029\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00029\" />\n      <updated>1637149141728</updated>\n    </task>\n    <task id=\"LOCAL\u200E00030\" summary=\"Bar Sela\">\n      <created>1637149173054</created>\n      <option name=\"number\" value=\"LOCAL\u200E00030\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00030\" />\n      <updated>1637149173054</updated>\n    </task>\n    <task id=\"LOCAL\u200E00031\" summary=\"Bar Sela\">\n      <created>1637151938855</created>\n      <option name=\"number\" value=\"LOCAL\u200E00031\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00031\" />\n      <updated>1637151938855</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\"with wright to file\">\n      <created>1637159788221</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1637159788221</updated>\n    </task>\n    <task id=\"LOCAL\u200E00033\" summary=\"bar\">\n      <created>1637182544865</created>\n      <option name=\"number\" value=\"LOCAL\u200E00033\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00033\" />\n      <updated>1637182544865</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\"rochilda\">\n      <created>1637917243239</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1637917243239</updated>\n    </task>\n    <task id=\"LOCAL\u200E00035\" summary=\"bar\">\n      <created>1640025933227</created>\n      <option name=\"number\" value=\"LOCAL\u200E00035\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00035\" />\n      <updated>1640025933228</updated>\n    </task>\n    <task id=\"LOCAL\u200E00036\" summary=\"bar\">\n      <created>1640168556194</created>\n      <option name=\"number\" value=\"LOCAL\u200E00036\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00036\" />\n      <updated>1640168556194</updated>\n    </task>\n    <task id=\"LOCAL\u200E00037\" summary=\"bar\">\n      <created>1640170377178</created>\n      <option name=\"number\" value=\"LOCAL\u200E00037\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00037\" />\n      <updated>1640170377178</updated>\n    </task>\n    <task id=\"LOCAL\u200E00038\" summary=\"bar\">\n      <created>1640170656035</created>\n      <option name=\"number\" value=\"LOCAL\u200E00038\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00038\" />\n      <updated>1640170656035</updated>\n    </task>\n    <task id=\"LOCAL\u200E00039\" summary=\"bar\">\n      <created>1640502183928</created>\n      <option name=\"number\" value=\"LOCAL\u200E00039\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00039\" />\n      <updated>1640502183928</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"40\" />\n    <servers />\n  </component>\n  <component name=\"ToolWindowManager\">\n    <frame x=\"-7\" y=\"-7\" width=\"1295\" height=\"695\" extended-state=\"6\" />\n    <editor active=\"true\" />\n    <layout>\n      <window_info active=\"true\" content_ui=\"combo\" id=\"Project\" order=\"0\" visible=\"true\" weight=\"0.25020242\" />\n      <window_info id=\"Structure\" order=\"1\" side_tool=\"true\" weight=\"0.25\" />\n      <window_info id=\"Image Layers\" order=\"2\" />\n      <window_info id=\"Designer\" order=\"3\" />\n      <window_info id=\"UI Designer\" order=\"4\" />\n      <window_info id=\"Capture Tool\" order=\"5\" />\n      <window_info id=\"Favorites\" order=\"6\" side_tool=\"true\" />\n      <window_info anchor=\"bottom\" id=\"Messages\" order=\"0\" sideWeight=\"0.49878544\" weight=\"0.3285968\" />\n      <window_info anchor=\"bottom\" id=\"Message\" order=\"1\" />\n      <window_info anchor=\"bottom\" id=\"Find\" order=\"2\" />\n      <window_info anchor=\"bottom\" id=\"Run\" order=\"3\" sideWeight=\"0.49878544\" visible=\"true\" weight=\"0.3285968\" />\n      <window_info anchor=\"bottom\" id=\"Debug\" order=\"4\" sideWeight=\"0.4979757\" weight=\"0.39964476\" />\n      <window_info anchor=\"bottom\" id=\"Cvs\" order=\"5\" weight=\"0.25\" />\n      <window_info anchor=\"bottom\" id=\"Inspection\" order=\"6\" weight=\"0.4\" />\n      <window_info anchor=\"bottom\" id=\"TODO\" order=\"7\" />\n      <window_info anchor=\"bottom\" id=\"Terminal\" order=\"8\" sideWeight=\"0.49878544\" weight=\"0.3285968\" />\n      <window_info anchor=\"bottom\" id=\"Event Log\" order=\"9\" sideWeight=\"0.50121456\" side_tool=\"true\" visible=\"true\" weight=\"0.3285968\" />\n      <window_info anchor=\"bottom\" id=\"Version Control\" order=\"10\" sideWeight=\"0.4979757\" weight=\"0.24333926\" />\n      <window_info anchor=\"right\" id=\"Commander\" internal_type=\"SLIDING\" order=\"0\" type=\"SLIDING\" weight=\"0.4\" />\n      <window_info anchor=\"right\" id=\"Ant Build\" order=\"1\" weight=\"0.25\" />\n      <window_info anchor=\"right\" content_ui=\"combo\" id=\"Hierarchy\" order=\"2\" weight=\"0.25\" />\n      <window_info anchor=\"right\" id=\"Palette\" order=\"3\" />\n      <window_info anchor=\"right\" id=\"Maven\" order=\"4\" />\n      <window_info anchor=\"right\" id=\"Theme Preview\" order=\"5\" />\n      <window_info anchor=\"right\" id=\"Capture Analysis\" order=\"6\" />\n      <window_info anchor=\"right\" id=\"Palette&#9;\" order=\"7\" />\n    </layout>\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"57af23f1-ebdc-4980-8642-23c6d9864134\">\n          <value>\n            <State>\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"HEAD\" />\n                      </list>\n                    </value>\n                  </entry>\n                  <entry key=\"structure\">\n                    <value>\n                      <list>\n                        <option value=\"dir:/Users/bar_sela/IdeaProjects/GPUP1/Engine\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"RECENT_FILTERS\">\n      <map>\n        <entry key=\"Branch\">\n          <value>\n            <list />\n          </value>\n        </entry>\n        <entry key=\"User\">\n          <value>\n            <list />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"zxc\" />\n    <MESSAGE value=\"bar sela\" />\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;UI/src/UI.java\" />\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/master'\" />\n    <MESSAGE value=\"bar tsukerberg\" />\n    <MESSAGE value=\"Bar Sela\" />\n    <MESSAGE value=\"with wright to file\" />\n    <MESSAGE value=\"rochilda\" />\n    <MESSAGE value=\"bar\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"bar\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>134</line>\n          <option name=\"timeStamp\" value=\"54\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>136</line>\n          <option name=\"timeStamp\" value=\"56\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/Engine/src/target/Target.java</url>\n          <line>168</line>\n          <option name=\"timeStamp\" value=\"77\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>97</line>\n          <option name=\"timeStamp\" value=\"88\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>109</line>\n          <option name=\"timeStamp\" value=\"91\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/Engine/src/engine/engineImpl.java</url>\n          <line>212</line>\n          <option name=\"timeStamp\" value=\"96\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/FXML/error/errorMain.java</url>\n          <line>28</line>\n          <option name=\"timeStamp\" value=\"108\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/FXML/task/taskController.java</url>\n          <line>120</line>\n          <option name=\"timeStamp\" value=\"173\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/FXML/task/taskController.java</url>\n          <line>105</line>\n          <option name=\"timeStamp\" value=\"185\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/FXML/task/processing/targetInfoMain.java</url>\n          <line>25</line>\n          <option name=\"timeStamp\" value=\"187\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/Engine/src/information/TargetInformation.java</url>\n          <line>29</line>\n          <properties class=\"information.TargetInformation\" method=\"toString\">\n            <option name=\"EMULATED\" value=\"true\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"50\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>119</line>\n          <properties class=\"UIimpl\">\n            <option name=\"EMULATED\" value=\"true\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"57\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>118</line>\n          <properties class=\"UIimpl\" method=\"showTargetInfo\">\n            <option name=\"EMULATED\" value=\"true\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"92\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n    <pin-to-top-manager>\n      <pinned-members>\n        <PinnedItemInfo parentTag=\"target.Target\" memberName=\"status\" />\n        <PinnedItemInfo parentTag=\"java.util.HashMap$Node\" memberName=\"value\" />\n        <PinnedItemInfo parentTag=\"target.Targets\" memberName=\"targetsList\" />\n      </pinned-members>\n    </pin-to-top-manager>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n  <component name=\"editorHistoryManager\">\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/information/Information.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"34\">\n          <caret line=\"2\" column=\"17\" selection-start-line=\"2\" selection-start-column=\"17\" selection-end-line=\"2\" selection-end-column=\"17\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/target/Targets.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state>\n          <caret lean-forward=\"true\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/information/GraphInformation.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"104\">\n          <caret line=\"8\" column=\"13\" selection-start-line=\"8\" selection-start-column=\"13\" selection-end-line=\"8\" selection-end-column=\"13\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/engine/IntX.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"34\">\n          <caret line=\"2\" column=\"13\" selection-start-line=\"2\" selection-start-column=\"13\" selection-end-line=\"2\" selection-end-column=\"13\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/information/CircuitDetectionInfo.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"68\">\n          <caret line=\"6\" column=\"13\" selection-start-line=\"6\" selection-start-column=\"13\" selection-end-line=\"6\" selection-end-column=\"13\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/xml/Xmlimpl.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"187\">\n          <caret line=\"105\" column=\"13\" lean-forward=\"true\" selection-start-line=\"105\" selection-start-column=\"13\" selection-end-line=\"105\" selection-end-column=\"13\" />\n          <folding>\n            <element signature=\"imports\" expanded=\"true\" />\n            <element signature=\"e#5471#5472#0\" expanded=\"true\" />\n            <element signature=\"e#5557#5558#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/UI/src/main.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\" />\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/information/TargetInformation.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"276\">\n          <caret line=\"53\" column=\"50\" lean-forward=\"true\" selection-start-line=\"49\" selection-start-column=\"15\" selection-end-line=\"53\" selection-end-column=\"50\" />\n          <folding>\n            <element signature=\"imports\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Exception/src/target/UniqueTarget.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"34\">\n          <caret line=\"2\" column=\"13\" selection-start-line=\"2\" selection-start-column=\"13\" selection-end-line=\"2\" selection-end-column=\"13\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/information/SumUpTarget.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state>\n          <caret lean-forward=\"true\" />\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/target/Target.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"296\">\n          <caret line=\"186\" column=\"9\" lean-forward=\"true\" selection-start-line=\"186\" selection-start-column=\"9\" selection-end-line=\"186\" selection-end-column=\"9\" />\n          <folding>\n            <element signature=\"e#961#962#0\" expanded=\"true\" />\n            <element signature=\"e#988#989#0\" expanded=\"true\" />\n            <element signature=\"e#1083#1084#0\" expanded=\"true\" />\n            <element signature=\"e#1118#1119#0\" expanded=\"true\" />\n            <element signature=\"e#1237#1238#0\" expanded=\"true\" />\n            <element signature=\"e#1272#1273#0\" expanded=\"true\" />\n            <element signature=\"e#1393#1394#0\" expanded=\"true\" />\n            <element signature=\"e#1430#1431#0\" expanded=\"true\" />\n            <element signature=\"e#1514#1515#0\" expanded=\"true\" />\n            <element signature=\"e#1541#1542#0\" expanded=\"true\" />\n            <element signature=\"e#1633#1634#0\" expanded=\"true\" />\n            <element signature=\"e#1662#1663#0\" expanded=\"true\" />\n            <element signature=\"e#2053#2054#0\" expanded=\"true\" />\n            <element signature=\"e#2082#2083#0\" expanded=\"true\" />\n            <element signature=\"e#2183#2184#0\" expanded=\"true\" />\n            <element signature=\"e#2214#2215#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/engine/engineImpl.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"214\">\n          <caret line=\"290\" column=\"5\" lean-forward=\"true\" selection-start-line=\"288\" selection-start-column=\"4\" selection-end-line=\"290\" selection-end-column=\"5\" />\n          <folding>\n            <element signature=\"imports\" expanded=\"true\" />\n            <element signature=\"e#10619#10620#0\" expanded=\"true\" />\n            <element signature=\"e#10649#10650#0\" expanded=\"true\" />\n            <element signature=\"e#11213#11214#0\" expanded=\"true\" />\n            <element signature=\"e#11238#11239#0\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/Engine/src/engine/engine.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"185\">\n          <caret line=\"18\" column=\"19\" selection-start-line=\"18\" selection-start-column=\"19\" selection-end-line=\"18\" selection-end-column=\"19\" />\n          <folding>\n            <element signature=\"imports\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n    <entry file=\"file://$PROJECT_DIR$/UI/src/UIimpl.java\">\n      <provider selected=\"true\" editor-type-id=\"text-editor\">\n        <state relative-caret-position=\"296\">\n          <caret line=\"327\" column=\"29\" lean-forward=\"true\" selection-start-line=\"327\" selection-start-column=\"29\" selection-end-line=\"327\" selection-end-column=\"29\" />\n          <folding>\n            <element signature=\"imports\" expanded=\"true\" />\n          </folding>\n        </state>\n      </provider>\n    </entry>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 29d4bc19db9754ac04f692fcddb4936a9ab677fe)
+++ b/.idea/workspace.xml	(date 1640618272213)
@@ -43,8 +43,6 @@
       <change beforePath="$PROJECT_DIR$/UI/src/FXML/table/table.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/UI/src/FXML/table/table.fxml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/UI/src/FXML/table/tableController.java" beforeDir="false" afterPath="$PROJECT_DIR$/UI/src/FXML/table/tableController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/UI/src/FXML/task/task.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/UI/src/FXML/task/task.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/UI/src/FXML/whatIf/whatIf.fxml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/UI/src/FXML/whatIf/whatIfController.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/UI/src/main.java" beforeDir="false" afterPath="$PROJECT_DIR$/UI/src/main.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/Engine/engine/engine$Dependence.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Engine/engine/engine$Dependence.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/Engine/engine/engine.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Engine/engine/engine.class" afterDir="false" />
@@ -83,7 +81,6 @@
       </GitPushTagMode>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
   <component name="GitSEFilterConfiguration">
     <file-type-list>
@@ -94,7 +91,13 @@
     </file-type-list>
   </component>
   <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/UI/src/FXML/task/processing/targetInfoTaskController.java" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/UI/src/FXML/file/fileController.java" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/UI/src/FXML/task/taskController.java" root0="FORCE_HIGHLIGHTING" />
     <setting file="jar:///Library/Java/JavaVirtualMachines/jdk1.8.0_301.jdk/Contents/Home/src.zip!/java/util/HashSet.java" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/UI/src/FXML/error/errorMain.java" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/UI/src/FXML/task/processing/targetInfoMain.java" root0="FORCE_HIGHLIGHTING" />
+    <setting file="file://$PROJECT_DIR$/UI/src/FXML/main/mainAppController.java" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="IdeDocumentHistory">
     <option name="CHANGED_PATHS">
@@ -252,7 +255,7 @@
       <workItem from="1640260233220" duration="19280000" />
       <workItem from="1640367445428" duration="52500000" />
       <workItem from="1640599702615" duration="9660000" />
-      <workItem from="1640611629599" duration="3399000" />
+      <workItem from="1640611629599" duration="3777000" />
     </task>
     <task id="LOCAL‎00001" summary="zxc">
       <created>1636536346510</created>
@@ -490,7 +493,13 @@
       <option name="presentableId" value="LOCAL‎00039" />
       <updated>1640502183928</updated>
     </task>
-    <option name="localTasksCounter" value="40" />
+    <task id="LOCAL‎00040" summary="bar">
+      <created>1640617907013</created>
+      <option name="number" value="LOCAL‎00040" />
+      <option name="presentableId" value="LOCAL‎00040" />
+      <updated>1640617907013</updated>
+    </task>
+    <option name="localTasksCounter" value="41" />
     <servers />
   </component>
   <component name="ToolWindowManager">
@@ -607,7 +616,7 @@
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/Engine/src/target/Target.java</url>
-          <line>168</line>
+          <line>192</line>
           <option name="timeStamp" value="77" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
@@ -622,7 +631,7 @@
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/Engine/src/engine/engineImpl.java</url>
-          <line>212</line>
+          <line>213</line>
           <option name="timeStamp" value="96" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
Index: Engine/src/target/targetTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package target;\n\nimport javafx.scene.control.CheckBox;\n\nimport java.util.Set;\n\npublic class targetTable extends Target{\n    private CheckBox remark;\n    private int directRequiredForTableCol;\n    private int directDepemdsOnTableCol;\n\n    public  targetTable(Target t) {\n        super(t.getName(),t.getUserData(),t.getSetDependsOn(),t.getSetRequiredFor());\n        this.remark = new CheckBox();\n        this.SetStatus( t.getStatus());\n        this.SetType(t.getType());\n        this.SetUserData(t.getUserData());\n        this.directRequiredForTableCol = t.getSetRequiredFor().size();\n        directDepemdsOnTableCol =  t.getSetDependsOn().size();\n    }\n\n    public CheckBox getRemark() {\n        return remark;\n    }\n\n    public void setRemark(CheckBox remark) {\n        this.remark = remark;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/target/targetTable.java b/Engine/src/target/targetTable.java
--- a/Engine/src/target/targetTable.java	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/Engine/src/target/targetTable.java	(date 1640617936500)
@@ -1,29 +1,54 @@
 package target;
 
+import engine.engineImpl;
+import javafx.beans.property.SimpleIntegerProperty;
 import javafx.scene.control.CheckBox;
 
 import java.util.Set;
 
 public class targetTable extends Target{
-    private CheckBox remark;
-    private int directRequiredForTableCol;
-    private int directDepemdsOnTableCol;
+    private CheckBox checkBoxPath;
+    private CheckBox checkBoxTask;
+    private Integer directRequiredForTableCol;
+    private Integer totalRequiredForTableCol;
+    private Integer directDependsOnTableCol;
+    private Integer totalDependsOnTableCol;
+    private Integer serialSetTableCol;
 
     public  targetTable(Target t) {
         super(t.getName(),t.getUserData(),t.getSetDependsOn(),t.getSetRequiredFor());
-        this.remark = new CheckBox();
+        this.checkBoxPath = new CheckBox();
+        this.checkBoxTask = new CheckBox();
         this.SetStatus( t.getStatus());
         this.SetType(t.getType());
         this.SetUserData(t.getUserData());
         this.directRequiredForTableCol = t.getSetRequiredFor().size();
-        directDepemdsOnTableCol =  t.getSetDependsOn().size();
+        this.directDependsOnTableCol =  t.getSetDependsOn().size();
     }
 
-    public CheckBox getRemark() {
-        return remark;
+    public CheckBox getCheckBoxPath() {return checkBoxPath;}
+    public void setCheckBoxPath(CheckBox remark) {
+        this.checkBoxPath = remark;
+    }
+    public CheckBox getCheckBoxTask() {return checkBoxTask;}
+    public void setCheckBoxTask(CheckBox remark) {
+        this.checkBoxTask = remark;
     }
 
-    public void setRemark(CheckBox remark) {
-        this.remark = remark;
+    public Integer getSerialSetTableCol() {return serialSetTableCol;}
+    public void setSerialSetTableCol(Integer serialSetTableCol) {
+        this.serialSetTableCol = serialSetTableCol;
     }
+
+    public Integer getDirectRequiredForTableCol() {return directRequiredForTableCol;}
+    public void setDirectRequiredForTableCol(Integer directRequiredForTableCol) {this.directRequiredForTableCol = directRequiredForTableCol;}
+
+    public Integer getTotalRequiredForTableCol() {return totalRequiredForTableCol;}
+    public void setTotalRequiredForTableCol(Integer totalRequiredForTableCol) {this.totalRequiredForTableCol = totalRequiredForTableCol;}
+
+    public Integer getDirectDependsOnTableCol() {return directDependsOnTableCol;}
+    public void setDirectDependsOnTableCol(Integer directDependsOnTableCol) {this.directDependsOnTableCol = directDependsOnTableCol;}
+
+    public Integer getTotalDependsOnTableCol() {return totalDependsOnTableCol;}
+    public void setTotalDependsOnTableCol(Integer totalDependsOnTableCol) {this.totalDependsOnTableCol = totalDependsOnTableCol;}
 }
Index: Engine/src/generated/GPUPTargetDependencies.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/generated/GPUPTargetDependencies.java b/Engine/src/generated/GPUPTargetDependencies.java
new file mode 100644
--- /dev/null	(date 1640617936499)
+++ b/Engine/src/generated/GPUPTargetDependencies.java	(date 1640617936499)
@@ -0,0 +1,174 @@
+
+package generated;
+
+import java.util.ArrayList;
+import java.util.List;
+import javax.xml.bind.annotation.XmlAccessType;
+import javax.xml.bind.annotation.XmlAccessorType;
+import javax.xml.bind.annotation.XmlAttribute;
+import javax.xml.bind.annotation.XmlElement;
+import javax.xml.bind.annotation.XmlRootElement;
+import javax.xml.bind.annotation.XmlType;
+import javax.xml.bind.annotation.XmlValue;
+
+
+/**
+ * <p>Java class for anonymous complex type.
+ * 
+ * <p>The following schema fragment specifies the expected content contained within this class.
+ * 
+ * <pre>
+ * &lt;complexType>
+ *   &lt;complexContent>
+ *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
+ *       &lt;sequence>
+ *         &lt;element name="GPUG-Dependency" maxOccurs="unbounded">
+ *           &lt;complexType>
+ *             &lt;simpleContent>
+ *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
+ *                 &lt;attribute name="type" use="required">
+ *                   &lt;simpleType>
+ *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
+ *                       &lt;enumeration value="requiredFor"/>
+ *                       &lt;enumeration value="dependsOn"/>
+ *                     &lt;/restriction>
+ *                   &lt;/simpleType>
+ *                 &lt;/attribute>
+ *               &lt;/extension>
+ *             &lt;/simpleContent>
+ *           &lt;/complexType>
+ *         &lt;/element>
+ *       &lt;/sequence>
+ *     &lt;/restriction>
+ *   &lt;/complexContent>
+ * &lt;/complexType>
+ * </pre>
+ * 
+ * 
+ */
+@XmlAccessorType(XmlAccessType.FIELD)
+@XmlType(name = "", propOrder = {
+    "gpugDependency"
+})
+@XmlRootElement(name = "GPUP-Target-Dependencies")
+public class GPUPTargetDependencies {
+
+    @XmlElement(name = "GPUG-Dependency", required = true)
+    protected List<GPUPTargetDependencies.GPUGDependency> gpugDependency;
+
+    /**
+     * Gets the value of the gpugDependency property.
+     * 
+     * <p>
+     * This accessor method returns a reference to the live list,
+     * not a snapshot. Therefore any modification you make to the
+     * returned list will be present inside the JAXB object.
+     * This is why there is not a <CODE>set</CODE> method for the gpugDependency property.
+     * 
+     * <p>
+     * For example, to add a new item, do as follows:
+     * <pre>
+     *    getGPUGDependency().add(newItem);
+     * </pre>
+     * 
+     * 
+     * <p>
+     * Objects of the following type(s) are allowed in the list
+     * {@link GPUPTargetDependencies.GPUGDependency }
+     * 
+     * 
+     */
+    public List<GPUPTargetDependencies.GPUGDependency> getGPUGDependency() {
+        if (gpugDependency == null) {
+            gpugDependency = new ArrayList<GPUPTargetDependencies.GPUGDependency>();
+        }
+        return this.gpugDependency;
+    }
+
+
+    /**
+     * <p>Java class for anonymous complex type.
+     * 
+     * <p>The following schema fragment specifies the expected content contained within this class.
+     * 
+     * <pre>
+     * &lt;complexType>
+     *   &lt;simpleContent>
+     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
+     *       &lt;attribute name="type" use="required">
+     *         &lt;simpleType>
+     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
+     *             &lt;enumeration value="requiredFor"/>
+     *             &lt;enumeration value="dependsOn"/>
+     *           &lt;/restriction>
+     *         &lt;/simpleType>
+     *       &lt;/attribute>
+     *     &lt;/extension>
+     *   &lt;/simpleContent>
+     * &lt;/complexType>
+     * </pre>
+     * 
+     * 
+     */
+    @XmlAccessorType(XmlAccessType.FIELD)
+    @XmlType(name = "", propOrder = {
+        "value"
+    })
+    public static class GPUGDependency {
+
+        @XmlValue
+        protected String value;
+        @XmlAttribute(name = "type", required = true)
+        protected String type;
+
+        /**
+         * Gets the value of the value property.
+         * 
+         * @return
+         *     possible object is
+         *     {@link String }
+         *     
+         */
+        public String getValue() {
+            return value;
+        }
+
+        /**
+         * Sets the value of the value property.
+         * 
+         * @param value
+         *     allowed object is
+         *     {@link String }
+         *     
+         */
+        public void setValue(String value) {
+            this.value = value;
+        }
+
+        /**
+         * Gets the value of the type property.
+         * 
+         * @return
+         *     possible object is
+         *     {@link String }
+         *     
+         */
+        public String getType() {
+            return type;
+        }
+
+        /**
+         * Sets the value of the type property.
+         * 
+         * @param value
+         *     allowed object is
+         *     {@link String }
+         *     
+         */
+        public void setType(String value) {
+            this.type = value;
+        }
+
+    }
+
+}
Index: Engine/src/generated/GPUPDescriptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/generated/GPUPDescriptor.java b/Engine/src/generated/GPUPDescriptor.java
new file mode 100644
--- /dev/null	(date 1640617936498)
+++ b/Engine/src/generated/GPUPDescriptor.java	(date 1640617936498)
@@ -0,0 +1,91 @@
+
+package generated;
+
+import javax.xml.bind.annotation.XmlAccessType;
+import javax.xml.bind.annotation.XmlAccessorType;
+import javax.xml.bind.annotation.XmlElement;
+import javax.xml.bind.annotation.XmlRootElement;
+import javax.xml.bind.annotation.XmlType;
+
+
+/**
+ * <p>Java class for anonymous complex type.
+ * 
+ * <p>The following schema fragment specifies the expected content contained within this class.
+ * 
+ * <pre>
+ * &lt;complexType>
+ *   &lt;complexContent>
+ *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
+ *       &lt;all>
+ *         &lt;element ref="{}GPUP-Configuration"/>
+ *         &lt;element ref="{}GPUP-Targets"/>
+ *       &lt;/all>
+ *     &lt;/restriction>
+ *   &lt;/complexContent>
+ * &lt;/complexType>
+ * </pre>
+ * 
+ * 
+ */
+@XmlAccessorType(XmlAccessType.FIELD)
+@XmlType(name = "", propOrder = {
+
+})
+@XmlRootElement(name = "GPUP-Descriptor")
+public class GPUPDescriptor {
+
+    @XmlElement(name = "GPUP-Configuration", required = true)
+    protected GPUPConfiguration gpupConfiguration;
+    @XmlElement(name = "GPUP-Targets", required = true)
+    protected GPUPTargets gpupTargets;
+
+    /**
+     * Gets the value of the gpupConfiguration property.
+     * 
+     * @return
+     *     possible object is
+     *     {@link GPUPConfiguration }
+     *     
+     */
+    public GPUPConfiguration getGPUPConfiguration() {
+        return gpupConfiguration;
+    }
+
+    /**
+     * Sets the value of the gpupConfiguration property.
+     * 
+     * @param value
+     *     allowed object is
+     *     {@link GPUPConfiguration }
+     *     
+     */
+    public void setGPUPConfiguration(GPUPConfiguration value) {
+        this.gpupConfiguration = value;
+    }
+
+    /**
+     * Gets the value of the gpupTargets property.
+     * 
+     * @return
+     *     possible object is
+     *     {@link GPUPTargets }
+     *     
+     */
+    public GPUPTargets getGPUPTargets() {
+        return gpupTargets;
+    }
+
+    /**
+     * Sets the value of the gpupTargets property.
+     * 
+     * @param value
+     *     allowed object is
+     *     {@link GPUPTargets }
+     *     
+     */
+    public void setGPUPTargets(GPUPTargets value) {
+        this.gpupTargets = value;
+    }
+
+}
Index: UI/src/FXML/path/css/path.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.path-table-view{\n    -fx-background-color: linear-gradient(#2A5058, #61a2b1);\n    -fx-text-fill: black;\n}\n\n.table-view .tableColumn{\n    -fx-background-color: linear-gradient(#2A5058, #61a2b1);\n    -fx-effect: dropshadow(two-pass-box,rgb(10,101,107),15,0.0,0.1,3);\n    -fx-font-weight: bold;\n    -fx-font-family:\"Times New Roman\";\n}\n.path-label{\n    -fx-font-weight: bold;\n    -fx-font-family:\"Times New Roman\";\n}\n.path-text{\n    -fx-font-weight: bold;\n    -fx-font-family:\"Times New Roman\";\n}\n.path-button{\n    -fx-font-weight: bold;\n    -fx-font-family:\"Times New Roman\";\n}\n\n.path{\n    -fx-background-color: linear-gradient(#2A5058, #61a2b1);\n    -fx-font-weight: bold;\n    -fx-font-family:\"Times New Roman\";\n}\n.path-button{\n    -fx-font-family:\"Times New Roman\";\n    -fx-text-fill: black;\n    -fx-font-size: 10px;\n    -fx-effect: dropshadow( three-pass-box , rgba(0,0,0,0.6) , 5, 0.0 , 0 , 1 );\n    -fx-background-color: linear-gradient(#61a2b1, #2A5058);\n}\n\n.path-button:hover {\n    -fx-background-color: linear-gradient(#2A5058, #61a2b1);\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/path/css/path.css b/UI/src/FXML/path/css/path.css
--- a/UI/src/FXML/path/css/path.css	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/path/css/path.css	(date 1640617936505)
@@ -37,4 +37,29 @@
 
 .path-button:hover {
     -fx-background-color: linear-gradient(#2A5058, #61a2b1);
-}
\ No newline at end of file
+}
+
+#depComboBox{
+    -fx-font-size: 10px;
+}
+
+#pathToggle{
+    -fx-font-family:"Times New Roman";
+    -fx-text-fill: black;
+    -fx-font-size: 10px;
+    -fx-background-color: linear-gradient(#2A5058, #61a2b1);
+}
+
+#cycleToggle{
+    -fx-font-family:"Times New Roman";
+    -fx-text-fill: black;
+    -fx-font-size: 10px;
+    -fx-background-color: linear-gradient(#61a2b1, #2A5058);
+}
+#whatIfToggle{
+    -fx-font-family:"Times New Roman";
+    -fx-text-fill: black;
+    -fx-font-size: 10px;
+    -fx-background-color: linear-gradient(#61a2b1, #2A5058);
+}
+
Index: UI/src/FXML/table/table.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import java.net.URL?>\n<?import javafx.geometry.Insets?>\n<?import javafx.scene.control.Label?>\n<?import javafx.scene.control.ScrollPane?>\n<?import javafx.scene.control.TableColumn?>\n<?import javafx.scene.control.TableView?>\n<?import javafx.scene.layout.BorderPane?>\n<?import javafx.scene.layout.ColumnConstraints?>\n<?import javafx.scene.layout.GridPane?>\n<?import javafx.scene.layout.HBox?>\n<?import javafx.scene.layout.RowConstraints?>\n<?import javafx.scene.layout.VBox?>\n<?import javafx.scene.text.Text?>\n\n<BorderPane id=\"root\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"750.0\" prefWidth=\"1300.0\" styleClass=\"background\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"FXML.table.tableController\">\n   <center>\n      <ScrollPane fitToHeight=\"true\" fitToWidth=\"true\" prefHeight=\"394.0\" prefWidth=\"525.0\" styleClass=\"background\" BorderPane.alignment=\"CENTER\">\n         <content>\n            <GridPane minHeight=\"730.0\" minWidth=\"1075.0\" prefHeight=\"730.0\" prefWidth=\"1075.0\" styleClass=\"background\">\n              <columnConstraints>\n                <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\" />\n              </columnConstraints>\n              <rowConstraints>\n                <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\n              </rowConstraints>\n               <children>\n                  <TableView fx:id=\"tableView\" minHeight=\"750.0\" minWidth=\"1075.0\" prefHeight=\"750.0\" prefWidth=\"1075.0\" styleClass=\"tableView\" stylesheets=\"@../utility/table.css\" GridPane.halignment=\"CENTER\" GridPane.hgrow=\"ALWAYS\" GridPane.valignment=\"TOP\" GridPane.vgrow=\"ALWAYS\">\n                     <columns>\n                        <TableColumn fx:id=\"nameTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"200.0\" styleClass=\"tableColumn\" text=\"Name\" />\n                        <TableColumn fx:id=\"typeTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"200.0\" styleClass=\"tableColumn\" text=\"Type\" />\n                        <TableColumn maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"170.0\" styleClass=\"tableColumn\" text=\"Required For\">\n                           <columns>\n                              <TableColumn fx:id=\"directRequiredForTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Direct\" />\n                              <TableColumn fx:id=\"totalRequiredForTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Total\" />\n                           </columns>\n                        </TableColumn>\n                        <TableColumn maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"105.0\" styleClass=\"tableColumn\" text=\"Depends On\">\n                           <columns>\n                              <TableColumn fx:id=\"directDepemdsOnTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Direct\" />\n                              <TableColumn fx:id=\"totalDepemdsOnTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Total\" />\n                           </columns>\n                        </TableColumn>\n                        <TableColumn fx:id=\"dataTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"388.0\" styleClass=\"tableColumn\" text=\"Data\" />\n                     </columns>\n                  </TableView>\n               </children>\n            </GridPane>\n         </content>\n      </ScrollPane>\n   </center>\n   <right>\n      <ScrollPane fitToHeight=\"true\" fitToWidth=\"true\" prefHeight=\"750.0\" prefWidth=\"209.0\" styleClass=\"background\" BorderPane.alignment=\"CENTER\">\n         <content>\n            <VBox id=\"sumUp-vbox\" prefHeight=\"748.0\" prefWidth=\"249.0\" styleClass=\"background\">\n               <children>\n                  <HBox alignment=\"CENTER\" prefHeight=\"52.0\" prefWidth=\"211.0\" styleClass=\"background\">\n                     <VBox.margin>\n                        <Insets />\n                     </VBox.margin>\n                     <children>\n                        <Label id=\"titleLabel\" alignment=\"CENTER\" prefHeight=\"27.0\" prefWidth=\"215.0\" text=\"SumUp\" />\n                     </children>\n                  </HBox>\n                  <HBox>\n                     <VBox.margin>\n                        <Insets bottom=\"8.0\" left=\"3.0\" top=\"6.0\" />\n                     </VBox.margin>\n                     <children>\n                        <Label text=\"targets - \" />\n                        <Text fx:id=\"targetNumberText\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" styleClass=\"text\" text=\"Text\">\n                           <HBox.margin>\n                              <Insets left=\"5.0\" />\n                           </HBox.margin>\n                        </Text>\n                     </children>\n                  </HBox>\n                  <HBox>\n                     <VBox.margin>\n                        <Insets bottom=\"8.0\" left=\"3.0\" top=\"6.0\" />\n                     </VBox.margin>\n                     <children>\n                        <Label text=\"Leaves - \" />\n                        <Text fx:id=\"leavesNumberText\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" styleClass=\"text\" text=\"Text\">\n                           <HBox.margin>\n                              <Insets left=\"5.0\" />\n                           </HBox.margin>\n                        </Text>\n                     </children>\n                  </HBox>\n                  <HBox>\n                     <VBox.margin>\n                        <Insets bottom=\"8.0\" left=\"3.0\" top=\"6.0\" />\n                     </VBox.margin>\n                     <children>\n                        <Label text=\"Middle -\" />\n                        <Text fx:id=\"middleNumberText\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" styleClass=\"text\" text=\"Text\">\n                           <HBox.margin>\n                              <Insets left=\"5.0\" />\n                           </HBox.margin>\n                        </Text>\n                     </children>\n                  </HBox>\n                  <HBox>\n                     <VBox.margin>\n                        <Insets bottom=\"8.0\" left=\"3.0\" top=\"6.0\" />\n                     </VBox.margin>\n                     <children>\n                        <Label text=\"Roots - \" />\n                        <Text fx:id=\"rootsNumberText\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" styleClass=\"text\" text=\"Text\">\n                           <HBox.margin>\n                              <Insets left=\"5.0\" />\n                           </HBox.margin>\n                        </Text>\n                     </children>\n                  </HBox>\n                  <HBox>\n                     <VBox.margin>\n                        <Insets bottom=\"8.0\" left=\"3.0\" top=\"6.0\" />\n                     </VBox.margin>\n                     <children>\n                        <Label text=\"Independents - \" />\n                        <Text fx:id=\"indepNumberText\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" styleClass=\"text\" text=\"Text\">\n                           <HBox.margin>\n                              <Insets left=\"5.0\" />\n                           </HBox.margin>\n                        </Text>\n                     </children>\n                  </HBox>\n               </children>\n            </VBox>\n         </content>\n      </ScrollPane>\n   </right>\n   <stylesheets>\n      <URL value=\"@css/table.css\" />\n      <URL value=\"@../utility/backgroung.css\" />\n   </stylesheets>\n</BorderPane>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/table/table.fxml b/UI/src/FXML/table/table.fxml
--- a/UI/src/FXML/table/table.fxml	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/table/table.fxml	(date 1640617936506)
@@ -12,21 +12,22 @@
 <?import javafx.scene.layout.HBox?>
 <?import javafx.scene.layout.RowConstraints?>
 <?import javafx.scene.layout.VBox?>
+<?import javafx.scene.shape.Line?>
 <?import javafx.scene.text.Text?>
 
 <BorderPane id="root" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="0.0" minWidth="0.0" prefHeight="750.0" prefWidth="1300.0" styleClass="background" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="FXML.table.tableController">
    <center>
       <ScrollPane fitToHeight="true" fitToWidth="true" prefHeight="394.0" prefWidth="525.0" styleClass="background" BorderPane.alignment="CENTER">
          <content>
-            <GridPane minHeight="730.0" minWidth="1075.0" prefHeight="730.0" prefWidth="1075.0" styleClass="background">
+            <GridPane minHeight="0.0" minWidth="0.0" prefHeight="748.0" prefWidth="1080.0" styleClass="background">
               <columnConstraints>
-                <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+                <ColumnConstraints hgrow="ALWAYS" minWidth="10.0" prefWidth="100.0" />
               </columnConstraints>
               <rowConstraints>
                 <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
               </rowConstraints>
                <children>
-                  <TableView fx:id="tableView" minHeight="750.0" minWidth="1075.0" prefHeight="750.0" prefWidth="1075.0" styleClass="tableView" stylesheets="@../utility/table.css" GridPane.halignment="CENTER" GridPane.hgrow="ALWAYS" GridPane.valignment="TOP" GridPane.vgrow="ALWAYS">
+                  <TableView fx:id="tableView" maxWidth="1080.0" minHeight="0.0" minWidth="0.0" prefHeight="748.0" prefWidth="1080.0" styleClass="tableView" stylesheets="@../utility/table.css" GridPane.halignment="CENTER" GridPane.hgrow="ALWAYS" GridPane.valignment="TOP" GridPane.vgrow="ALWAYS">
                      <columns>
                         <TableColumn fx:id="nameTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="200.0" styleClass="tableColumn" text="Name" />
                         <TableColumn fx:id="typeTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="200.0" styleClass="tableColumn" text="Type" />
@@ -38,11 +39,12 @@
                         </TableColumn>
                         <TableColumn maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="105.0" styleClass="tableColumn" text="Depends On">
                            <columns>
-                              <TableColumn fx:id="directDepemdsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="75.0" styleClass="tableColumn" text="Direct" />
-                              <TableColumn fx:id="totalDepemdsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="75.0" styleClass="tableColumn" text="Total" />
+                              <TableColumn fx:id="directDependsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="75.0" styleClass="tableColumn" text="Direct" />
+                              <TableColumn fx:id="totalDependsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="75.0" styleClass="tableColumn" text="Total" />
                            </columns>
                         </TableColumn>
-                        <TableColumn fx:id="dataTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="388.0" styleClass="tableColumn" text="Data" />
+                        <TableColumn fx:id="serialSetTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="75.0" styleClass="tableColumn" text="Serial Sets" />
+                        <TableColumn fx:id="dataTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="313.0" styleClass="tableColumn" text="Data" />
                      </columns>
                   </TableView>
                </children>
@@ -53,16 +55,21 @@
    <right>
       <ScrollPane fitToHeight="true" fitToWidth="true" prefHeight="750.0" prefWidth="209.0" styleClass="background" BorderPane.alignment="CENTER">
          <content>
-            <VBox id="sumUp-vbox" prefHeight="748.0" prefWidth="249.0" styleClass="background">
+            <VBox id="sumUp-vbox" prefHeight="748.0" prefWidth="230.0" styleClass="background">
                <children>
-                  <HBox alignment="CENTER" prefHeight="52.0" prefWidth="211.0" styleClass="background">
+                  <HBox alignment="CENTER" minHeight="-Infinity" minWidth="-Infinity" prefHeight="53.0" prefWidth="200.0" styleClass="background">
                      <VBox.margin>
                         <Insets />
                      </VBox.margin>
                      <children>
-                        <Label id="titleLabel" alignment="CENTER" prefHeight="27.0" prefWidth="215.0" text="SumUp" />
+                        <Label id="titleLabel" alignment="CENTER" prefHeight="27.0" prefWidth="220.0" text="SumUp" />
                      </children>
                   </HBox>
+                  <Label text="Targets">
+                     <VBox.margin>
+                        <Insets top="20.0" />
+                     </VBox.margin>
+                  </Label>
                   <HBox>
                      <VBox.margin>
                         <Insets bottom="8.0" left="3.0" top="6.0" />
@@ -128,6 +135,21 @@
                         </Text>
                      </children>
                   </HBox>
+                  <Line endX="100.0" startX="-100.0">
+                     <VBox.margin>
+                        <Insets top="20.0" />
+                     </VBox.margin>
+                  </Line>
+                  <Label text="Serial Set">
+                     <VBox.margin>
+                        <Insets top="20.0" />
+                     </VBox.margin>
+                  </Label>
+                  <VBox fx:id="serialSetVbox" alignment="CENTER" maxHeight="1.7976931348623157E308" maxWidth="206.0" minWidth="206.0" prefHeight="423.0" prefWidth="206.0" styleClass="background" VBox.vgrow="ALWAYS">
+                     <VBox.margin>
+                        <Insets top="20.0" />
+                     </VBox.margin>
+                  </VBox>
                </children>
             </VBox>
          </content>
Index: Engine/src/generated/GPUPTarget.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/generated/GPUPTarget.java b/Engine/src/generated/GPUPTarget.java
new file mode 100644
--- /dev/null	(date 1640617936499)
+++ b/Engine/src/generated/GPUPTarget.java	(date 1640617936499)
@@ -0,0 +1,119 @@
+
+package generated;
+
+import javax.xml.bind.annotation.XmlAccessType;
+import javax.xml.bind.annotation.XmlAccessorType;
+import javax.xml.bind.annotation.XmlAttribute;
+import javax.xml.bind.annotation.XmlElement;
+import javax.xml.bind.annotation.XmlRootElement;
+import javax.xml.bind.annotation.XmlType;
+
+
+/**
+ * <p>Java class for anonymous complex type.
+ * 
+ * <p>The following schema fragment specifies the expected content contained within this class.
+ * 
+ * <pre>
+ * &lt;complexType>
+ *   &lt;complexContent>
+ *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
+ *       &lt;all>
+ *         &lt;element ref="{}GPUP-User-Data" minOccurs="0"/>
+ *         &lt;element ref="{}GPUP-Target-Dependencies" minOccurs="0"/>
+ *       &lt;/all>
+ *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
+ *     &lt;/restriction>
+ *   &lt;/complexContent>
+ * &lt;/complexType>
+ * </pre>
+ * 
+ * 
+ */
+@XmlAccessorType(XmlAccessType.FIELD)
+@XmlType(name = "", propOrder = {
+
+})
+@XmlRootElement(name = "GPUP-Target")
+public class GPUPTarget {
+
+    @XmlElement(name = "GPUP-User-Data")
+    protected String gpupUserData;
+    @XmlElement(name = "GPUP-Target-Dependencies")
+    protected GPUPTargetDependencies gpupTargetDependencies;
+    @XmlAttribute(name = "name", required = true)
+    protected String name;
+
+    /**
+     * Gets the value of the gpupUserData property.
+     * 
+     * @return
+     *     possible object is
+     *     {@link String }
+     *     
+     */
+    public String getGPUPUserData() {
+        return gpupUserData;
+    }
+
+    /**
+     * Sets the value of the gpupUserData property.
+     * 
+     * @param value
+     *     allowed object is
+     *     {@link String }
+     *     
+     */
+    public void setGPUPUserData(String value) {
+        this.gpupUserData = value;
+    }
+
+    /**
+     * Gets the value of the gpupTargetDependencies property.
+     * 
+     * @return
+     *     possible object is
+     *     {@link GPUPTargetDependencies }
+     *     
+     */
+    public GPUPTargetDependencies getGPUPTargetDependencies() {
+        return gpupTargetDependencies;
+    }
+
+    /**
+     * Sets the value of the gpupTargetDependencies property.
+     * 
+     * @param value
+     *     allowed object is
+     *     {@link GPUPTargetDependencies }
+     *     
+     */
+    public void setGPUPTargetDependencies(GPUPTargetDependencies value) {
+        this.gpupTargetDependencies = value;
+    }
+
+    /**
+     * Gets the value of the name property.
+     * 
+     * @return
+     *     possible object is
+     *     {@link String }
+     *     
+     */
+    public String getName() {
+        return name;
+    }
+
+    /**
+     * Sets the value of the name property.
+     * 
+     * @param value
+     *     allowed object is
+     *     {@link String }
+     *     
+     */
+    public void setName(String value) {
+        this.name = value;
+    }
+
+}
Index: Engine/src/generated/GPUPTargets.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/generated/GPUPTargets.java b/Engine/src/generated/GPUPTargets.java
new file mode 100644
--- /dev/null	(date 1640617936499)
+++ b/Engine/src/generated/GPUPTargets.java	(date 1640617936499)
@@ -0,0 +1,71 @@
+
+package generated;
+
+import java.util.ArrayList;
+import java.util.List;
+import javax.xml.bind.annotation.XmlAccessType;
+import javax.xml.bind.annotation.XmlAccessorType;
+import javax.xml.bind.annotation.XmlElement;
+import javax.xml.bind.annotation.XmlRootElement;
+import javax.xml.bind.annotation.XmlType;
+
+
+/**
+ * <p>Java class for anonymous complex type.
+ * 
+ * <p>The following schema fragment specifies the expected content contained within this class.
+ * 
+ * <pre>
+ * &lt;complexType>
+ *   &lt;complexContent>
+ *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
+ *       &lt;sequence>
+ *         &lt;element ref="{}GPUP-Target" maxOccurs="unbounded"/>
+ *       &lt;/sequence>
+ *     &lt;/restriction>
+ *   &lt;/complexContent>
+ * &lt;/complexType>
+ * </pre>
+ * 
+ * 
+ */
+@XmlAccessorType(XmlAccessType.FIELD)
+@XmlType(name = "", propOrder = {
+    "gpupTarget"
+})
+@XmlRootElement(name = "GPUP-Targets")
+public class GPUPTargets {
+
+    @XmlElement(name = "GPUP-Target", required = true)
+    protected List<GPUPTarget> gpupTarget;
+
+    /**
+     * Gets the value of the gpupTarget property.
+     * 
+     * <p>
+     * This accessor method returns a reference to the live list,
+     * not a snapshot. Therefore any modification you make to the
+     * returned list will be present inside the JAXB object.
+     * This is why there is not a <CODE>set</CODE> method for the gpupTarget property.
+     * 
+     * <p>
+     * For example, to add a new item, do as follows:
+     * <pre>
+     *    getGPUPTarget().add(newItem);
+     * </pre>
+     * 
+     * 
+     * <p>
+     * Objects of the following type(s) are allowed in the list
+     * {@link GPUPTarget }
+     * 
+     * 
+     */
+    public List<GPUPTarget> getGPUPTarget() {
+        if (gpupTarget == null) {
+            gpupTarget = new ArrayList<GPUPTarget>();
+        }
+        return this.gpupTarget;
+    }
+
+}
Index: Engine/src/generated/GPUPConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/generated/GPUPConfiguration.java b/Engine/src/generated/GPUPConfiguration.java
new file mode 100644
--- /dev/null	(date 1640617936498)
+++ b/Engine/src/generated/GPUPConfiguration.java	(date 1640617936498)
@@ -0,0 +1,91 @@
+
+package generated;
+
+import javax.xml.bind.annotation.XmlAccessType;
+import javax.xml.bind.annotation.XmlAccessorType;
+import javax.xml.bind.annotation.XmlElement;
+import javax.xml.bind.annotation.XmlRootElement;
+import javax.xml.bind.annotation.XmlType;
+
+
+/**
+ * <p>Java class for anonymous complex type.
+ * 
+ * <p>The following schema fragment specifies the expected content contained within this class.
+ * 
+ * <pre>
+ * &lt;complexType>
+ *   &lt;complexContent>
+ *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
+ *       &lt;all>
+ *         &lt;element ref="{}GPUP-Graph-Name"/>
+ *         &lt;element ref="{}GPUP-Working-Directory"/>
+ *       &lt;/all>
+ *     &lt;/restriction>
+ *   &lt;/complexContent>
+ * &lt;/complexType>
+ * </pre>
+ * 
+ * 
+ */
+@XmlAccessorType(XmlAccessType.FIELD)
+@XmlType(name = "", propOrder = {
+
+})
+@XmlRootElement(name = "GPUP-Configuration")
+public class GPUPConfiguration {
+
+    @XmlElement(name = "GPUP-Graph-Name", required = true)
+    protected String gpupGraphName;
+    @XmlElement(name = "GPUP-Working-Directory", required = true)
+    protected String gpupWorkingDirectory;
+
+    /**
+     * Gets the value of the gpupGraphName property.
+     * 
+     * @return
+     *     possible object is
+     *     {@link String }
+     *     
+     */
+    public String getGPUPGraphName() {
+        return gpupGraphName;
+    }
+
+    /**
+     * Sets the value of the gpupGraphName property.
+     * 
+     * @param value
+     *     allowed object is
+     *     {@link String }
+     *     
+     */
+    public void setGPUPGraphName(String value) {
+        this.gpupGraphName = value;
+    }
+
+    /**
+     * Gets the value of the gpupWorkingDirectory property.
+     * 
+     * @return
+     *     possible object is
+     *     {@link String }
+     *     
+     */
+    public String getGPUPWorkingDirectory() {
+        return gpupWorkingDirectory;
+    }
+
+    /**
+     * Sets the value of the gpupWorkingDirectory property.
+     * 
+     * @param value
+     *     allowed object is
+     *     {@link String }
+     *     
+     */
+    public void setGPUPWorkingDirectory(String value) {
+        this.gpupWorkingDirectory = value;
+    }
+
+}
Index: Engine/src/generated/ObjectFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/generated/ObjectFactory.java b/Engine/src/generated/ObjectFactory.java
new file mode 100644
--- /dev/null	(date 1640617936499)
+++ b/Engine/src/generated/ObjectFactory.java	(date 1640617936499)
@@ -0,0 +1,113 @@
+
+package generated;
+
+import javax.xml.bind.JAXBElement;
+import javax.xml.bind.annotation.XmlElementDecl;
+import javax.xml.bind.annotation.XmlRegistry;
+import javax.xml.namespace.QName;
+
+
+/**
+ * This object contains factory methods for each 
+ * Java content interface and Java element interface 
+ * generated in the generated package. 
+ * <p>An ObjectFactory allows you to programatically 
+ * construct new instances of the Java representation 
+ * for XML content. The Java representation of XML 
+ * content can consist of schema derived interfaces 
+ * and classes representing the binding of schema 
+ * type definitions, element declarations and model 
+ * groups.  Factory methods for each of these are 
+ * provided in this class.
+ * 
+ */
+@XmlRegistry
+public class ObjectFactory {
+
+    private final static QName _GPUPUserData_QNAME = new QName("", "GPUP-User-Data");
+    private final static QName _GPUPWorkingDirectory_QNAME = new QName("", "GPUP-Working-Directory");
+    private final static QName _GPUPGraphName_QNAME = new QName("", "GPUP-Graph-Name");
+
+    /**
+     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
+     * 
+     */
+    public ObjectFactory() {
+    }
+
+    /**
+     * Create an instance of {@link GPUPTargetDependencies }
+     * 
+     */
+    public GPUPTargetDependencies createGPUPTargetDependencies() {
+        return new GPUPTargetDependencies();
+    }
+
+    /**
+     * Create an instance of {@link GPUPDescriptor }
+     * 
+     */
+    public GPUPDescriptor createGPUPDescriptor() {
+        return new GPUPDescriptor();
+    }
+
+    /**
+     * Create an instance of {@link GPUPConfiguration }
+     * 
+     */
+    public GPUPConfiguration createGPUPConfiguration() {
+        return new GPUPConfiguration();
+    }
+
+    /**
+     * Create an instance of {@link GPUPTargets }
+     * 
+     */
+    public GPUPTargets createGPUPTargets() {
+        return new GPUPTargets();
+    }
+
+    /**
+     * Create an instance of {@link GPUPTarget }
+     * 
+     */
+    public GPUPTarget createGPUPTarget() {
+        return new GPUPTarget();
+    }
+
+    /**
+     * Create an instance of {@link GPUPTargetDependencies.GPUGDependency }
+     * 
+     */
+    public GPUPTargetDependencies.GPUGDependency createGPUPTargetDependenciesGPUGDependency() {
+        return new GPUPTargetDependencies.GPUGDependency();
+    }
+
+    /**
+     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
+     * 
+     */
+    @XmlElementDecl(namespace = "", name = "GPUP-User-Data")
+    public JAXBElement<String> createGPUPUserData(String value) {
+        return new JAXBElement<String>(_GPUPUserData_QNAME, String.class, null, value);
+    }
+
+    /**
+     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
+     * 
+     */
+    @XmlElementDecl(namespace = "", name = "GPUP-Working-Directory")
+    public JAXBElement<String> createGPUPWorkingDirectory(String value) {
+        return new JAXBElement<String>(_GPUPWorkingDirectory_QNAME, String.class, null, value);
+    }
+
+    /**
+     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
+     * 
+     */
+    @XmlElementDecl(namespace = "", name = "GPUP-Graph-Name")
+    public JAXBElement<String> createGPUPGraphName(String value) {
+        return new JAXBElement<String>(_GPUPGraphName_QNAME, String.class, null, value);
+    }
+
+}
Index: Engine/src/generated/G.P.U.P-V1.xsd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/generated/G.P.U.P-V1.xsd b/Engine/src/generated/G.P.U.P-V1.xsd
new file mode 100644
--- /dev/null	(date 1640617936498)
+++ b/Engine/src/generated/G.P.U.P-V1.xsd	(date 1640617936498)
@@ -0,0 +1,62 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- edited with XMLSpy v2008 rel. 2 (http://www.altova.com) by mazuki (darksiderg) -->
+<!--W3C Schema generated by XMLSpy v2008 rel. 2 (http://www.altova.com)-->
+<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
+	<xs:element name="GPUP-Working-Directory" type="xs:string"/>
+	<xs:element name="GPUP-User-Data" type="xs:string"/>
+	<xs:element name="GPUP-Targets">
+		<xs:complexType>
+			<xs:sequence>
+				<xs:element ref="GPUP-Target" maxOccurs="unbounded"/>
+			</xs:sequence>
+		</xs:complexType>
+	</xs:element>
+	<xs:element name="GPUP-Target-Dependencies">
+		<xs:complexType>
+			<xs:sequence>
+				<xs:element name="GPUG-Dependency" maxOccurs="unbounded">
+					<xs:complexType>
+						<xs:simpleContent>
+							<xs:extension base="xs:string">
+								<xs:attribute name="type" use="required">
+									<xs:simpleType>
+										<xs:restriction base="xs:string">
+											<xs:enumeration value="requiredFor"/>
+											<xs:enumeration value="dependsOn"/>
+										</xs:restriction>
+									</xs:simpleType>
+								</xs:attribute>
+							</xs:extension>
+						</xs:simpleContent>
+					</xs:complexType>
+				</xs:element>
+			</xs:sequence>
+		</xs:complexType>
+	</xs:element>
+	<xs:element name="GPUP-Target">
+		<xs:complexType>
+			<xs:all>
+				<xs:element ref="GPUP-User-Data" minOccurs="0"/>
+				<xs:element ref="GPUP-Target-Dependencies" minOccurs="0"/>
+			</xs:all>
+			<xs:attribute name="name" type="xs:string" use="required"/>
+		</xs:complexType>
+	</xs:element>
+	<xs:element name="GPUP-Graph-Name" type="xs:string"/>
+	<xs:element name="GPUP-Descriptor">
+		<xs:complexType>
+			<xs:all>
+				<xs:element ref="GPUP-Configuration"/>
+				<xs:element ref="GPUP-Targets"/>
+			</xs:all>
+		</xs:complexType>
+	</xs:element>
+	<xs:element name="GPUP-Configuration">
+		<xs:complexType>
+			<xs:all>
+				<xs:element ref="GPUP-Graph-Name"/>
+				<xs:element ref="GPUP-Working-Directory"/>
+			</xs:all>
+		</xs:complexType>
+	</xs:element>
+</xs:schema>
Index: Engine/src/information/GraphInformation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package information;\n/// contain all the information about targets graph:\n/// - amount of targets\n/// - amount of levies\n/// - amount of middles\n/// - amount of independents\n/// - amount of roots\n\npublic class GraphInformation implements Information{ // 2\n\n    private final int amountOfTargets;\n    private final int levies;\n    private final int middles;\n    private final int roots;\n    private final int independents;\n\n    public GraphInformation(int amountOfTargets , int levies, int middles, int roots,int independents)\n    {\n        this.amountOfTargets = amountOfTargets;\n        this.levies = levies;\n        this.middles = middles;\n        this.roots = roots;\n        this.independents = independents;\n    }\n\n    @Override\n    public String toString() {\n        return \"Graph Information: \\n\\r\" +\n                \"amount Of Targets: \" + amountOfTargets + \"\\n\\r\" +\n                \"amount Of levies: \" + levies + \"\\n\\r\" +\n                \"amount Of middles: \" + middles + \"\\n\\r\" +\n                \"amount Of roots: \" + roots + \"\\n\\r\" +\n                \"amount Of independents: \" + independents + \"\\n\\r\";\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/information/GraphInformation.java b/Engine/src/information/GraphInformation.java
--- a/Engine/src/information/GraphInformation.java	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/Engine/src/information/GraphInformation.java	(date 1640617936500)
@@ -32,4 +32,17 @@
                 "amount Of roots: " + roots + "\n\r" +
                 "amount Of independents: " + independents + "\n\r";
     }
+    public String getAmountOfTargets(){return String.valueOf(amountOfTargets);}
+    public String getLevies(){return String.valueOf(levies);}
+    public String getMiddle(){return String.valueOf(middles);}
+    public String getRoot(){return String.valueOf(roots);}
+    public String getIndependents(){return String.valueOf(independents);}
+
+
+
+
+
+
+
+
 }
Index: UI/src/FXML/main/css/mainApp.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.tab-pane\n{\n    -fx-tab-min-width:168px;\n}\n.tab{\n    -fx-background-color: linear-gradient(#2A5058, #61a2b1);\n}\n.tab-pane .tab\n{\n}\n\n.tab-pane .tab:selected\n{\n    -fx-background-color: linear-gradient(#61a2b1, #2A5058);\n}\n\n.tab .tab-label {\n    -fx-alignment: CENTER;\n    -fx-text-fill: black;\n    -fx-font-size: 16px;\n    -fx-font-family:\"Times New Roman\";\n}\n\n.tab:selected .tab-label {\n    -fx-alignment: CENTER;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/main/css/mainApp.css b/UI/src/FXML/main/css/mainApp.css
--- a/UI/src/FXML/main/css/mainApp.css	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/main/css/mainApp.css	(date 1640617936503)
@@ -1,13 +1,10 @@
 .tab-pane
 {
-    -fx-tab-min-width:168px;
+    -fx-tab-min-width:195px;
 }
 .tab{
     -fx-background-color: linear-gradient(#2A5058, #61a2b1);
 }
-.tab-pane .tab
-{
-}
 
 .tab-pane .tab:selected
 {
@@ -17,7 +14,7 @@
 .tab .tab-label {
     -fx-alignment: CENTER;
     -fx-text-fill: black;
-    -fx-font-size: 16px;
+    -fx-font-size: 20px;
     -fx-font-family:"Times New Roman";
 }
 
Index: UI/src/FXML/task/task.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import java.net.URL?>\n<?import javafx.geometry.Insets?>\n<?import javafx.scene.control.Button?>\n<?import javafx.scene.control.CheckBox?>\n<?import javafx.scene.control.ComboBox?>\n<?import javafx.scene.control.Label?>\n<?import javafx.scene.control.ProgressBar?>\n<?import javafx.scene.control.ScrollPane?>\n<?import javafx.scene.control.Spinner?>\n<?import javafx.scene.control.TableColumn?>\n<?import javafx.scene.control.TableView?>\n<?import javafx.scene.control.ToggleButton?>\n<?import javafx.scene.layout.AnchorPane?>\n<?import javafx.scene.layout.BorderPane?>\n<?import javafx.scene.layout.ColumnConstraints?>\n<?import javafx.scene.layout.GridPane?>\n<?import javafx.scene.layout.HBox?>\n<?import javafx.scene.layout.RowConstraints?>\n<?import javafx.scene.layout.VBox?>\n<?import javafx.scene.text.Font?>\n\n<BorderPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"750.0\" prefWidth=\"1300.0\" styleClass=\"background\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"FXML.path.pathController\">\n   <center>\n      <ScrollPane fitToHeight=\"true\" fitToWidth=\"true\" prefHeight=\"200.0\" prefWidth=\"200.0\" styleClass=\"background\" BorderPane.alignment=\"CENTER\">\n         <content>\n            <GridPane minHeight=\"748.0\" minWidth=\"1290.0\" prefHeight=\"748.0\" prefWidth=\"1290.0\" styleClass=\"background\">\n              <columnConstraints>\n                <ColumnConstraints hgrow=\"NEVER\" maxWidth=\"1053.0\" minWidth=\"10.0\" prefWidth=\"1046.0\" />\n                  <ColumnConstraints hgrow=\"ALWAYS\" maxWidth=\"521.0\" minWidth=\"0.0\" prefWidth=\"252.0\" />\n              </columnConstraints>\n              <rowConstraints>\n                <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\n              </rowConstraints>\n               <children>\n                  <GridPane styleClass=\"background\" GridPane.halignment=\"CENTER\" GridPane.hgrow=\"SOMETIMES\" GridPane.valignment=\"TOP\" GridPane.vgrow=\"ALWAYS\">\n                     <columnConstraints>\n                        <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"780.0\" prefWidth=\"780.0\" />\n                     </columnConstraints>\n                     <rowConstraints>\n                        <RowConstraints minHeight=\"720.0\" prefHeight=\"720.0\" vgrow=\"NEVER\" />\n                        <RowConstraints maxHeight=\"30.0\" minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"NEVER\" />\n                     </rowConstraints>\n                     <children>\n                        <TableView fx:id=\"tableView\" minHeight=\"720.0\" minWidth=\"780.0\" prefHeight=\"720.0\" prefWidth=\"780.0\" styleClass=\"tableView\" stylesheets=\"@../utility/table.css\" GridPane.halignment=\"CENTER\" GridPane.hgrow=\"ALWAYS\" GridPane.valignment=\"TOP\" GridPane.vgrow=\"ALWAYS\">\n                           <columns>\n                              <TableColumn fx:id=\"remarkTableCol\" maxWidth=\"30.0\" minWidth=\"30.0\" prefWidth=\"30.0\" styleClass=\"tableColumn\" />\n                              <TableColumn fx:id=\"nameTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"150.0\" prefWidth=\"150.0\" styleClass=\"tableColumn\" text=\"Name\" />\n                              <TableColumn fx:id=\"typeTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"150.0\" prefWidth=\"150.0\" styleClass=\"tableColumn\" text=\"Type\" />\n                              <TableColumn maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"0.0\" styleClass=\"tableColumn\" text=\"Required For\">\n                                 <columns>\n                                    <TableColumn fx:id=\"directRequiredForTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"75.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Direct\" />\n                                    <TableColumn fx:id=\"totalRequiredForTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"75.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Total\" />\n                                 </columns>\n                              </TableColumn>\n                              <TableColumn maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"114.0\" styleClass=\"tableColumn\" text=\"Depends On\">\n                                 <columns>\n                                    <TableColumn fx:id=\"directDepemdsOnTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"75.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Direct\" />\n                                    <TableColumn fx:id=\"TotalDepemdsOnTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"75.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Total\" />\n                                 </columns>\n                              </TableColumn>\n                              <TableColumn fx:id=\"dataTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"150.0\" prefWidth=\"150.0\" styleClass=\"tableColumn\" text=\"Data\" />\n                              <TableColumn fx:id=\"dataTableCol1\" maxWidth=\"1.7976931348623157E308\" minWidth=\"150.0\" prefWidth=\"265.0\" styleClass=\"tableColumn\" text=\"Status\" />\n                           </columns>\n                        </TableView>\n                        <HBox prefHeight=\"100.0\" prefWidth=\"200.0\" styleClass=\"background\" GridPane.rowIndex=\"1\">\n                           <children>\n                              <Button id=\"clearButton\" fx:id=\"clearButton\" minHeight=\"20.0\" minWidth=\"50.0\" mnemonicParsing=\"false\" onAction=\"#clearAction\" prefHeight=\"20.0\" prefWidth=\"50.0\" text=\"Clear\" HBox.hgrow=\"NEVER\">\n                                 <font>\n                                    <Font size=\"9.0\" />\n                                 </font>\n                                 <HBox.margin>\n                                    <Insets left=\"10.0\" right=\"20.0\" top=\"6.0\" />\n                                 </HBox.margin>\n                              </Button>\n                              <CheckBox mnemonicParsing=\"false\" styleClass=\"taskMangerLabel\" text=\"With Required-For\" HBox.hgrow=\"NEVER\">\n                                 <HBox.margin>\n                                    <Insets top=\"6.0\" />\n                                 </HBox.margin>\n                              </CheckBox>\n                              <CheckBox mnemonicParsing=\"false\" styleClass=\"taskMangerLabel\" text=\"With Dpends-On \" HBox.hgrow=\"NEVER\">\n                                 <HBox.margin>\n                                    <Insets left=\"20.0\" top=\"6.0\" />\n                                 </HBox.margin>\n                              </CheckBox>\n                           </children>\n                        </HBox>\n                     </children>\n                  </GridPane>\n                  <GridPane styleClass=\"background\" GridPane.columnIndex=\"1\">\n                     <columnConstraints>\n                        <ColumnConstraints hgrow=\"ALWAYS\" maxWidth=\"1.7976931348623157E308\" minWidth=\"10.0\" />\n                     </columnConstraints>\n                     <rowConstraints>\n                        <RowConstraints maxHeight=\"280.0\" minHeight=\"52.0\" prefHeight=\"52.0\" vgrow=\"NEVER\" />\n                        <RowConstraints maxHeight=\"1.7976931348623157E308\" minHeight=\"10.0\" prefHeight=\"346.0\" vgrow=\"ALWAYS\" />\n                     </rowConstraints>\n                     <children>\n                        <Label id=\"titleLabel\" alignment=\"CENTER\" prefHeight=\"55.0\" prefWidth=\"252.0\" styleClass=\"background\" text=\"Task manger\" textAlignment=\"CENTER\" GridPane.halignment=\"CENTER\" GridPane.valignment=\"CENTER\" />\n                        <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\" styleClass=\"background\" GridPane.rowIndex=\"1\">\n                           <children>\n                              <GridPane layoutY=\"31.0\" styleClass=\"background\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\">\n                                 <columnConstraints>\n                                    <ColumnConstraints hgrow=\"NEVER\" minWidth=\"10.0\" prefWidth=\"258.0\" />\n                                 </columnConstraints>\n                                 <rowConstraints>\n                                    <RowConstraints maxHeight=\"194.0\" minHeight=\"10.0\" prefHeight=\"85.0\" vgrow=\"NEVER\" />\n                                    <RowConstraints maxHeight=\"389.0\" minHeight=\"10.0\" prefHeight=\"126.0\" vgrow=\"NEVER\" />\n                                    <RowConstraints maxHeight=\"445.0\" minHeight=\"10.0\" prefHeight=\"263.0\" vgrow=\"NEVER\" />\n                                    <RowConstraints maxHeight=\"356.0\" minHeight=\"10.0\" prefHeight=\"98.0\" vgrow=\"NEVER\" />\n                                    <RowConstraints maxHeight=\"356.0\" minHeight=\"10.0\" prefHeight=\"48.0\" vgrow=\"NEVER\" />\n                                    <RowConstraints maxHeight=\"316.0\" minHeight=\"10.0\" prefHeight=\"40.0\" vgrow=\"NEVER\" />\n                                    <RowConstraints maxHeight=\"316.0\" minHeight=\"10.0\" prefHeight=\"69.0\" vgrow=\"NEVER\" />\n                                 </rowConstraints>\n                                 <children>\n                                    <BorderPane GridPane.halignment=\"CENTER\" GridPane.hgrow=\"NEVER\" GridPane.valignment=\"CENTER\" GridPane.vgrow=\"NEVER\">\n                                       <left>\n                                          <Label styleClass=\"taskMangerLabel\" text=\"Compiler \" BorderPane.alignment=\"CENTER\">\n                                             <BorderPane.margin>\n                                                <Insets left=\"10.0\" />\n                                             </BorderPane.margin>\n                                          </Label>\n                                       </left>\n                                       <center>\n                                          <ToggleButton mnemonicParsing=\"false\" styleClass=\"toggleButtonTaskManger\" text=\"ToggleButton\" BorderPane.alignment=\"CENTER\" />\n                                       </center>\n                                       <right>\n                                          <Label styleClass=\"taskMangerLabel\" text=\"Simulation \" BorderPane.alignment=\"CENTER\">\n                                             <BorderPane.margin>\n                                                <Insets right=\"10.0\" />\n                                             </BorderPane.margin>\n                                          </Label>\n                                       </right>\n                                    </BorderPane>\n                                    <ComboBox id=\"comboBoxTaskManger\" minHeight=\"30.0\" prefHeight=\"30.0\" prefWidth=\"200.0\" GridPane.rowIndex=\"3\">\n                                       <GridPane.margin>\n                                          <Insets left=\"10.0\" />\n                                       </GridPane.margin>\n                                    </ComboBox>\n                                    <ProgressBar id=\"proggressBar\" prefHeight=\"20.0\" prefWidth=\"165.0\" progress=\"0.0\" GridPane.rowIndex=\"5\">\n                                       <GridPane.margin>\n                                          <Insets left=\"10.0\" />\n                                       </GridPane.margin>\n                                    </ProgressBar>\n                                    <BorderPane maxHeight=\"47.0\" maxWidth=\"353.0\" minHeight=\"46.0\" minWidth=\"234.0\" prefHeight=\"47.0\" prefWidth=\"234.0\" GridPane.hgrow=\"NEVER\" GridPane.rowIndex=\"6\" GridPane.vgrow=\"NEVER\">\n                                       <right>\n                                          <HBox prefHeight=\"51.0\" prefWidth=\"184.0\" BorderPane.alignment=\"CENTER\">\n                                             <children>\n                                                <Button minHeight=\"30.0\" minWidth=\"83.0\" mnemonicParsing=\"false\" prefHeight=\"30.0\" prefWidth=\"83.0\" styleClass=\"buttonButtonTaskManger\" text=\"Pause\">\n                                                   <HBox.margin>\n                                                      <Insets right=\"10.0\" top=\"10.0\" />\n                                                   </HBox.margin>\n                                                </Button>\n                                                <Button minHeight=\"30.0\" minWidth=\"83.0\" mnemonicParsing=\"false\" prefHeight=\"30.0\" prefWidth=\"83.0\" styleClass=\"buttonButtonTaskManger\" text=\"Run\">\n                                                   <HBox.margin>\n                                                      <Insets left=\"10.0\" right=\"10.0\" top=\"10.0\" />\n                                                   </HBox.margin>\n                                                </Button>\n                                             </children>\n                                          </HBox>\n                                       </right>\n                                    </BorderPane>\n                                    <HBox opacity=\"0.19\" GridPane.rowIndex=\"1\">\n                                       <children>\n                                          <VBox prefHeight=\"121.0\" prefWidth=\"173.0\">\n                                             <children>\n                                                <Label styleClass=\"taskMangerLabel\" text=\"Processing time:\">\n                                                   <VBox.margin>\n                                                      <Insets left=\"10.0\" top=\"10.0\" />\n                                                   </VBox.margin>\n                                                </Label>\n                                                <Label styleClass=\"taskMangerLabel\" text=\"The chance for success\">\n                                                   <VBox.margin>\n                                                      <Insets left=\"10.0\" top=\"20.0\" />\n                                                   </VBox.margin>\n                                                </Label>\n                                                <Label styleClass=\"taskMangerLabel\" text=\"Success with a warning\">\n                                                   <VBox.margin>\n                                                      <Insets left=\"10.0\" top=\"20.0\" />\n                                                   </VBox.margin>\n                                                </Label>\n                                             </children>\n                                          </VBox>\n                                          <VBox>\n                                             <HBox.margin>\n                                                <Insets />\n                                             </HBox.margin>\n                                             <children>\n                                                <Spinner maxHeight=\"17.0\" minHeight=\"9.0\" prefHeight=\"17.0\" prefWidth=\"53.0\" styleClass=\"taskMangerSpinner\">\n                                                   <VBox.margin>\n                                                      <Insets top=\"10.0\" />\n                                                   </VBox.margin>\n                                                </Spinner>\n                                                <Spinner maxHeight=\"17.0\" minHeight=\"9.0\" prefHeight=\"17.0\" prefWidth=\"53.0\" styleClass=\"taskMangerSpinner\">\n                                                   <VBox.margin>\n                                                      <Insets top=\"20.0\" />\n                                                   </VBox.margin>\n                                                </Spinner>\n                                                <Spinner maxHeight=\"21.0\" minHeight=\"9.0\" prefHeight=\"17.0\" prefWidth=\"53.0\" styleClass=\"taskMangerSpinner\">\n                                                   <VBox.margin>\n                                                      <Insets top=\"20.0\" />\n                                                   </VBox.margin>\n                                                </Spinner>\n                                             </children>\n                                          </VBox>\n                                       </children>\n                                    </HBox>\n                                    <HBox prefHeight=\"35.0\" prefWidth=\"211.0\" GridPane.rowIndex=\"4\">\n                                       <children>\n                                          <VBox prefHeight=\"121.0\" prefWidth=\"173.0\">\n                                             <children>\n                                                <Label styleClass=\"taskMangerLabel\" text=\"Number of task in parallel\">\n                                                   <VBox.margin>\n                                                      <Insets left=\"10.0\" top=\"10.0\" />\n                                                   </VBox.margin>\n                                                </Label>\n                                             </children>\n                                          </VBox>\n                                          <VBox>\n                                             <HBox.margin>\n                                                <Insets />\n                                             </HBox.margin>\n                                             <children>\n                                                <Spinner maxHeight=\"17.0\" minHeight=\"9.0\" prefHeight=\"17.0\" prefWidth=\"53.0\" styleClass=\"taskMangerSpinner\">\n                                                   <VBox.margin>\n                                                      <Insets top=\"10.0\" />\n                                                   </VBox.margin>\n                                                </Spinner>\n                                             </children>\n                                          </VBox>\n                                       </children>\n                                    </HBox>\n                                 </children>\n                              </GridPane>\n                           </children>\n                        </AnchorPane>\n                     </children>\n                  </GridPane>\n               </children>\n            </GridPane>\n         </content>\n      </ScrollPane>\n   </center>\n   <stylesheets>\n      <URL value=\"@../utility/table.css\" />\n      <URL value=\"@../utility/backgroung.css\" />\n      <URL value=\"@css/task.css\" />\n   </stylesheets>\n</BorderPane>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/task/task.fxml b/UI/src/FXML/task/task.fxml
--- a/UI/src/FXML/task/task.fxml	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/task/task.fxml	(date 1640617936508)
@@ -7,7 +7,6 @@
 <?import javafx.scene.control.ComboBox?>
 <?import javafx.scene.control.Label?>
 <?import javafx.scene.control.ProgressBar?>
-<?import javafx.scene.control.ScrollPane?>
 <?import javafx.scene.control.Spinner?>
 <?import javafx.scene.control.TableColumn?>
 <?import javafx.scene.control.TableView?>
@@ -21,230 +20,270 @@
 <?import javafx.scene.layout.VBox?>
 <?import javafx.scene.text.Font?>
 
-<BorderPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="0.0" minWidth="0.0" prefHeight="750.0" prefWidth="1300.0" styleClass="background" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="FXML.path.pathController">
+<BorderPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="0.0" minWidth="0.0" prefHeight="750.0" prefWidth="1300.0" styleClass="background" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="FXML.task.taskController">
+   <stylesheets>
+      <URL value="@../utility/table.css" />
+      <URL value="@../utility/backgroung.css" />
+      <URL value="@css/task.css" />
+   </stylesheets>
    <center>
-      <ScrollPane fitToHeight="true" fitToWidth="true" prefHeight="200.0" prefWidth="200.0" styleClass="background" BorderPane.alignment="CENTER">
-         <content>
-            <GridPane minHeight="748.0" minWidth="1290.0" prefHeight="748.0" prefWidth="1290.0" styleClass="background">
-              <columnConstraints>
-                <ColumnConstraints hgrow="NEVER" maxWidth="1053.0" minWidth="10.0" prefWidth="1046.0" />
-                  <ColumnConstraints hgrow="ALWAYS" maxWidth="521.0" minWidth="0.0" prefWidth="252.0" />
-              </columnConstraints>
-              <rowConstraints>
-                <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-              </rowConstraints>
-               <children>
-                  <GridPane styleClass="background" GridPane.halignment="CENTER" GridPane.hgrow="SOMETIMES" GridPane.valignment="TOP" GridPane.vgrow="ALWAYS">
-                     <columnConstraints>
-                        <ColumnConstraints hgrow="SOMETIMES" minWidth="780.0" prefWidth="780.0" />
-                     </columnConstraints>
-                     <rowConstraints>
-                        <RowConstraints minHeight="720.0" prefHeight="720.0" vgrow="NEVER" />
-                        <RowConstraints maxHeight="30.0" minHeight="10.0" prefHeight="30.0" vgrow="NEVER" />
-                     </rowConstraints>
-                     <children>
-                        <TableView fx:id="tableView" minHeight="720.0" minWidth="780.0" prefHeight="720.0" prefWidth="780.0" styleClass="tableView" stylesheets="@../utility/table.css" GridPane.halignment="CENTER" GridPane.hgrow="ALWAYS" GridPane.valignment="TOP" GridPane.vgrow="ALWAYS">
-                           <columns>
-                              <TableColumn fx:id="remarkTableCol" maxWidth="30.0" minWidth="30.0" prefWidth="30.0" styleClass="tableColumn" />
-                              <TableColumn fx:id="nameTableCol" maxWidth="1.7976931348623157E308" minWidth="150.0" prefWidth="150.0" styleClass="tableColumn" text="Name" />
-                              <TableColumn fx:id="typeTableCol" maxWidth="1.7976931348623157E308" minWidth="150.0" prefWidth="150.0" styleClass="tableColumn" text="Type" />
-                              <TableColumn maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="0.0" styleClass="tableColumn" text="Required For">
-                                 <columns>
-                                    <TableColumn fx:id="directRequiredForTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Direct" />
-                                    <TableColumn fx:id="totalRequiredForTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Total" />
-                                 </columns>
-                              </TableColumn>
-                              <TableColumn maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="114.0" styleClass="tableColumn" text="Depends On">
-                                 <columns>
-                                    <TableColumn fx:id="directDepemdsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Direct" />
-                                    <TableColumn fx:id="TotalDepemdsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Total" />
-                                 </columns>
-                              </TableColumn>
-                              <TableColumn fx:id="dataTableCol" maxWidth="1.7976931348623157E308" minWidth="150.0" prefWidth="150.0" styleClass="tableColumn" text="Data" />
-                              <TableColumn fx:id="dataTableCol1" maxWidth="1.7976931348623157E308" minWidth="150.0" prefWidth="265.0" styleClass="tableColumn" text="Status" />
-                           </columns>
-                        </TableView>
-                        <HBox prefHeight="100.0" prefWidth="200.0" styleClass="background" GridPane.rowIndex="1">
-                           <children>
-                              <Button id="clearButton" fx:id="clearButton" minHeight="20.0" minWidth="50.0" mnemonicParsing="false" onAction="#clearAction" prefHeight="20.0" prefWidth="50.0" text="Clear" HBox.hgrow="NEVER">
-                                 <font>
-                                    <Font size="9.0" />
-                                 </font>
-                                 <HBox.margin>
-                                    <Insets left="10.0" right="20.0" top="6.0" />
-                                 </HBox.margin>
-                              </Button>
-                              <CheckBox mnemonicParsing="false" styleClass="taskMangerLabel" text="With Required-For" HBox.hgrow="NEVER">
-                                 <HBox.margin>
-                                    <Insets top="6.0" />
-                                 </HBox.margin>
-                              </CheckBox>
-                              <CheckBox mnemonicParsing="false" styleClass="taskMangerLabel" text="With Dpends-On " HBox.hgrow="NEVER">
-                                 <HBox.margin>
-                                    <Insets left="20.0" top="6.0" />
-                                 </HBox.margin>
-                              </CheckBox>
-                           </children>
-                        </HBox>
-                     </children>
-                  </GridPane>
-                  <GridPane styleClass="background" GridPane.columnIndex="1">
-                     <columnConstraints>
-                        <ColumnConstraints hgrow="ALWAYS" maxWidth="1.7976931348623157E308" minWidth="10.0" />
-                     </columnConstraints>
-                     <rowConstraints>
-                        <RowConstraints maxHeight="280.0" minHeight="52.0" prefHeight="52.0" vgrow="NEVER" />
-                        <RowConstraints maxHeight="1.7976931348623157E308" minHeight="10.0" prefHeight="346.0" vgrow="ALWAYS" />
-                     </rowConstraints>
-                     <children>
-                        <Label id="titleLabel" alignment="CENTER" prefHeight="55.0" prefWidth="252.0" styleClass="background" text="Task manger" textAlignment="CENTER" GridPane.halignment="CENTER" GridPane.valignment="CENTER" />
-                        <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" styleClass="background" GridPane.rowIndex="1">
-                           <children>
-                              <GridPane layoutY="31.0" styleClass="background" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-                                 <columnConstraints>
-                                    <ColumnConstraints hgrow="NEVER" minWidth="10.0" prefWidth="258.0" />
-                                 </columnConstraints>
-                                 <rowConstraints>
-                                    <RowConstraints maxHeight="194.0" minHeight="10.0" prefHeight="85.0" vgrow="NEVER" />
-                                    <RowConstraints maxHeight="389.0" minHeight="10.0" prefHeight="126.0" vgrow="NEVER" />
-                                    <RowConstraints maxHeight="445.0" minHeight="10.0" prefHeight="263.0" vgrow="NEVER" />
-                                    <RowConstraints maxHeight="356.0" minHeight="10.0" prefHeight="98.0" vgrow="NEVER" />
-                                    <RowConstraints maxHeight="356.0" minHeight="10.0" prefHeight="48.0" vgrow="NEVER" />
-                                    <RowConstraints maxHeight="316.0" minHeight="10.0" prefHeight="40.0" vgrow="NEVER" />
-                                    <RowConstraints maxHeight="316.0" minHeight="10.0" prefHeight="69.0" vgrow="NEVER" />
-                                 </rowConstraints>
+      <GridPane minHeight="748.0" minWidth="1290.0" prefHeight="748.0" prefWidth="1290.0" styleClass="background" BorderPane.alignment="CENTER">
+        <columnConstraints>
+          <ColumnConstraints hgrow="NEVER" maxWidth="1053.0" minWidth="10.0" prefWidth="1046.0" />
+            <ColumnConstraints hgrow="ALWAYS" maxWidth="521.0" minWidth="0.0" prefWidth="252.0" />
+        </columnConstraints>
+        <rowConstraints>
+          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+        </rowConstraints>
+         <children>
+            <GridPane prefHeight="748.0" prefWidth="1043.0" styleClass="background" GridPane.halignment="CENTER" GridPane.hgrow="SOMETIMES" GridPane.valignment="TOP" GridPane.vgrow="ALWAYS">
+               <columnConstraints>
+                  <ColumnConstraints hgrow="SOMETIMES" minWidth="780.0" prefWidth="780.0" />
+               </columnConstraints>
+               <rowConstraints>
+                  <RowConstraints minHeight="720.0" prefHeight="720.0" vgrow="NEVER" />
+                  <RowConstraints maxHeight="30.0" minHeight="10.0" prefHeight="30.0" vgrow="NEVER" />
+               </rowConstraints>
+               <children>
+                  <TableView fx:id="tableView" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="709.0" prefWidth="1047.0" styleClass="tableView" stylesheets="@../utility/table.css" GridPane.halignment="CENTER" GridPane.hgrow="ALWAYS" GridPane.valignment="TOP" GridPane.vgrow="ALWAYS">
+                     <columns>
+                        <TableColumn fx:id="remarkTableCol" maxWidth="30.0" minWidth="30.0" prefWidth="30.0" styleClass="tableColumn" />
+                        <TableColumn fx:id="nameTableCol" maxWidth="1.7976931348623157E308" minWidth="150.0" prefWidth="150.0" styleClass="tableColumn" text="Name" />
+                        <TableColumn fx:id="typeTableCol" maxWidth="1.7976931348623157E308" minWidth="150.0" prefWidth="150.0" styleClass="tableColumn" text="Type" />
+                        <TableColumn maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="0.0" styleClass="tableColumn" text="Required For">
+                           <columns>
+                              <TableColumn fx:id="directRequiredForTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Direct" />
+                              <TableColumn fx:id="totalRequiredForTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Total" />
+                           </columns>
+                        </TableColumn>
+                        <TableColumn maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="114.0" styleClass="tableColumn" text="Depends On">
+                           <columns>
+                              <TableColumn fx:id="directDependsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Direct" />
+                              <TableColumn fx:id="totalDependsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Total" />
+                           </columns>
+                        </TableColumn>
+                        <TableColumn fx:id="serialSetTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="75.0" styleClass="tableColumn" text="Serial Sets" />
+                        <TableColumn fx:id="dataTableCol" maxWidth="1.7976931348623157E308" minWidth="150.0" prefWidth="150.0" styleClass="tableColumn" text="Data" />
+                        <TableColumn fx:id="statusTableCol" maxWidth="1.7976931348623157E308" minWidth="150.0" prefWidth="190.0" styleClass="tableColumn" text="Status" />
+                     </columns>
+                  </TableView>
+                  <HBox prefHeight="100.0" prefWidth="200.0" styleClass="background" GridPane.rowIndex="1">
+                     <children>
+                        <Button id="clearButton" fx:id="clearButton" minHeight="20.0" minWidth="50.0" mnemonicParsing="false" onAction="#clearAction" prefHeight="20.0" prefWidth="50.0" text="Clear" HBox.hgrow="NEVER">
+                           <font>
+                              <Font size="9.0" />
+                           </font>
+                           <HBox.margin>
+                              <Insets left="10.0" right="20.0" top="6.0" />
+                           </HBox.margin>
+                        </Button>
+                        <CheckBox fx:id="withRequired" mnemonicParsing="false" styleClass="taskMangerLabel" text="With Required-For" HBox.hgrow="NEVER">
+                           <HBox.margin>
+                              <Insets top="6.0" />
+                           </HBox.margin>
+                        </CheckBox>
+                        <CheckBox fx:id="withDepend" mnemonicParsing="false" styleClass="taskMangerLabel" text="With Dpends-On " HBox.hgrow="NEVER">
+                           <HBox.margin>
+                              <Insets left="20.0" top="6.0" />
+                           </HBox.margin>
+                        </CheckBox>
+                     </children>
+                  </HBox>
+               </children>
+            </GridPane>
+            <GridPane styleClass="background" GridPane.columnIndex="1">
+               <columnConstraints>
+                  <ColumnConstraints hgrow="NEVER" maxWidth="1.7976931348623157E308" minWidth="10.0" />
+               </columnConstraints>
+               <rowConstraints>
+                  <RowConstraints maxHeight="280.0" minHeight="52.0" prefHeight="52.0" vgrow="NEVER" />
+                  <RowConstraints maxHeight="1.7976931348623157E308" minHeight="10.0" prefHeight="346.0" vgrow="ALWAYS" />
+               </rowConstraints>
+               <children>
+                  <Label id="titleLabel" alignment="CENTER" prefHeight="55.0" prefWidth="252.0" styleClass="background" text="Task manger" textAlignment="CENTER" GridPane.halignment="CENTER" GridPane.hgrow="NEVER" GridPane.valignment="CENTER" GridPane.vgrow="NEVER" />
+                  <AnchorPane maxHeight="1.7976931348623157E308" maxWidth="1.7976931348623157E308" minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" styleClass="background" GridPane.rowIndex="1">
+                     <children>
+                        <GridPane layoutY="31.0" maxHeight="1.7976931348623157E308" maxWidth="1.7976931348623157E308" prefHeight="699.0" prefWidth="253.0" styleClass="background" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
+                           <columnConstraints>
+                              <ColumnConstraints hgrow="NEVER" minWidth="10.0" prefWidth="258.0" />
+                           </columnConstraints>
+                           <rowConstraints>
+                              <RowConstraints maxHeight="194.0" minHeight="10.0" prefHeight="85.0" vgrow="SOMETIMES" />
+                              <RowConstraints maxHeight="389.0" minHeight="10.0" prefHeight="126.0" vgrow="SOMETIMES" />
+                              <RowConstraints maxHeight="356.0" minHeight="10.0" prefHeight="57.0" vgrow="SOMETIMES" />
+                              <RowConstraints maxHeight="356.0" minHeight="10.0" prefHeight="56.0" vgrow="SOMETIMES" />
+                              <RowConstraints maxHeight="316.0" minHeight="10.0" prefHeight="149.0" vgrow="SOMETIMES" />
+                              <RowConstraints maxHeight="316.0" minHeight="10.0" prefHeight="52.0" vgrow="SOMETIMES" />
+                           </rowConstraints>
+                           <children>
+                              <HBox alignment="CENTER" prefHeight="34.0" prefWidth="252.0" GridPane.halignment="CENTER" GridPane.hgrow="NEVER" GridPane.valignment="CENTER" GridPane.vgrow="NEVER">
                                  <children>
-                                    <BorderPane GridPane.halignment="CENTER" GridPane.hgrow="NEVER" GridPane.valignment="CENTER" GridPane.vgrow="NEVER">
-                                       <left>
-                                          <Label styleClass="taskMangerLabel" text="Compiler " BorderPane.alignment="CENTER">
-                                             <BorderPane.margin>
-                                                <Insets left="10.0" />
-                                             </BorderPane.margin>
-                                          </Label>
-                                       </left>
-                                       <center>
-                                          <ToggleButton mnemonicParsing="false" styleClass="toggleButtonTaskManger" text="ToggleButton" BorderPane.alignment="CENTER" />
-                                       </center>
-                                       <right>
-                                          <Label styleClass="taskMangerLabel" text="Simulation " BorderPane.alignment="CENTER">
-                                             <BorderPane.margin>
-                                                <Insets right="10.0" />
-                                             </BorderPane.margin>
+                                    <ToggleButton fx:id="compilerToggle" contentDisplay="CENTER" mnemonicParsing="false" onAction="#compilerToggleSelected" prefHeight="50.0" prefWidth="100.0" text="Compiler ">
+                                       <HBox.margin>
+                                          <Insets right="5.0" />
+                                       </HBox.margin>
+                                    </ToggleButton>
+                                    <ToggleButton fx:id="simulationToggle" contentDisplay="CENTER" mnemonicParsing="false" onAction="#simulationToggleSelected" prefHeight="50.0" prefWidth="100.0" text="Simulation ">
+                                       <HBox.margin>
+                                          <Insets left="5.0" />
+                                       </HBox.margin>
+                                    </ToggleButton>
+                                 </children>
+                              </HBox>
+                              <VBox alignment="CENTER" prefHeight="86.0" prefWidth="254.0" GridPane.rowIndex="2">
+                                 <GridPane.margin>
+                                    <Insets />
+                                 </GridPane.margin>
+                                 <children>
+                                    <ComboBox fx:id="scratchOrIncremental" minHeight="30.0" prefHeight="30.0" prefWidth="200.0" />
+                                 </children>
+                              </VBox>
+                              <VBox alignment="TOP_CENTER" disable="true" prefHeight="133.0" prefWidth="241.0" GridPane.rowIndex="4">
+                                 <GridPane.margin>
+                                    <Insets left="10.0" />
+                                 </GridPane.margin>
+                                 <children>
+                                    <Label alignment="CENTER" contentDisplay="CENTER" text="Progress Task" textAlignment="CENTER" underline="true">
+                                       <font>
+                                          <Font size="18.0" />
+                                       </font>
+                                    </Label>
+                                    <HBox>
+                                       <children>
+                                          <ProgressBar id="proggressBar" fx:id="progressBarTask" prefHeight="20.0" prefWidth="185.0" progress="0.0" />
+                                          <Label text="Progress">
+                                             <HBox.margin>
+                                                <Insets left="5.0" />
+                                             </HBox.margin>
                                           </Label>
-                                       </right>
-                                    </BorderPane>
-                                    <ComboBox id="comboBoxTaskManger" minHeight="30.0" prefHeight="30.0" prefWidth="200.0" GridPane.rowIndex="3">
-                                       <GridPane.margin>
-                                          <Insets left="10.0" />
-                                       </GridPane.margin>
-                                    </ComboBox>
-                                    <ProgressBar id="proggressBar" prefHeight="20.0" prefWidth="165.0" progress="0.0" GridPane.rowIndex="5">
-                                       <GridPane.margin>
-                                          <Insets left="10.0" />
-                                       </GridPane.margin>
-                                    </ProgressBar>
-                                    <BorderPane maxHeight="47.0" maxWidth="353.0" minHeight="46.0" minWidth="234.0" prefHeight="47.0" prefWidth="234.0" GridPane.hgrow="NEVER" GridPane.rowIndex="6" GridPane.vgrow="NEVER">
-                                       <right>
-                                          <HBox prefHeight="51.0" prefWidth="184.0" BorderPane.alignment="CENTER">
-                                             <children>
-                                                <Button minHeight="30.0" minWidth="83.0" mnemonicParsing="false" prefHeight="30.0" prefWidth="83.0" styleClass="buttonButtonTaskManger" text="Pause">
-                                                   <HBox.margin>
-                                                      <Insets right="10.0" top="10.0" />
-                                                   </HBox.margin>
-                                                </Button>
-                                                <Button minHeight="30.0" minWidth="83.0" mnemonicParsing="false" prefHeight="30.0" prefWidth="83.0" styleClass="buttonButtonTaskManger" text="Run">
-                                                   <HBox.margin>
-                                                      <Insets left="10.0" right="10.0" top="10.0" />
-                                                   </HBox.margin>
-                                                </Button>
-                                             </children>
-                                          </HBox>
-                                       </right>
-                                    </BorderPane>
-                                    <HBox opacity="0.19" GridPane.rowIndex="1">
-                                       <children>
-                                          <VBox prefHeight="121.0" prefWidth="173.0">
-                                             <children>
-                                                <Label styleClass="taskMangerLabel" text="Processing time:">
-                                                   <VBox.margin>
-                                                      <Insets left="10.0" top="10.0" />
-                                                   </VBox.margin>
-                                                </Label>
-                                                <Label styleClass="taskMangerLabel" text="The chance for success">
-                                                   <VBox.margin>
-                                                      <Insets left="10.0" top="20.0" />
-                                                   </VBox.margin>
-                                                </Label>
-                                                <Label styleClass="taskMangerLabel" text="Success with a warning">
-                                                   <VBox.margin>
-                                                      <Insets left="10.0" top="20.0" />
-                                                   </VBox.margin>
-                                                </Label>
-                                             </children>
-                                          </VBox>
-                                          <VBox>
-                                             <HBox.margin>
-                                                <Insets />
-                                             </HBox.margin>
-                                             <children>
-                                                <Spinner maxHeight="17.0" minHeight="9.0" prefHeight="17.0" prefWidth="53.0" styleClass="taskMangerSpinner">
-                                                   <VBox.margin>
-                                                      <Insets top="10.0" />
-                                                   </VBox.margin>
-                                                </Spinner>
-                                                <Spinner maxHeight="17.0" minHeight="9.0" prefHeight="17.0" prefWidth="53.0" styleClass="taskMangerSpinner">
-                                                   <VBox.margin>
-                                                      <Insets top="20.0" />
-                                                   </VBox.margin>
-                                                </Spinner>
-                                                <Spinner maxHeight="21.0" minHeight="9.0" prefHeight="17.0" prefWidth="53.0" styleClass="taskMangerSpinner">
-                                                   <VBox.margin>
-                                                      <Insets top="20.0" />
-                                                   </VBox.margin>
-                                                </Spinner>
-                                             </children>
-                                          </VBox>
-                                       </children>
-                                    </HBox>
-                                    <HBox prefHeight="35.0" prefWidth="211.0" GridPane.rowIndex="4">
-                                       <children>
-                                          <VBox prefHeight="121.0" prefWidth="173.0">
-                                             <children>
-                                                <Label styleClass="taskMangerLabel" text="Number of task in parallel">
-                                                   <VBox.margin>
-                                                      <Insets left="10.0" top="10.0" />
-                                                   </VBox.margin>
-                                                </Label>
-                                             </children>
-                                          </VBox>
-                                          <VBox>
-                                             <HBox.margin>
-                                                <Insets />
-                                             </HBox.margin>
-                                             <children>
-                                                <Spinner maxHeight="17.0" minHeight="9.0" prefHeight="17.0" prefWidth="53.0" styleClass="taskMangerSpinner">
-                                                   <VBox.margin>
-                                                      <Insets top="10.0" />
-                                                   </VBox.margin>
-                                                </Spinner>
-                                             </children>
-                                          </VBox>
-                                       </children>
-                                    </HBox>
-                                 </children>
-                              </GridPane>
-                           </children>
-                        </AnchorPane>
-                     </children>
-                  </GridPane>
-               </children>
-            </GridPane>
-         </content>
-      </ScrollPane>
+                                       </children>
+                                       <VBox.margin>
+                                          <Insets top="20.0" />
+                                       </VBox.margin>
+                                    </HBox>
+                                    <HBox>
+                                       <children>
+                                          <Label text="Message:" />
+                                          <Label text="MessageText">
+                                             <HBox.margin>
+                                                <Insets left="10.0" />
+                                             </HBox.margin>
+                                          </Label>
+                                       </children>
+                                       <VBox.margin>
+                                          <Insets top="20.0" />
+                                       </VBox.margin>
+                                    </HBox>
+                                    <HBox>
+                                       <children>
+                                          <Label text="Type of Running" />
+                                          <Label text="from scratch">
+                                             <HBox.margin>
+                                                <Insets left="10.0" />
+                                             </HBox.margin>
+                                          </Label>
+                                       </children>
+                                       <VBox.margin>
+                                          <Insets top="10.0" />
+                                       </VBox.margin>
+                                    </HBox>
+                                 </children>
+                              </VBox>
+                              <BorderPane maxHeight="47.0" maxWidth="353.0" minHeight="46.0" minWidth="234.0" prefHeight="47.0" prefWidth="234.0" GridPane.hgrow="NEVER" GridPane.rowIndex="5" GridPane.vgrow="NEVER">
+                                 <right>
+                                    <HBox prefHeight="51.0" prefWidth="184.0" BorderPane.alignment="CENTER">
+                                       <children>
+                                          <Button fx:id="pauseButton" minHeight="30.0" minWidth="83.0" mnemonicParsing="false" onAction="#pauseTask" prefHeight="30.0" prefWidth="83.0" styleClass="buttonButtonTaskManger" text="Pause">
+                                             <HBox.margin>
+                                                <Insets right="10.0" top="10.0" />
+                                             </HBox.margin>
+                                          </Button>
+                                          <Button fx:id="runButton" minHeight="30.0" minWidth="83.0" mnemonicParsing="false" onAction="#runTask" prefHeight="30.0" prefWidth="83.0" styleClass="buttonButtonTaskManger" text="Run">
+                                             <HBox.margin>
+                                                <Insets left="10.0" right="10.0" top="10.0" />
+                                             </HBox.margin>
+                                          </Button>
+                                       </children>
+                                    </HBox>
+                                 </right>
+                              </BorderPane>
+                              <HBox fx:id="simulationBox" GridPane.rowIndex="1">
+                                 <children>
+                                    <VBox prefHeight="121.0" prefWidth="173.0">
+                                       <children>
+                                          <Label styleClass="taskMangerLabel" text="Processing time: (ms)">
+                                             <VBox.margin>
+                                                <Insets left="10.0" top="15.0" />
+                                             </VBox.margin>
+                                          </Label>
+                                          <Label styleClass="taskMangerLabel" text="The chance for success (%)">
+                                             <VBox.margin>
+                                                <Insets left="10.0" top="23.0" />
+                                             </VBox.margin>
+                                          </Label>
+                                          <Label styleClass="taskMangerLabel" text="Success with a warning (%)">
+                                             <VBox.margin>
+                                                <Insets left="10.0" top="23.0" />
+                                             </VBox.margin>
+                                          </Label>
+                                       </children>
+                                    </VBox>
+                                    <VBox>
+                                       <HBox.margin>
+                                          <Insets />
+                                       </HBox.margin>
+                                       <children>
+                                          <Spinner fx:id="ProcessingTimeSpinner" maxHeight="17.0" minHeight="20.0" prefHeight="17.0" prefWidth="53.0" styleClass="taskMangerSpinner">
+                                             <VBox.margin>
+                                                <Insets top="10.0" />
+                                             </VBox.margin>
+                                          </Spinner>
+                                          <Spinner fx:id="successSpinner" maxHeight="17.0" minHeight="20.0" prefHeight="17.0" prefWidth="53.0" styleClass="taskMangerSpinner">
+                                             <VBox.margin>
+                                                <Insets top="20.0" />
+                                             </VBox.margin>
+                                          </Spinner>
+                                          <Spinner fx:id="successWithWarningSpinner" maxHeight="20.0" minHeight="20.0" prefHeight="20.0" prefWidth="53.0" styleClass="taskMangerSpinner">
+                                             <VBox.margin>
+                                                <Insets top="20.0" />
+                                             </VBox.margin>
+                                          </Spinner>
+                                       </children>
+                                    </VBox>
+                                 </children>
+                              </HBox>
+                              <HBox prefHeight="35.0" prefWidth="211.0" GridPane.rowIndex="3">
+                                 <children>
+                                    <VBox prefHeight="121.0" prefWidth="173.0">
+                                       <children>
+                                          <Label styleClass="taskMangerLabel" text="Number of task in parallel">
+                                             <VBox.margin>
+                                                <Insets left="10.0" top="13.0" />
+                                             </VBox.margin>
+                                          </Label>
+                                       </children>
+                                    </VBox>
+                                    <VBox>
+                                       <HBox.margin>
+                                          <Insets />
+                                       </HBox.margin>
+                                       <children>
+                                          <Spinner fx:id="numOfTreadsSpinner" maxHeight="20.0" minHeight="20.0" prefHeight="20.0" prefWidth="53.0" styleClass="taskMangerSpinner">
+                                             <VBox.margin>
+                                                <Insets top="10.0" />
+                                             </VBox.margin>
+                                          </Spinner>
+                                       </children>
+                                    </VBox>
+                                 </children>
+                              </HBox>
+                           </children>
+                        </GridPane>
+                     </children>
+                  </AnchorPane>
+               </children>
+            </GridPane>
+         </children>
+      </GridPane>
    </center>
-   <stylesheets>
-      <URL value="@../utility/table.css" />
-      <URL value="@../utility/backgroung.css" />
-      <URL value="@css/task.css" />
-   </stylesheets>
 </BorderPane>
Index: UI/src/FXML/task/processing/targetInformationTask.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/task/processing/targetInformationTask.fxml b/UI/src/FXML/task/processing/targetInformationTask.fxml
new file mode 100644
--- /dev/null	(date 1640617936507)
+++ b/UI/src/FXML/task/processing/targetInformationTask.fxml	(date 1640617936507)
@@ -0,0 +1,70 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.geometry.Insets?>
+<?import javafx.scene.control.Label?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.layout.HBox?>
+<?import javafx.scene.layout.VBox?>
+<?import javafx.scene.text.Text?>
+
+
+<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="319.0" prefWidth="529.0" styleClass="background" stylesheets="@../../utility/backgroung.css" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="FXML.task.processing.targetInfoTaskController">
+   <children>
+      <VBox layoutX="25.0" layoutY="67.0" prefHeight="200.0" prefWidth="100.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
+         <children>
+            <HBox>
+               <VBox.margin>
+                  <Insets left="10.0" top="20.0" />
+               </VBox.margin>
+               <children>
+                  <Label text="Name:" />
+                  <Text fx:id="nameTarget" strokeType="OUTSIDE" strokeWidth="0.0" text="Text">
+                     <HBox.margin>
+                        <Insets left="10.0" />
+                     </HBox.margin>
+                  </Text>
+               </children>
+            </HBox>
+            <HBox>
+               <children>
+                  <Label text="Status:" />
+                  <Text fx:id="statusTarget" strokeType="OUTSIDE" strokeWidth="0.0" text="Text">
+                     <HBox.margin>
+                        <Insets left="10.0" />
+                     </HBox.margin>
+                  </Text>
+               </children>
+               <VBox.margin>
+                  <Insets left="10.0" top="20.0" />
+               </VBox.margin>
+            </HBox>
+            <HBox>
+               <children>
+                  <Label text="Serial Set:" />
+                  <Text fx:id="serialSetInfo" strokeType="OUTSIDE" strokeWidth="0.0" text="Text">
+                     <HBox.margin>
+                        <Insets left="10.0" />
+                     </HBox.margin>
+                  </Text>
+               </children>
+               <VBox.margin>
+                  <Insets left="10.0" top="20.0" />
+               </VBox.margin>
+            </HBox>
+            <HBox>
+               <children>
+                  <Label text="process status:" />
+                  <Text fx:id="processStatus" strokeType="OUTSIDE" strokeWidth="0.0" text="Text">
+                     <HBox.margin>
+                        <Insets left="10.0" />
+                     </HBox.margin>
+                  </Text>
+               </children>
+               <VBox.margin>
+                  <Insets left="10.0" top="20.0" />
+               </VBox.margin>
+            </HBox>
+         </children>
+      </VBox>
+   </children>
+</AnchorPane>
Index: UI/src/FXML/path/path.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import javafx.geometry.Insets?>\n<?import javafx.scene.control.Button?>\n<?import javafx.scene.control.ComboBox?>\n<?import javafx.scene.control.Label?>\n<?import javafx.scene.control.ListView?>\n<?import javafx.scene.control.ScrollPane?>\n<?import javafx.scene.control.TableColumn?>\n<?import javafx.scene.control.TableView?>\n<?import javafx.scene.control.ToggleButton?>\n<?import javafx.scene.layout.BorderPane?>\n<?import javafx.scene.layout.ColumnConstraints?>\n<?import javafx.scene.layout.GridPane?>\n<?import javafx.scene.layout.HBox?>\n<?import javafx.scene.layout.RowConstraints?>\n<?import javafx.scene.layout.VBox?>\n<?import javafx.scene.text.Font?>\n<?import javafx.scene.text.Text?>\n\n<BorderPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"750.0\" prefWidth=\"1300.0\" stylesheets=\"@css/path.css\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"FXML.path.pathController\">\n   <center>\n      <ScrollPane fitToHeight=\"true\" fitToWidth=\"true\" prefHeight=\"200.0\" prefWidth=\"200.0\" BorderPane.alignment=\"CENTER\">\n         <content>\n            <GridPane minHeight=\"670.0\" minWidth=\"1290.0\" prefHeight=\"670.0\" prefWidth=\"1290.0\">\n              <columnConstraints>\n                <ColumnConstraints hgrow=\"NEVER\" maxWidth=\"941.0\" minWidth=\"10.0\" prefWidth=\"782.0\" />\n                  <ColumnConstraints hgrow=\"ALWAYS\" maxWidth=\"521.0\" minWidth=\"0.0\" prefWidth=\"516.0\" />\n              </columnConstraints>\n              <rowConstraints>\n                <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\n              </rowConstraints>\n               <children>\n                  <TableView fx:id=\"tableView\" minHeight=\"720.0\" minWidth=\"780.0\" prefHeight=\"720.0\" prefWidth=\"780.0\" styleClass=\"path-table-view\" GridPane.halignment=\"CENTER\" GridPane.hgrow=\"SOMETIMES\" GridPane.valignment=\"TOP\" GridPane.vgrow=\"ALWAYS\">\n                     <columns>\n                        <TableColumn fx:id=\"remarkTableCol\" maxWidth=\"30.0\" minWidth=\"30.0\" prefWidth=\"30.0\" styleClass=\"tableColumn\" />\n                        <TableColumn fx:id=\"nameTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"150.0\" prefWidth=\"150.0\" styleClass=\"tableColumn\" text=\"Name\" />\n                        <TableColumn fx:id=\"typeTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"150.0\" prefWidth=\"150.0\" styleClass=\"tableColumn\" text=\"Type\" />\n                        <TableColumn maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"0.0\" styleClass=\"tableColumn\" text=\"Required For\">\n                           <columns>\n                              <TableColumn fx:id=\"directRequiredForTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"75.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Direct\" />\n                              <TableColumn fx:id=\"totalRequiredForTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"75.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Total\" />\n                           </columns>\n                        </TableColumn>\n                        <TableColumn maxWidth=\"1.7976931348623157E308\" minWidth=\"-1.0\" prefWidth=\"114.0\" styleClass=\"tableColumn\" text=\"Depends On\">\n                           <columns>\n                              <TableColumn fx:id=\"directDepemdsOnTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"75.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Direct\" />\n                              <TableColumn fx:id=\"TotalDepemdsOnTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"75.0\" prefWidth=\"75.0\" styleClass=\"tableColumn\" text=\"Total\" />\n                           </columns>\n                        </TableColumn>\n                        <TableColumn fx:id=\"dataTableCol\" maxWidth=\"1.7976931348623157E308\" minWidth=\"150.0\" prefWidth=\"150.0\" styleClass=\"tableColumn\" text=\"Data\" />\n                     </columns>\n                  </TableView>\n                  <GridPane styleClass=\"path\" GridPane.columnIndex=\"1\">\n                     <columnConstraints>\n                        <ColumnConstraints hgrow=\"ALWAYS\" maxWidth=\"1.7976931348623157E308\" minWidth=\"10.0\" />\n                     </columnConstraints>\n                     <rowConstraints>\n                        <RowConstraints maxHeight=\"280.0\" minHeight=\"52.0\" prefHeight=\"52.0\" vgrow=\"NEVER\" />\n                        <RowConstraints maxHeight=\"1.7976931348623157E308\" minHeight=\"10.0\" prefHeight=\"346.0\" vgrow=\"ALWAYS\" />\n                     </rowConstraints>\n                     <children>\n                        <VBox prefHeight=\"200.0\" prefWidth=\"100.0\" styleClass=\"path\" GridPane.hgrow=\"NEVER\" GridPane.vgrow=\"NEVER\">\n                           <children>\n                              <Label prefHeight=\"43.0\" prefWidth=\"138.0\" styleClass=\"path-label\" text=\"Path between\" VBox.vgrow=\"ALWAYS\">\n                                 <VBox.margin>\n                                    <Insets left=\"10.0\" right=\"5.0\" top=\"5.0\" />\n                                 </VBox.margin>\n                              </Label>\n                              <Label prefHeight=\"43.0\" prefWidth=\"138.0\" styleClass=\"path-label\" text=\"two targets\">\n                                 <VBox.margin>\n                                    <Insets bottom=\"5.0\" left=\"10.0\" right=\"5.0\" />\n                                 </VBox.margin>\n                              </Label>\n                           </children>\n                        </VBox>\n                        <ListView fx:id=\"pathListView\" maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"335.0\" prefWidth=\"186.0\" styleClass=\"path\" GridPane.hgrow=\"ALWAYS\" GridPane.rowIndex=\"1\" GridPane.vgrow=\"ALWAYS\" />\n                     </children>\n                  </GridPane>\n               </children>\n            </GridPane>\n         </content>\n      </ScrollPane>\n   </center>\n   <bottom>\n      <GridPane prefHeight=\"25.0\" styleClass=\"path\" BorderPane.alignment=\"CENTER\">\n         <columnConstraints>\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"583.0\" minWidth=\"10.0\" prefWidth=\"153.0\" />\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"583.0\" minWidth=\"10.0\" prefWidth=\"239.0\" />\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"583.0\" minWidth=\"10.0\" prefWidth=\"106.0\" />\n            <ColumnConstraints hgrow=\"NEVER\" maxWidth=\"583.0\" minWidth=\"10.0\" prefWidth=\"195.0\" />\n            <ColumnConstraints hgrow=\"NEVER\" maxWidth=\"583.0\" minWidth=\"10.0\" prefWidth=\"159.0\" />\n            <ColumnConstraints hgrow=\"NEVER\" maxWidth=\"1.7976931348623157E308\" minWidth=\"147.0\" prefWidth=\"214.0\" />\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"583.0\" minWidth=\"60.0\" prefWidth=\"144.0\" />\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"583.0\" minWidth=\"60.0\" prefWidth=\"100.0\" />\n         </columnConstraints>\n         <rowConstraints>\n            <RowConstraints minHeight=\"30.0\" vgrow=\"SOMETIMES\" />\n         </rowConstraints>\n         <children>\n            <ComboBox fx:id=\"depenceComboBox\" minHeight=\"10.0\" prefHeight=\"17.0\" prefWidth=\"136.0\" styleClass=\"path\" GridPane.columnIndex=\"4\" />\n            <HBox prefHeight=\"25.0\" prefWidth=\"103.0\" styleClass=\"path\" GridPane.columnIndex=\"3\">\n               <children>\n                  <Label prefHeight=\"25.0\" prefWidth=\"48.0\" styleClass=\"path-label\" text=\"Source:\" HBox.hgrow=\"ALWAYS\">\n                     <HBox.margin>\n                        <Insets />\n                     </HBox.margin>\n                     <padding>\n                        <Insets right=\"5.0\" top=\"1.0\" />\n                     </padding>\n                  </Label>\n                  <Text fx:id=\"sourceText\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" styleClass=\"path-text\" text=\"Text\" wrappingWidth=\"51.27001953125\" HBox.hgrow=\"ALWAYS\">\n                     <HBox.margin>\n                        <Insets top=\"7.0\" />\n                     </HBox.margin>\n                  </Text>\n               </children>\n            </HBox>\n            <HBox prefHeight=\"100.0\" prefWidth=\"200.0\" styleClass=\"path\" GridPane.columnIndex=\"5\">\n               <children>\n                  <Label prefHeight=\"26.0\" prefWidth=\"71.0\" styleClass=\"path-label\" text=\"destination:\" HBox.hgrow=\"ALWAYS\">\n                     <HBox.margin>\n                        <Insets left=\"20.0\" />\n                     </HBox.margin>\n                     <padding>\n                        <Insets right=\"5.0\" top=\"1.0\" />\n                     </padding>\n                  </Label>\n                  <Text fx:id=\"destinationText\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" styleClass=\"path-text\" text=\"Text\" wrappingWidth=\"60.27001953125\" HBox.hgrow=\"ALWAYS\">\n                     <HBox.margin>\n                        <Insets top=\"7.0\" />\n                     </HBox.margin>\n                  </Text>\n               </children>\n            </HBox>\n            <Button fx:id=\"switchButton\" minHeight=\"20.0\" mnemonicParsing=\"false\" onAction=\"#switchAction\" prefHeight=\"20.0\" prefWidth=\"50.0\" styleClass=\"path-button\" text=\"Switch\" GridPane.columnIndex=\"6\">\n               <font>\n                  <Font size=\"9.0\" />\n               </font>\n            </Button>\n            <Button fx:id=\"clearButton\" minHeight=\"20.0\" minWidth=\"50.0\" mnemonicParsing=\"false\" onAction=\"#clearAction\" prefHeight=\"20.0\" prefWidth=\"50.0\" styleClass=\"path-button\" text=\"Clear\">\n               <font>\n                  <Font size=\"9.0\" />\n               </font>\n               <GridPane.margin>\n                  <Insets left=\"10.0\" />\n               </GridPane.margin>\n            </Button>\n            <HBox prefHeight=\"100.0\" prefWidth=\"200.0\" GridPane.columnIndex=\"1\" GridPane.halignment=\"CENTER\" GridPane.valignment=\"CENTER\">\n               <children>\n                  <ToggleButton fx:id=\"toggleButtonPath\" minHeight=\"20.0\" minWidth=\"50.0\" mnemonicParsing=\"false\" prefHeight=\"20.0\" prefWidth=\"50.0\" styleClass=\"path-button\" text=\"Path\">\n                     <HBox.margin>\n                        <Insets left=\"1.0\" right=\"1.0\" top=\"4.0\" />\n                     </HBox.margin>\n                  </ToggleButton>\n                  <ToggleButton fx:id=\"toggleButtonCycle\" minHeight=\"20.0\" minWidth=\"50.0\" mnemonicParsing=\"false\" prefHeight=\"20.0\" prefWidth=\"50.0\" styleClass=\"path-button\" text=\"Cycle\">\n                     <HBox.margin>\n                        <Insets right=\"1.0\" top=\"4.0\" />\n                     </HBox.margin>\n                  </ToggleButton>\n               </children>\n            </HBox>\n            <Button fx:id=\"runButton\" minHeight=\"20.0\" mnemonicParsing=\"false\" onAction=\"#runButtonAction\" prefHeight=\"20.0\" prefWidth=\"50.0\" styleClass=\"path-button\" text=\"Run\" GridPane.columnIndex=\"7\">\n               <font>\n                  <Font size=\"9.0\" />\n               </font>\n            </Button>\n            <Button id=\"setButton\" fx:id=\"setButton\" minHeight=\"20.0\" minWidth=\"50.0\" mnemonicParsing=\"false\" onAction=\"#setForRun\" prefHeight=\"20.0\" prefWidth=\"50.0\" styleClass=\"path-button\" text=\"Set\" GridPane.columnIndex=\"2\">\n               <font>\n                  <Font size=\"9.0\" />\n               </font>\n            </Button>\n         </children>\n      </GridPane>\n   </bottom>\n</BorderPane>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/path/path.fxml b/UI/src/FXML/path/path.fxml
--- a/UI/src/FXML/path/path.fxml	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/path/path.fxml	(date 1640617936505)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
+<?import java.net.URL?>
 <?import javafx.geometry.Insets?>
 <?import javafx.scene.control.Button?>
 <?import javafx.scene.control.ComboBox?>
@@ -18,20 +19,20 @@
 <?import javafx.scene.text.Font?>
 <?import javafx.scene.text.Text?>
 
-<BorderPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="0.0" minWidth="0.0" prefHeight="750.0" prefWidth="1300.0" stylesheets="@css/path.css" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="FXML.path.pathController">
+<BorderPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="0.0" minWidth="0.0" prefHeight="750.0" prefWidth="1300.0" styleClass="background" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="FXML.path.pathController">
    <center>
       <ScrollPane fitToHeight="true" fitToWidth="true" prefHeight="200.0" prefWidth="200.0" BorderPane.alignment="CENTER">
          <content>
-            <GridPane minHeight="670.0" minWidth="1290.0" prefHeight="670.0" prefWidth="1290.0">
+            <GridPane minHeight="670.0" minWidth="1290.0" prefHeight="670.0" prefWidth="1290.0" styleClass="background">
               <columnConstraints>
-                <ColumnConstraints hgrow="NEVER" maxWidth="941.0" minWidth="10.0" prefWidth="782.0" />
-                  <ColumnConstraints hgrow="ALWAYS" maxWidth="521.0" minWidth="0.0" prefWidth="516.0" />
+                <ColumnConstraints hgrow="NEVER" maxWidth="856.0" minWidth="10.0" prefWidth="856.0" />
+                  <ColumnConstraints hgrow="ALWAYS" maxWidth="521.0" minWidth="0.0" prefWidth="442.0" />
               </columnConstraints>
               <rowConstraints>
                 <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
               </rowConstraints>
                <children>
-                  <TableView fx:id="tableView" minHeight="720.0" minWidth="780.0" prefHeight="720.0" prefWidth="780.0" styleClass="path-table-view" GridPane.halignment="CENTER" GridPane.hgrow="SOMETIMES" GridPane.valignment="TOP" GridPane.vgrow="ALWAYS">
+                  <TableView fx:id="tableView" maxWidth="850.0" minHeight="720.0" minWidth="850.0" prefHeight="720.0" prefWidth="850.0" styleClass="background" GridPane.halignment="CENTER" GridPane.hgrow="SOMETIMES" GridPane.valignment="TOP" GridPane.vgrow="ALWAYS">
                      <columns>
                         <TableColumn fx:id="remarkTableCol" maxWidth="30.0" minWidth="30.0" prefWidth="30.0" styleClass="tableColumn" />
                         <TableColumn fx:id="nameTableCol" maxWidth="1.7976931348623157E308" minWidth="150.0" prefWidth="150.0" styleClass="tableColumn" text="Name" />
@@ -44,14 +45,15 @@
                         </TableColumn>
                         <TableColumn maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="114.0" styleClass="tableColumn" text="Depends On">
                            <columns>
-                              <TableColumn fx:id="directDepemdsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Direct" />
-                              <TableColumn fx:id="TotalDepemdsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Total" />
+                              <TableColumn fx:id="directDependsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Direct" />
+                              <TableColumn fx:id="totalDependsOnTableCol" maxWidth="1.7976931348623157E308" minWidth="75.0" prefWidth="75.0" styleClass="tableColumn" text="Total" />
                            </columns>
                         </TableColumn>
+                        <TableColumn fx:id="serialSetTableCol" maxWidth="1.7976931348623157E308" minWidth="-1.0" prefWidth="75.0" styleClass="tableColumn" text="Serial Sets" />
                         <TableColumn fx:id="dataTableCol" maxWidth="1.7976931348623157E308" minWidth="150.0" prefWidth="150.0" styleClass="tableColumn" text="Data" />
                      </columns>
                   </TableView>
-                  <GridPane styleClass="path" GridPane.columnIndex="1">
+                  <GridPane prefHeight="716.0" prefWidth="353.0" styleClass="path" GridPane.columnIndex="1">
                      <columnConstraints>
                         <ColumnConstraints hgrow="ALWAYS" maxWidth="1.7976931348623157E308" minWidth="10.0" />
                      </columnConstraints>
@@ -98,7 +100,7 @@
             <RowConstraints minHeight="30.0" vgrow="SOMETIMES" />
          </rowConstraints>
          <children>
-            <ComboBox fx:id="depenceComboBox" minHeight="10.0" prefHeight="17.0" prefWidth="136.0" styleClass="path" GridPane.columnIndex="4" />
+            <ComboBox id="depComboBox" fx:id="depenceComboBox" minHeight="10.0" prefHeight="17.0" prefWidth="136.0" styleClass="path" GridPane.columnIndex="4" />
             <HBox prefHeight="25.0" prefWidth="103.0" styleClass="path" GridPane.columnIndex="3">
                <children>
                   <Label prefHeight="25.0" prefWidth="48.0" styleClass="path-label" text="Source:" HBox.hgrow="ALWAYS">
@@ -148,14 +150,19 @@
             </Button>
             <HBox prefHeight="100.0" prefWidth="200.0" GridPane.columnIndex="1" GridPane.halignment="CENTER" GridPane.valignment="CENTER">
                <children>
-                  <ToggleButton fx:id="toggleButtonPath" minHeight="20.0" minWidth="50.0" mnemonicParsing="false" prefHeight="20.0" prefWidth="50.0" styleClass="path-button" text="Path">
+                  <ToggleButton id="pathToggle" fx:id="toggleButtonPath" minHeight="20.0" minWidth="50.0" mnemonicParsing="false" prefHeight="20.0" prefWidth="50.0" text="Path">
                      <HBox.margin>
-                        <Insets left="1.0" right="1.0" top="4.0" />
+                        <Insets left="1.0" right="3.0" top="4.0" />
                      </HBox.margin>
                   </ToggleButton>
-                  <ToggleButton fx:id="toggleButtonCycle" minHeight="20.0" minWidth="50.0" mnemonicParsing="false" prefHeight="20.0" prefWidth="50.0" styleClass="path-button" text="Cycle">
+                  <ToggleButton id="cycleToggle" fx:id="toggleButtonCycle" minHeight="20.0" minWidth="50.0" mnemonicParsing="false" prefHeight="20.0" prefWidth="50.0" text="Cycle">
                      <HBox.margin>
-                        <Insets right="1.0" top="4.0" />
+                        <Insets right="3.0" top="4.0" />
+                     </HBox.margin>
+                  </ToggleButton>
+                  <ToggleButton id="whatIfToggle" fx:id="toggleButtonWhatIf" minHeight="20.0" minWidth="50.0" mnemonicParsing="false" prefHeight="20.0" prefWidth="50.0" text="What-If">
+                     <HBox.margin>
+                        <Insets right="3.0" top="4.0" />
                      </HBox.margin>
                   </ToggleButton>
                </children>
@@ -173,4 +180,8 @@
          </children>
       </GridPane>
    </bottom>
+   <stylesheets>
+      <URL value="@css/path.css" />
+      <URL value="@../utility/backgroung.css" />
+   </stylesheets>
 </BorderPane>
Index: UI/src/FXML/utility/buttonColor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/utility/buttonColor.java b/UI/src/FXML/utility/buttonColor.java
new file mode 100644
--- /dev/null	(date 1640617936509)
+++ b/UI/src/FXML/utility/buttonColor.java	(date 1640617936509)
@@ -0,0 +1,9 @@
+package FXML.utility;
+
+import javafx.beans.property.SimpleStringProperty;
+import javafx.beans.property.StringProperty;
+
+public class buttonColor {
+    public final String isSelected = "-fx-background-color: linear-gradient(#2A5058, #61a2b1)";
+    public final String notSelected = "-fx-background-color: linear-gradient(#61a2b1, #2A5058)";
+}
\ No newline at end of file
Index: UI/src/FXML/file/file.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import javafx.geometry.Insets?>\n<?import javafx.scene.control.Button?>\n<?import javafx.scene.layout.BorderPane?>\n\n<BorderPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"750.0\" prefWidth=\"1300.0\" styleClass=\"root\" stylesheets=\"@css/file.css\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"FXML.file.fileController\">\n   <bottom>\n      <Button id=\"fileButton\" fx:id=\"loadFileButton\" minWidth=\"119.0\" mnemonicParsing=\"false\" onAction=\"#loadFileButton\" prefHeight=\"126.0\" prefWidth=\"284.0\" styleClass=\"fileButton\" text=\"Load File\" BorderPane.alignment=\"TOP_RIGHT\">\n         <BorderPane.margin>\n            <Insets bottom=\"30.0\" right=\"30.0\" />\n         </BorderPane.margin>\n      </Button>\n   </bottom>\n</BorderPane>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/file/file.fxml b/UI/src/FXML/file/file.fxml
--- a/UI/src/FXML/file/file.fxml	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/file/file.fxml	(date 1640617936502)
@@ -4,7 +4,7 @@
 <?import javafx.scene.control.Button?>
 <?import javafx.scene.layout.BorderPane?>
 
-<BorderPane minHeight="0.0" minWidth="0.0" prefHeight="750.0" prefWidth="1300.0" styleClass="root" stylesheets="@css/file.css" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="FXML.file.fileController">
+<BorderPane fx:id="image" minHeight="0.0" minWidth="0.0" prefHeight="750.0" prefWidth="1300.0" styleClass="root" stylesheets="@css/file.css" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="FXML.file.fileController">
    <bottom>
       <Button id="fileButton" fx:id="loadFileButton" minWidth="119.0" mnemonicParsing="false" onAction="#loadFileButton" prefHeight="126.0" prefWidth="284.0" styleClass="fileButton" text="Load File" BorderPane.alignment="TOP_RIGHT">
          <BorderPane.margin>
Index: UI/src/FXML/main/mainApp.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import javafx.geometry.Insets?>\n<?import javafx.scene.control.ScrollPane?>\n<?import javafx.scene.control.Tab?>\n<?import javafx.scene.control.TabPane?>\n<?import javafx.scene.layout.AnchorPane?>\n<?import javafx.scene.layout.BorderPane?>\n<?import javafx.scene.layout.ColumnConstraints?>\n<?import javafx.scene.layout.GridPane?>\n<?import javafx.scene.layout.RowConstraints?>\n\n<BorderPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"800.0\" prefWidth=\"1300.0\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"FXML.main.mainAppController\">\n   <center>\n      <ScrollPane fitToHeight=\"true\" fitToWidth=\"true\" minHeight=\"0.0\" minWidth=\"0.0\">\n         <content>\n            <GridPane maxHeight=\"1.7976931348623157E308\" maxWidth=\"1.7976931348623157E308\" minHeight=\"790.0\" minWidth=\"1290.0\" prefHeight=\"790.0\" prefWidth=\"1290.0\">\n               <columnConstraints>\n                  <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" />\n               </columnConstraints>\n               <rowConstraints>\n                  <RowConstraints minHeight=\"10.0\" vgrow=\"SOMETIMES\" />\n               </rowConstraints>\n               <children>\n                  <TabPane prefHeight=\"200.0\" prefWidth=\"200.0\" styleClass=\"tap-pane\" stylesheets=\"@css/mainApp.css\" tabClosingPolicy=\"UNAVAILABLE\" GridPane.hgrow=\"ALWAYS\" GridPane.vgrow=\"ALWAYS\">\n                    <tabs>\n                        <Tab styleClass=\"tab-label\" text=\"File\">\n                           <content>\n                              <AnchorPane prefHeight=\"353.0\" prefWidth=\"602.0\">\n                                 <children>\n                                    <fx:include fx:id=\"fileComponent\" source=\"../file/file.fxml\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\" />\n                                 </children>\n                              </AnchorPane>\n                           </content>\n                        </Tab>\n                      <Tab fx:id=\"tableTab\" disable=\"true\" styleClass=\"tab-label\" text=\"Table\">\n                        <content>\n                          <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\">\n                                 <children>\n                                    <fx:include fx:id=\"tableComponent\" source=\"../table/table.fxml\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\" />\n                                 </children>\n                              </AnchorPane>\n                        </content>\n                      </Tab>\n                        <Tab fx:id=\"graphTab\" disable=\"true\" styleClass=\"tab-label\" text=\"Graph\">\n                          <content>\n                            <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\" />\n                          </content>\n                        </Tab>\n                      <Tab fx:id=\"taskTab\" disable=\"true\" styleClass=\"tab-label\" text=\"Task\">\n                        <content>\n                          <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\">\n                                 <children>\n                                    <fx:include source=\"../task/task.fxml\" />\n                                 </children></AnchorPane>\n                        </content>\n                      </Tab>\n                        <Tab fx:id=\"pathTab\" disable=\"true\" styleClass=\"tab-label\" text=\"Path\">\n                           <content>\n                              <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\">\n                                 <children>\n                                    <ScrollPane fitToHeight=\"true\" fitToWidth=\"true\" prefHeight=\"200.0\" prefWidth=\"200.0\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\" />\n                                    <fx:include fx:id=\"pathComponent\" source=\"../path/path.fxml\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\" />\n                                 </children>\n                              </AnchorPane>\n                           </content>\n                        </Tab>\n                        <Tab fx:id=\"whatIfTab\" disable=\"true\" styleClass=\"tab-label\" text=\"WhatIf\">\n                           <content>\n                              <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\">\n                                 <children>\n                                    <ScrollPane fitToHeight=\"true\" fitToWidth=\"true\" prefHeight=\"200.0\" prefWidth=\"200.0\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\" />\n                                    <fx:include fx:id=\"whatIfComponent\" source=\"../whatIf/whatIf.fxml\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\" />\n                                 </children>\n                              </AnchorPane>\n                           </content>\n                        </Tab>\n                        <Tab styleClass=\"tab-label\" text=\"Setting\">\n                          <content>\n                            <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\">\n                                 <children>\n                                    <ScrollPane fitToHeight=\"true\" fitToWidth=\"true\" prefHeight=\"200.0\" prefWidth=\"200.0\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\" />\n                                    <fx:include fx:id=\"settingComponent\" source=\"../setting/setting.fxml\" AnchorPane.bottomAnchor=\"0.0\" AnchorPane.leftAnchor=\"0.0\" AnchorPane.rightAnchor=\"0.0\" AnchorPane.topAnchor=\"0.0\" />\n                                 </children>\n                              </AnchorPane>\n                          </content>\n                        </Tab>\n                    </tabs>\n                     <GridPane.margin>\n                        <Insets />\n                     </GridPane.margin>\n                  </TabPane>\n               </children>\n            </GridPane>\n         </content>\n      </ScrollPane>\n   </center>\n</BorderPane>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/main/mainApp.fxml b/UI/src/FXML/main/mainApp.fxml
--- a/UI/src/FXML/main/mainApp.fxml	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/main/mainApp.fxml	(date 1640617936504)
@@ -10,7 +10,7 @@
 <?import javafx.scene.layout.GridPane?>
 <?import javafx.scene.layout.RowConstraints?>
 
-<BorderPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="0.0" minWidth="0.0" prefHeight="800.0" prefWidth="1300.0" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="FXML.main.mainAppController">
+<BorderPane fx:id="mainBorderPane" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="0.0" minWidth="0.0" prefHeight="800.0" prefWidth="1300.0" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="FXML.main.mainAppController">
    <center>
       <ScrollPane fitToHeight="true" fitToWidth="true" minHeight="0.0" minWidth="0.0">
          <content>
@@ -47,34 +47,23 @@
                             <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0" />
                           </content>
                         </Tab>
-                      <Tab fx:id="taskTab" disable="true" styleClass="tab-label" text="Task">
-                        <content>
-                          <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
-                                 <children>
-                                    <fx:include source="../task/task.fxml" />
-                                 </children></AnchorPane>
-                        </content>
-                      </Tab>
                         <Tab fx:id="pathTab" disable="true" styleClass="tab-label" text="Path">
                            <content>
                               <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                                  <children>
-                                    <ScrollPane fitToHeight="true" fitToWidth="true" prefHeight="200.0" prefWidth="200.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" />
                                     <fx:include fx:id="pathComponent" source="../path/path.fxml" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" />
                                  </children>
                               </AnchorPane>
                            </content>
                         </Tab>
-                        <Tab fx:id="whatIfTab" disable="true" styleClass="tab-label" text="WhatIf">
-                           <content>
-                              <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
+                      <Tab fx:id="taskTab" disable="true" styleClass="tab-label" text="Task">
+                        <content>
+                          <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
                                  <children>
-                                    <ScrollPane fitToHeight="true" fitToWidth="true" prefHeight="200.0" prefWidth="200.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" />
-                                    <fx:include fx:id="whatIfComponent" source="../whatIf/whatIf.fxml" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" />
-                                 </children>
-                              </AnchorPane>
-                           </content>
-                        </Tab>
+                                    <fx:include fx:id="taskComponent" source="../task/task.fxml" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" />
+                                 </children></AnchorPane>
+                        </content>
+                      </Tab>
                         <Tab styleClass="tab-label" text="Setting">
                           <content>
                             <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
Index: UI/src/FXML/file/css/file.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\n.fileButton {\n    -fx-font-family:\"Times New Roman\";\n    -fx-text-fill: black;\n    -fx-font-size: 30px;\n    -fx-font-weight: bold;\n    -fx-effect: dropshadow( three-pass-box , rgba(0,0,0,0.6) , 5, 0.0 , 0 , 1 );\n    -fx-background-color: linear-gradient(#61a2b1, #2A5058);\n}\n\n.button:hover {\n    -fx-background-color: linear-gradient(#2A5058, #61a2b1);\n}\n\n#titleApp {\n    -fx-font-size: 55px;\n    -fx-font-family: \"Arial Black\";\n    -fx-fill: #818181;\n    -fx-effect: innershadow( three-pass-box , rgba(0,0,0,0.7) , 6, 0.0 , 0 , 2 );\n}\n\n.root{\n    -fx-background-image: url(\"programming.jpg\");\n    -fx-background-repeat: stretch;\n    -fx-background-size: 1300 800;\n    -fx-background-position: center center;\n    -fx-effect: dropshadow(three-pass-box, black, 30, 0.5, 0, 0);\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/file/css/file.css b/UI/src/FXML/file/css/file.css
--- a/UI/src/FXML/file/css/file.css	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/file/css/file.css	(date 1640617936502)
@@ -25,4 +25,5 @@
     -fx-background-size: 1300 800;
     -fx-background-position: center center;
     -fx-effect: dropshadow(three-pass-box, black, 30, 0.5, 0, 0);
-}
\ No newline at end of file
+}
+
Index: UI/src/main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javafx.application.Application;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.image.Image;\nimport javafx.stage.Stage;\nimport java.net.URL;\n\npublic class main extends Application {\n    public final static String APP_FXML_INCLUDE_RESOURCE = \"/FXML/main/mainApp.fxml\";\n   /* public static void main(String[]args){\n        UIimpl u = new UIimpl();\n        u.mainMenu();\n    }*/\n\n    public static void main(String[] args) {\n        Thread.currentThread().setName(\"main\");\n        launch(args);\n    }\n    @Override\n    public void start(Stage primaryStage) throws Exception {\n        primaryStage.setTitle(\"G.P.U.P\");\n        FXMLLoader fxmlLoader = new FXMLLoader();\n        URL url = getClass().getResource(APP_FXML_INCLUDE_RESOURCE);\n        fxmlLoader.setLocation(url);\n        Parent root = fxmlLoader.load(url.openStream());\n\n        Scene scene = new Scene(root, 605, 440);\n        primaryStage.setScene(scene);\n        primaryStage.show();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/main.java b/UI/src/main.java
--- a/UI/src/main.java	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/main.java	(date 1640617936509)
@@ -24,8 +24,7 @@
         URL url = getClass().getResource(APP_FXML_INCLUDE_RESOURCE);
         fxmlLoader.setLocation(url);
         Parent root = fxmlLoader.load(url.openStream());
-
-        Scene scene = new Scene(root, 605, 440);
+        Scene scene = new Scene(root, 1300, 800);
         primaryStage.setScene(scene);
         primaryStage.show();
     }
Index: UI/src/FXML/task/taskController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/task/taskController.java b/UI/src/FXML/task/taskController.java
new file mode 100644
--- /dev/null	(date 1640617936508)
+++ b/UI/src/FXML/task/taskController.java	(date 1640617936508)
@@ -0,0 +1,226 @@
+package FXML.task;
+import FXML.error.errorMain;
+import FXML.main.mainAppController;
+import FXML.task.processing.targetInfoMain;
+import engine.engine;
+import javafx.beans.binding.Bindings;
+import javafx.beans.property.BooleanProperty;
+import javafx.beans.property.SimpleBooleanProperty;
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
+import javafx.collections.ObservableSet;
+import javafx.concurrent.Task;
+import javafx.event.ActionEvent;
+import javafx.event.EventHandler;
+import javafx.fxml.FXML;
+import javafx.scene.control.*;
+import javafx.scene.control.cell.PropertyValueFactory;
+import javafx.scene.input.MouseEvent;
+import javafx.scene.layout.HBox;
+import target.Target;
+import target.UniqueTarget;
+import target.targetTable;
+import java.util.ArrayList;
+import java.util.List;
+
+public class taskController {
+
+    private mainAppController mainController;
+    private SimpleBooleanProperty isRunSelected;
+    private SimpleBooleanProperty isPauseSelected;
+    private SimpleBooleanProperty isCompiler;
+    private ObservableSet<CheckBox> selectedCheckBoxes = FXCollections.observableSet();
+
+    public taskController(){
+        isRunSelected = new SimpleBooleanProperty(false);
+        isPauseSelected = new SimpleBooleanProperty(false);
+        isCompiler = new SimpleBooleanProperty(true);
+    }
+    @FXML public void initialize() {
+        //task toggle
+        compilerToggle.setSelected(true);
+        compilerToggle.setStyle("-fx-background-color: linear-gradient(#2A5058, #61a2b1)");
+        simulationToggle.setStyle("-fx-background-color: linear-gradient(#61a2b1, #2A5058)");
+
+
+        ///spinner
+        ProcessingTimeSpinner.setValueFactory(new SpinnerValueFactory.IntegerSpinnerValueFactory(0, 1000, 0));
+        successSpinner.setValueFactory(new SpinnerValueFactory.IntegerSpinnerValueFactory(0, 100, 0));
+        successWithWarningSpinner.setValueFactory(new SpinnerValueFactory.IntegerSpinnerValueFactory(0, 100, 0));
+        numOfTreadsSpinner.setValueFactory(new SpinnerValueFactory.IntegerSpinnerValueFactory(1, 100, 1));
+
+        ///which task
+        simulationBox.disableProperty().bind(isCompiler);
+        isCompiler.addListener((obs, oldSelectedCount, newSelectedCount) -> {
+            if (isCompiler.getValue()) {
+                compilerToggle.setStyle("-fx-background-color: linear-gradient(#2A5058, #61a2b1)");
+                simulationToggle.setStyle("-fx-background-color: linear-gradient(#61a2b1, #2A5058)");
+            }
+            else {
+                simulationToggle.setStyle("-fx-background-color: linear-gradient(#2A5058, #61a2b1)");
+                compilerToggle.setStyle("-fx-background-color: linear-gradient(#61a2b1, #2A5058)");
+            }
+        });
+
+        ///run pause button
+        runButton.setStyle("-fx-background-color: linear-gradient(#2A5058, #61a2b1)");
+        pauseButton.setStyle("-fx-background-color: linear-gradient(#2A5058, #61a2b1)");
+
+        isRunSelected.addListener((obs, oldSelectedCount, newSelectedCount) -> {
+            if (isRunSelected.getValue())
+                runButton.setStyle("-fx-background-color: linear-gradient(#2A5058, #61a2b1)");
+            else
+                runButton.setStyle("-fx-background-color: linear-gradient(#61a2b1, #2A5058)");
+        });
+
+        isPauseSelected.addListener((obs, oldSelectedCount, newSelectedCount) -> {
+            if (isPauseSelected.getValue())
+                pauseButton.setStyle("-fx-background-color: linear-gradient(#2A5058, #61a2b1)");
+            else
+                pauseButton.setStyle("-fx-background-color: linear-gradient(#61a2b1, #2A5058)");
+        });
+
+        ///combo box
+        scratchOrIncremental.getItems().add("Scratch");
+        scratchOrIncremental.getItems().add("Incremental");
+        scratchOrIncremental.setValue("Scratch");
+/*
+        tableView.setOnMouseClicked(new EventHandler<MouseEvent>(){
+            @Override
+            public void handle(MouseEvent event) {
+                new errorMain(new UniqueTarget(tableView.getSelectionModel().getSelectedItem().getName()));
+            }
+        });
+
+ */
+
+
+        tableView.setRowFactory( tv -> {
+            TableRow<targetTable> row = new TableRow<>();
+            row.setOnMouseClicked(event -> {
+                if (event.getClickCount() == 2 && (! row.isEmpty()) ) {
+                    String name = tableView.getSelectionModel().getSelectedItem().getName();
+                    String type = tableView.getSelectionModel().getSelectedItem().getStatus().toString();
+                    String serialSets = "";
+                    String process = "";
+                    new targetInfoMain(name, type, serialSets, process);
+                }
+            });
+            return row ;
+        });
+
+
+
+
+    }
+    private void configureCheckBoxTask(CheckBox checkBox) {
+        if (checkBox.isSelected())
+            selectedCheckBoxes.add(checkBox);
+
+        checkBox.selectedProperty().addListener((obs, wasSelected, isNowSelected) -> {
+            if (isNowSelected) {
+                selectedCheckBoxes.add(checkBox);
+                if (withDepend.isSelected())
+                    getAllTargetWith(engine.Dependence.DEPENDS_ON);
+                if (withRequired.isSelected())
+                    getAllTargetWith(engine.Dependence.REQUIRED_FOR);
+            }
+             else
+                selectedCheckBoxes.remove(checkBox);
+        });
+    }
+    public void setMainController(mainAppController mainController) {
+        this.mainController = mainController;
+        mainController.setGeneralTableCol(nameTableCol, typeTableCol, dataTableCol, serialSetTableCol,
+                directRequiredForTableCol, directDependsOnTableCol,
+                totalRequiredForTableCol, totalDependsOnTableCol);
+        setTableCol();
+    }
+    public void show() {
+        tableView.setItems(mainController.items);
+        for (int i = 0 ; i< mainController.items.size();++i)
+            configureCheckBoxTask(mainController.items.get(i).getCheckBoxTask());
+    }
+    public void getAllTargetWith(engine.Dependence d ){
+        List<String> newList = new ArrayList();
+            try{
+                for (int i = 0 ; i < mainController.items.size();++i) {
+                    if (mainController.items.get(i).getCheckBoxTask().isSelected()) {
+                        mainController.getEngine().whatIf(mainController.items.get(i).getName(), newList, d);
+                        for (int k = 0; k < mainController.items.size(); ++k)
+                            if (newList.contains(mainController.items.get(k).getName())) {
+                                mainController.items.get(k).getCheckBoxTask().setSelected(true);
+                            }
+                    }
+                }
+            }
+
+            catch (Exception e){}
+    }
+    public void setTableCol(){
+        statusTableCol.setCellValueFactory(new PropertyValueFactory<>("status"));
+        remarkTableCol.setCellValueFactory(new PropertyValueFactory<>("checkBoxTask"));
+    }
+
+    ///
+    @FXML void clearAction(ActionEvent event) {
+        ObservableList<targetTable> data = tableView.getItems();
+        for (targetTable p : data)
+        {
+            if(p.getCheckBoxTask().isSelected())
+                p.getCheckBoxTask().setSelected(false);
+        }
+    }
+    @FXML void pauseTask(ActionEvent event) {
+        isPauseSelected.setValue(true);
+        isRunSelected.setValue(false);
+    }
+    @FXML void runTask(ActionEvent event) {
+        try{
+            boolean fromScratch;
+            isRunSelected.setValue(true);
+            isPauseSelected.setValue(false);
+            if (scratchOrIncremental.getValue().equals("scratch"))
+                fromScratch = true;
+            else
+                fromScratch = false;
+            mainController.getEngine().runTask(ProcessingTimeSpinner.getValue(),true,successSpinner.getValue(),successWithWarningSpinner.getValue(),fromScratch);
+            // uiAdapter, () -> toggleTaskButtons(false));
+        }
+        catch (Exception e){new errorMain(e);}
+
+
+    }
+    @FXML void compilerToggleSelected(ActionEvent event) {
+        isCompiler.set(true);
+    }
+    @FXML void simulationToggleSelected(ActionEvent event) {
+        isCompiler.set(false);
+    }
+    ///fxml member
+    @FXML private TableView<targetTable> tableView;
+    @FXML private TableColumn<targetTable,Boolean> remarkTableCol;
+    @FXML private TableColumn<targetTable, String> nameTableCol;
+    @FXML private TableColumn<targetTable, Target.Type> typeTableCol;
+    @FXML private TableColumn<targetTable, Integer> directRequiredForTableCol;
+    @FXML private TableColumn<targetTable, Integer> totalRequiredForTableCol;
+    @FXML private TableColumn<targetTable, Integer> directDependsOnTableCol;
+    @FXML private TableColumn<targetTable, Integer> totalDependsOnTableCol;
+    @FXML private TableColumn<targetTable, String> dataTableCol;
+    @FXML private TableColumn<targetTable, String> statusTableCol;
+    @FXML private TableColumn<targetTable, Integer> serialSetTableCol;
+    @FXML private Button clearButton;
+    @FXML private ComboBox<String> scratchOrIncremental;
+    @FXML private ToggleButton compilerToggle;
+    @FXML private ToggleButton simulationToggle;
+    @FXML private ProgressBar progressBarTask;
+    @FXML private Button pauseButton;
+    @FXML private Button runButton;
+    @FXML private HBox simulationBox;
+    @FXML private Spinner<Integer> ProcessingTimeSpinner;
+    @FXML private Spinner<Integer> successSpinner;
+    @FXML private Spinner<Integer> successWithWarningSpinner;
+    @FXML private Spinner<Integer> numOfTreadsSpinner;
+    @FXML private CheckBox withRequired;
+    @FXML private CheckBox withDepend;
+}
Index: UI/src/FXML/task/processing/targetInfoMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/task/processing/targetInfoMain.java b/UI/src/FXML/task/processing/targetInfoMain.java
new file mode 100644
--- /dev/null	(date 1640617936507)
+++ b/UI/src/FXML/task/processing/targetInfoMain.java	(date 1640617936507)
@@ -0,0 +1,31 @@
+package FXML.task.processing;
+
+import FXML.error.errorController;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.text.Text;
+import javafx.stage.Stage;
+
+import java.net.URL;
+
+public class targetInfoMain {
+    public final static String TARGETINFO_FXML = "/FXML/task/processing/targetInformationTask.fxml";
+    public targetInfoMain(String name , String type , String serialSets ,  String process) {
+        try {
+            Stage primaryStage = new Stage();
+            primaryStage.setTitle("Target Information - Task");
+            FXMLLoader fxmlLoader = new FXMLLoader();
+            URL url = getClass().getResource(TARGETINFO_FXML);
+            fxmlLoader.setLocation(url);
+            Parent root = fxmlLoader.load(url.openStream());
+            Scene scene = new Scene(root, 400, 200);
+            primaryStage.setScene(scene);
+            primaryStage.show();
+            targetInfoTaskController controller = fxmlLoader.getController();
+            controller.setInfo(name,type,serialSets,process);
+        }
+        catch (Exception ex){}
+    }
+}
Index: UI/src/FXML/table/tableController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package FXML.table;\n\nimport FXML.main.mainAppController;\nimport engine.engine;\nimport javafx.fxml.FXML;\nimport javafx.scene.control.TableColumn;\nimport javafx.scene.control.TableView;\nimport javafx.scene.control.cell.PropertyValueFactory;\nimport javafx.scene.text.Text;\nimport target.Target;\nimport target.targetTable;\n\npublic class tableController {\n    private mainAppController mainController;\n\n    public tableController(){\n        ///\n    }\n\n    @FXML\n    public void initialize() {\n\n        nameTableCol.setCellValueFactory(new PropertyValueFactory<>(\"name\"));\n        typeTableCol.setCellValueFactory(new PropertyValueFactory<>(\"type\"));\n\n        directRequiredForTableCol.setCellValueFactory(new PropertyValueFactory<>(\"directRequiredForTableCol\"));\n        directDepemdsOnTableCol.setCellValueFactory(new PropertyValueFactory<>(\"directDepemdsOnTableCol\"));\n        totalRequiredForTableCol.setCellValueFactory(new PropertyValueFactory<>(\"totalRequiredForTableCol\"));\n       // TotalDepemdsOnTableCol.setCellValueFactory(new PropertyValueFactory<>(\"TotalDepemdsOnTableCol\"));\n        dataTableCol.setCellValueFactory(new PropertyValueFactory<>(\"userData\"));\n//        tableView.setItems(mainController.observableList());\n    }\n\n    @FXML\n    private TableView<targetTable> tableView;\n    @FXML\n    private TableColumn<targetTable, String> nameTableCol;\n\n    @FXML\n    private TableColumn<targetTable, Target.Type> typeTableCol;\n\n    @FXML\n    private TableColumn<targetTable, Integer> directRequiredForTableCol;\n\n    @FXML\n    private TableColumn<targetTable, Integer> totalRequiredForTableCol;\n\n    @FXML\n    private TableColumn<targetTable, Integer> directDepemdsOnTableCol;\n\n    @FXML\n    private TableColumn<targetTable, Integer> TotalDepemdsOnTableCol;\n\n    @FXML\n    private TableColumn<targetTable, String> dataTableCol;\n\n    @FXML\n    private Text targetNumberText;\n\n    @FXML\n    private Text leavesNumberText;\n\n    @FXML\n    private Text middleNumberText;\n\n    @FXML\n    private Text rootsNumberText;\n\n    @FXML\n    private Text indepNumberText;\n\n    public void setMainController(mainAppController mainController) {\n        this.mainController = mainController;\n    }\n    public void show() {\n        tableView.setItems(mainController.items);\n        for(int i =0 ; i < mainController.items.size() ; i++)\n            mainController.items.get(i).getRemark();\n\n\n\n\n\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/table/tableController.java b/UI/src/FXML/table/tableController.java
--- a/UI/src/FXML/table/tableController.java	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/table/tableController.java	(date 1640617936506)
@@ -1,7 +1,10 @@
 package FXML.table;
 
+import FXML.error.errorMain;
 import FXML.main.mainAppController;
 import engine.engine;
+import information.GraphInformation;
+import information.Information;
 import javafx.fxml.FXML;
 import javafx.scene.control.TableColumn;
 import javafx.scene.control.TableView;
@@ -13,74 +16,44 @@
 public class tableController {
     private mainAppController mainController;
 
-    public tableController(){
-        ///
+    @FXML public void initialize() {
     }
-
-    @FXML
-    public void initialize() {
-
-        nameTableCol.setCellValueFactory(new PropertyValueFactory<>("name"));
-        typeTableCol.setCellValueFactory(new PropertyValueFactory<>("type"));
-
-        directRequiredForTableCol.setCellValueFactory(new PropertyValueFactory<>("directRequiredForTableCol"));
-        directDepemdsOnTableCol.setCellValueFactory(new PropertyValueFactory<>("directDepemdsOnTableCol"));
-        totalRequiredForTableCol.setCellValueFactory(new PropertyValueFactory<>("totalRequiredForTableCol"));
-       // TotalDepemdsOnTableCol.setCellValueFactory(new PropertyValueFactory<>("TotalDepemdsOnTableCol"));
-        dataTableCol.setCellValueFactory(new PropertyValueFactory<>("userData"));
-//        tableView.setItems(mainController.observableList());
-    }
-
-    @FXML
-    private TableView<targetTable> tableView;
-    @FXML
-    private TableColumn<targetTable, String> nameTableCol;
-
-    @FXML
-    private TableColumn<targetTable, Target.Type> typeTableCol;
-
-    @FXML
-    private TableColumn<targetTable, Integer> directRequiredForTableCol;
-
-    @FXML
-    private TableColumn<targetTable, Integer> totalRequiredForTableCol;
-
-    @FXML
-    private TableColumn<targetTable, Integer> directDepemdsOnTableCol;
-
-    @FXML
-    private TableColumn<targetTable, Integer> TotalDepemdsOnTableCol;
-
-    @FXML
-    private TableColumn<targetTable, String> dataTableCol;
-
-    @FXML
-    private Text targetNumberText;
-
-    @FXML
-    private Text leavesNumberText;
-
-    @FXML
-    private Text middleNumberText;
-
-    @FXML
-    private Text rootsNumberText;
-
-    @FXML
-    private Text indepNumberText;
 
     public void setMainController(mainAppController mainController) {
         this.mainController = mainController;
+        mainController.setGeneralTableCol(nameTableCol, typeTableCol, dataTableCol, serialSetTableCol,
+                                            directRequiredForTableCol, directDependsOnTableCol,
+                                            totalRequiredForTableCol, totalDependsOnTableCol);
     }
     public void show() {
-        tableView.setItems(mainController.items);
-        for(int i =0 ; i < mainController.items.size() ; i++)
-            mainController.items.get(i).getRemark();
-
+        try {
+            tableView.setItems(mainController.items);
+            GraphInformation info =  mainController.getEngine().targetsInFormation();
+            targetNumberText.setText(info.getAmountOfTargets());
+            middleNumberText.setText(info.getMiddle());
+            rootsNumberText.setText(info.getRoot());
+            indepNumberText.setText(info.getIndependents());
+            leavesNumberText.setText(info.getLevies());
 
+        }
+        catch (Exception e){new errorMain(e);}
+    }
 
+    ////// fxml member
+    @FXML private TableView<targetTable> tableView;
+    @FXML private TableColumn<targetTable, String> nameTableCol;
+    @FXML private TableColumn<targetTable, Target.Type> typeTableCol;
+    @FXML private TableColumn<targetTable, Integer> directRequiredForTableCol;
+    @FXML private TableColumn<targetTable, Integer> totalRequiredForTableCol;
+    @FXML private TableColumn<targetTable, Integer> directDependsOnTableCol;
+    @FXML private TableColumn<targetTable, Integer> totalDependsOnTableCol;
+    @FXML private TableColumn<targetTable, Integer> serialSetTableCol;
+    @FXML private TableColumn<targetTable, String> dataTableCol;
+    @FXML private Text targetNumberText;
+    @FXML private Text leavesNumberText;
+    @FXML private Text middleNumberText;
+    @FXML private Text rootsNumberText;
+    @FXML private Text indepNumberText;
+}
 
 
-
-    }
-}
Index: UI/src/FXML/path/pathController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package FXML.path;\n\nimport FXML.main.mainAppController;\nimport engine.*;\nimport javafx.beans.binding.Bindings;\nimport javafx.beans.binding.IntegerBinding;\nimport javafx.beans.property.SimpleBooleanProperty;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.collections.ObservableSet;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.scene.control.*;\nimport javafx.scene.control.cell.PropertyValueFactory;\nimport javafx.scene.text.Text;\n\nimport target.targetTable;\n\n\npublic class pathController {\n    private mainAppController mainController;\n    private SimpleBooleanProperty isSourceSelected;\n    private SimpleBooleanProperty isDestinationSelected;\n\n    private ObservableSet<CheckBox> selectedCheckBoxes = FXCollections.observableSet();\n    private ObservableSet<CheckBox> unselectedCheckBoxes = FXCollections.observableSet();\n\n    private IntegerBinding numCheckBoxesSelected = Bindings.size(selectedCheckBoxes);\n\n    private final int maxNumSelected =  2;\n\n    public pathController(){\n        isSourceSelected = new SimpleBooleanProperty(false);\n        isDestinationSelected = new SimpleBooleanProperty(false);\n    }\n\n    @FXML\n    private TableView<targetTable> tableView;\n    @FXML\n    private TableColumn<targetTable,Boolean> remarkTableCol;\n    @FXML\n    private TableColumn<targetTable, String> nameTableCol;\n    @FXML\n    private TableColumn<targetTable, String> typeTableCol;\n    @FXML\n    private TableColumn<targetTable, Integer> directRequiredForTableCol;\n    @FXML\n    private TableColumn<targetTable, Integer> totalRequiredForTableCol;\n    @FXML\n    private TableColumn<targetTable, Integer> directDepemdsOnTableCol;\n    @FXML\n    private TableColumn<targetTable, Integer> TotalDepemdsOnTableCol;\n    @FXML\n    private TableColumn<targetTable, String> dataTableCol;\n\n    @FXML\n    private ListView<?> pathListView;\n\n    @FXML\n    private ComboBox<String> depenceComboBox;\n    @FXML\n    private Text sourceText;\n\n    @FXML\n    private Text destinationText;\n\n    @FXML\n    private Button switchButton;\n\n    @FXML\n    private Button clearButton;\n\n    @FXML\n    private ToggleButton toggleButtonPath;\n\n    @FXML\n    private ToggleButton toggleButtonCycle;\n\n    @FXML\n    private Button runButton;\n\n    @FXML\n    private Button setButton;\n\n\n    @FXML\n    public void initialize() {\n        /*\n        runButton.disableProperty().bind(\n                Bindings.and(\n                        isDestinationSelected,isSourceSelected));\n        depenceComboBox.getItems().add(engine.Dependence.REQUIRED_FOR.toString());\n        depenceComboBox.getItems().add(engine.Dependence.DEPENDS_ON.toString());\n\n         */\n        numCheckBoxesSelected.addListener((obs, oldSelectedCount, newSelectedCount) -> {\n            if (newSelectedCount.intValue() >= maxNumSelected) {\n                unselectedCheckBoxes.forEach(cb -> cb.setDisable(true));\n                clearButton.setDisable(false);\n            } else {\n                unselectedCheckBoxes.forEach(cb -> cb.setDisable(false));\n                clearButton.setDisable(true);\n            }\n        });\n\n        nameTableCol.setCellValueFactory(new PropertyValueFactory<>(\"name\"));\n        typeTableCol.setCellValueFactory(new PropertyValueFactory<>(\"type\"));\n\n        directRequiredForTableCol.setCellValueFactory(new PropertyValueFactory<>(\"directRequiredForTableCol\"));\n        directDepemdsOnTableCol.setCellValueFactory(new PropertyValueFactory<>(\"directDepemdsOnTableCol\"));\n        totalRequiredForTableCol.setCellValueFactory(new PropertyValueFactory<>(\"totalRequiredForTableCol\"));\n        TotalDepemdsOnTableCol.setCellValueFactory(new PropertyValueFactory<>(\"TotalDepemdsOnTableCol\"));\n\n        dataTableCol.setCellValueFactory(new PropertyValueFactory<>(\"userData\"));\n        remarkTableCol.setCellValueFactory(new PropertyValueFactory<>(\"remark\"));\n        tableView.getColumns().addAll(nameTableCol, typeTableCol, directRequiredForTableCol, directDepemdsOnTableCol,\n                totalRequiredForTableCol,dataTableCol,remarkTableCol);\n       // tableView.itemsProperty().bind(mainController.isFileSelected());\n\n    }\n\n\n    @FXML\n    void setForRun(ActionEvent event) {\n        int x = 0;\n        ObservableList<targetTable> data = tableView.getItems();\n        for (targetTable p : data)\n        {\n            if(p.getRemark().isSelected()) {\n                if (x == 0) {\n                    sourceText.setText(p.getName());\n                    isSourceSelected.set(true);\n                    x++;\n                }\n                if (x==1) {\n                    destinationText.setText(p.getName());\n                    isDestinationSelected.set(true);\n                }\n            }\n\n        }\n            Text temp = sourceText;\n            sourceText = destinationText;\n            destinationText = temp;\n    }\n\n    @FXML\n    void clearAction(ActionEvent event) {\n        ObservableList<targetTable> data = tableView.getItems();\n        for (targetTable p : data)\n        {\n            if(p.getRemark().isSelected())\n                p.getRemark().setSelected(false);\n        }\n    }\n\n    @FXML\n    void switchAction(ActionEvent event) {\n        if (isDestinationSelected.get() && isSourceSelected.get()) {\n            Text temp = sourceText;\n            sourceText = destinationText;\n            destinationText = temp;\n        }\n    }\n\n    @FXML\n    void runButtonAction(ActionEvent event) {\n        if (isDestinationSelected.get() && isSourceSelected.get()) {\n            if (toggleButtonCycle.isSelected())\n                sourceText.setText(\"barrrr\");\n            if (toggleButtonPath.isSelected())\n                sourceText.setText(\"dannnnn\");\n        }\n    }\n\n    public void setMainController(mainAppController mainController) {\n        this.mainController = mainController;\n    }\n\n    public void show() {\n        tableView.setItems(mainController.items);\n        for (int i = 0 ; i< mainController.items.size();++i)\n            configureCheckBox(mainController.items.get(i).getRemark());\n    }\n\n    private void configureCheckBox(CheckBox checkBox) {\n\n        if (checkBox.isSelected()) {\n            selectedCheckBoxes.add(checkBox);\n        } else {\n            unselectedCheckBoxes.add(checkBox);\n        }\n\n        checkBox.selectedProperty().addListener((obs, wasSelected, isNowSelected) -> {\n            if (isNowSelected) {\n                unselectedCheckBoxes.remove(checkBox);\n                selectedCheckBoxes.add(checkBox);\n            } else {\n                selectedCheckBoxes.remove(checkBox);\n                unselectedCheckBoxes.add(checkBox);\n            }\n\n        });\n\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI/src/FXML/path/pathController.java b/UI/src/FXML/path/pathController.java
--- a/UI/src/FXML/path/pathController.java	(revision 429f88437d357d63400fd4eb5e22e8369b4b246f)
+++ b/UI/src/FXML/path/pathController.java	(date 1640617936506)
@@ -1,7 +1,10 @@
 package FXML.path;
-
+import FXML.error.errorMain;
 import FXML.main.mainAppController;
+import FXML.task.taskController;
+import FXML.utility.buttonColor;
 import engine.*;
+import information.Information;
 import javafx.beans.binding.Bindings;
 import javafx.beans.binding.IntegerBinding;
 import javafx.beans.property.SimpleBooleanProperty;
@@ -12,177 +15,119 @@
 import javafx.fxml.FXML;
 import javafx.scene.control.*;
 import javafx.scene.control.cell.PropertyValueFactory;
+import javafx.scene.layout.Background;
+import javafx.scene.layout.BackgroundFill;
+import javafx.scene.paint.Color;
 import javafx.scene.text.Text;
 
+import target.Target;
 import target.targetTable;
 
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
 
 public class pathController {
     private mainAppController mainController;
     private SimpleBooleanProperty isSourceSelected;
     private SimpleBooleanProperty isDestinationSelected;
-
     private ObservableSet<CheckBox> selectedCheckBoxes = FXCollections.observableSet();
     private ObservableSet<CheckBox> unselectedCheckBoxes = FXCollections.observableSet();
-
     private IntegerBinding numCheckBoxesSelected = Bindings.size(selectedCheckBoxes);
-
     private final int maxNumSelected =  2;
-
+    private buttonColor color;
     public pathController(){
         isSourceSelected = new SimpleBooleanProperty(false);
         isDestinationSelected = new SimpleBooleanProperty(false);
-    }
+        color = new buttonColor();
 
-    @FXML
-    private TableView<targetTable> tableView;
-    @FXML
-    private TableColumn<targetTable,Boolean> remarkTableCol;
-    @FXML
-    private TableColumn<targetTable, String> nameTableCol;
-    @FXML
-    private TableColumn<targetTable, String> typeTableCol;
-    @FXML
-    private TableColumn<targetTable, Integer> directRequiredForTableCol;
-    @FXML
-    private TableColumn<targetTable, Integer> totalRequiredForTableCol;
-    @FXML
-    private TableColumn<targetTable, Integer> directDepemdsOnTableCol;
-    @FXML
-    private TableColumn<targetTable, Integer> TotalDepemdsOnTableCol;
-    @FXML
-    private TableColumn<targetTable, String> dataTableCol;
-
-    @FXML
-    private ListView<?> pathListView;
-
-    @FXML
-    private ComboBox<String> depenceComboBox;
-    @FXML
-    private Text sourceText;
-
-    @FXML
-    private Text destinationText;
-
-    @FXML
-    private Button switchButton;
-
-    @FXML
-    private Button clearButton;
-
-    @FXML
-    private ToggleButton toggleButtonPath;
-
-    @FXML
-    private ToggleButton toggleButtonCycle;
-
-    @FXML
-    private Button runButton;
-
-    @FXML
-    private Button setButton;
-
+    }
 
     @FXML
     public void initialize() {
-        /*
-        runButton.disableProperty().bind(
-                Bindings.and(
-                        isDestinationSelected,isSourceSelected));
-        depenceComboBox.getItems().add(engine.Dependence.REQUIRED_FOR.toString());
-        depenceComboBox.getItems().add(engine.Dependence.DEPENDS_ON.toString());
+        setDefault();
+        groupToggle();
+        setBinding();
+    }
+    public void groupToggle(){
+        toggleButtonWhatIf.selectedProperty().addListener( (observable, oldValue, newValue) -> {
+            if (newValue == true) {
+                toggleButtonWhatIf.setStyle(color.isSelected);
+                toggleButtonPath.setSelected(false);
+                toggleButtonCycle.setSelected(false);
+            }
+            else {
+                toggleButtonWhatIf.setStyle(color.notSelected);
+            }
+        }) ;
+
+
+        toggleButtonCycle.selectedProperty().addListener( (observable, oldValue, newValue) -> {
+            if (newValue == true) {
+                toggleButtonCycle.setStyle(color.isSelected);
+                toggleButtonPath.setSelected(false);
+                toggleButtonWhatIf.setSelected(false);
+            }
+            else {
+                toggleButtonCycle.setStyle(color.notSelected);
+            }
+        }) ;
+
 
-         */
+        toggleButtonPath.selectedProperty().addListener( (observable, oldValue, newValue) -> {
+            if (newValue == true) {
+                toggleButtonPath.setStyle(color.isSelected);
+                toggleButtonWhatIf.setSelected(false);
+                toggleButtonCycle.setSelected(false);
+            }
+            else {
+                toggleButtonPath.setStyle(color.notSelected);
+            }
+        }) ;
+    }
+    public void setTableCol(){
+        mainController.setGeneralTableCol(nameTableCol, typeTableCol, dataTableCol, serialSetTableCol,
+                directRequiredForTableCol, directDependsOnTableCol,
+                totalRequiredForTableCol, totalDependsOnTableCol);
+        remarkTableCol.setCellValueFactory(new PropertyValueFactory<>("checkBoxPath"));
+    }
+    public void setDefault(){
+        toggleButtonPath.setSelected(true);
+        toggleButtonWhatIf.setSelected(false);
+        toggleButtonCycle.setSelected(false);
+        depenceComboBox.getItems().add(engine.Dependence.REQUIRED_FOR);
+        depenceComboBox.getItems().add(engine.Dependence.DEPENDS_ON);
+        depenceComboBox.setValue(engine.Dependence.DEPENDS_ON);
+    }
+    public void setBinding(){
+        ////// show destinationText only if toggleButtonPath is selected
+        destinationText.opacityProperty().bind(
+                Bindings.when(
+                                toggleButtonPath.selectedProperty())
+                        .then(1)
+                        .otherwise(0.1)
+        );
+        ////// enable run button only if the source selected
+        runButton.disableProperty().bind(isSourceSelected.not());
+
+        ///// select only 2 checkBox from the table
         numCheckBoxesSelected.addListener((obs, oldSelectedCount, newSelectedCount) -> {
-            if (newSelectedCount.intValue() >= maxNumSelected) {
+            if (newSelectedCount.intValue() >= maxNumSelected)
                 unselectedCheckBoxes.forEach(cb -> cb.setDisable(true));
-                clearButton.setDisable(false);
-            } else {
+            else
                 unselectedCheckBoxes.forEach(cb -> cb.setDisable(false));
-                clearButton.setDisable(true);
-            }
         });
-
-        nameTableCol.setCellValueFactory(new PropertyValueFactory<>("name"));
-        typeTableCol.setCellValueFactory(new PropertyValueFactory<>("type"));
-
-        directRequiredForTableCol.setCellValueFactory(new PropertyValueFactory<>("directRequiredForTableCol"));
-        directDepemdsOnTableCol.setCellValueFactory(new PropertyValueFactory<>("directDepemdsOnTableCol"));
-        totalRequiredForTableCol.setCellValueFactory(new PropertyValueFactory<>("totalRequiredForTableCol"));
-        TotalDepemdsOnTableCol.setCellValueFactory(new PropertyValueFactory<>("TotalDepemdsOnTableCol"));
-
-        dataTableCol.setCellValueFactory(new PropertyValueFactory<>("userData"));
-        remarkTableCol.setCellValueFactory(new PropertyValueFactory<>("remark"));
-        tableView.getColumns().addAll(nameTableCol, typeTableCol, directRequiredForTableCol, directDepemdsOnTableCol,
-                totalRequiredForTableCol,dataTableCol,remarkTableCol);
-       // tableView.itemsProperty().bind(mainController.isFileSelected());
-
-    }
-
-
-    @FXML
-    void setForRun(ActionEvent event) {
-        int x = 0;
-        ObservableList<targetTable> data = tableView.getItems();
-        for (targetTable p : data)
-        {
-            if(p.getRemark().isSelected()) {
-                if (x == 0) {
-                    sourceText.setText(p.getName());
-                    isSourceSelected.set(true);
-                    x++;
-                }
-                if (x==1) {
-                    destinationText.setText(p.getName());
-                    isDestinationSelected.set(true);
-                }
-            }
-
-        }
-            Text temp = sourceText;
-            sourceText = destinationText;
-            destinationText = temp;
-    }
-
-    @FXML
-    void clearAction(ActionEvent event) {
-        ObservableList<targetTable> data = tableView.getItems();
-        for (targetTable p : data)
-        {
-            if(p.getRemark().isSelected())
-                p.getRemark().setSelected(false);
-        }
-    }
-
-    @FXML
-    void switchAction(ActionEvent event) {
-        if (isDestinationSelected.get() && isSourceSelected.get()) {
-            Text temp = sourceText;
-            sourceText = destinationText;
-            destinationText = temp;
-        }
     }
-
-    @FXML
-    void runButtonAction(ActionEvent event) {
-        if (isDestinationSelected.get() && isSourceSelected.get()) {
-            if (toggleButtonCycle.isSelected())
-                sourceText.setText("barrrr");
-            if (toggleButtonPath.isSelected())
-                sourceText.setText("dannnnn");
-        }
-    }
-
     public void setMainController(mainAppController mainController) {
         this.mainController = mainController;
+        setTableCol();
     }
-
     public void show() {
         tableView.setItems(mainController.items);
         for (int i = 0 ; i< mainController.items.size();++i)
-            configureCheckBox(mainController.items.get(i).getRemark());
+            configureCheckBox(mainController.items.get(i).getCheckBoxPath());
     }
-
     private void configureCheckBox(CheckBox checkBox) {
 
         if (checkBox.isSelected()) {
@@ -201,7 +146,102 @@
             }
 
         });
+    }
+
+////// set on action button
+    @FXML void setForRun(ActionEvent event) {
+        int x = 0;
+        ObservableList<targetTable> data = tableView.getItems();
+        for (targetTable p : data)
+        {
+            if(p.getCheckBoxPath().isSelected()) {
+                if (x == 0) {
+                    sourceText.setText(p.getName());
+                    isSourceSelected.set(true);
+                    x++;
+                }
+                else if (x==1) {
+                    destinationText.setText(p.getName());
+                    isDestinationSelected.set(true);
+                    x++;
+                }
+            }
+        }
+
+        if (x==1) {
+            destinationText.setText(sourceText.getText());
+            isDestinationSelected.set(true);
+        }
+
 
     }
+    @FXML void clearAction(ActionEvent event) {
+        ObservableList<targetTable> data = tableView.getItems();
+        for (targetTable p : data)
+        {
+            if(p.getCheckBoxPath().isSelected())
+                p.getCheckBoxPath().setSelected(false);
+        }
+    }
+    @FXML void switchAction(ActionEvent event) {
+        if (isDestinationSelected.get() && isSourceSelected.get()) {
+            String temp = (sourceText.getText());
+            sourceText.setText(destinationText.getText());
+            destinationText.setText(temp);
+        }
+    }
+    @FXML void runButtonAction(ActionEvent event) {
+        Information info = null;
+        try {
+
+            if (isDestinationSelected.get() && isSourceSelected.get() && toggleButtonPath.isSelected())
+                info = mainController.getEngine().findAPathBetweenTwoTargets(sourceText.getText(), destinationText.getText(), depenceComboBox.getValue());
+
+            else if (isSourceSelected.get()){
+
+                if (toggleButtonCycle.isSelected())
+                    info = mainController.getEngine().circuitDetection(sourceText.getText());
+
+                if (toggleButtonWhatIf.isSelected()){
+                    List<String> whatIfList = new ArrayList<>();
+                    mainController.getEngine().whatIf(sourceText.getText(),whatIfList , depenceComboBox.getValue());
+                    pathListView.getItems().clear();
+                    pathListView.getItems().add(whatIfList.toString());
+                }
+
+            }
+            if (info != null) {
+                pathListView.getItems().clear();
+                pathListView.getItems().add(info.toString());
+            }
+
+        }
+        catch (Exception e){new errorMain(e);}
+    }
+
+////// fxml member
+
+    @FXML private TableView<targetTable> tableView;
+    @FXML private TableColumn<targetTable,Boolean> remarkTableCol;
+    @FXML private TableColumn<targetTable, String> nameTableCol;
+    @FXML private TableColumn<targetTable, Target.Type> typeTableCol;
+    @FXML private TableColumn<targetTable, Integer> directRequiredForTableCol;
+    @FXML private TableColumn<targetTable, Integer> totalRequiredForTableCol;
+    @FXML private TableColumn<targetTable, Integer> directDependsOnTableCol;
+    @FXML private TableColumn<targetTable, Integer> totalDependsOnTableCol;
+    @FXML private TableColumn<targetTable, String> dataTableCol;
+    @FXML private TableColumn<targetTable, Integer> serialSetTableCol;
+    @FXML private ListView<String> pathListView;
+    @FXML private ComboBox<engine.Dependence> depenceComboBox;
+    @FXML private Text sourceText;
+    @FXML private Text destinationText;
+    @FXML private Button switchButton;
+    @FXML private Button clearButton;
+    @FXML private ToggleButton toggleButtonPath;
+    @FXML private ToggleButton toggleButtonCycle;
+    @FXML private ToggleButton toggleButtonWhatIf;
+    @FXML private Button runButton;
+    @FXML private Button setButton;
+
 }
 
