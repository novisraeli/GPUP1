Index: Engine/src/target/Target.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package target;\n\nimport information.Information;\nimport information.SumUpTarget;\n\nimport java.text.DateFormat;\nimport java.text.SimpleDateFormat;\nimport java.util.*;\n\npublic class Target\n{\n    public enum Type {INDEPENDENTS, LEAF, MIDDLE, ROOT}\n    public enum Status {Waiting,Success,Warning ,Skipped ,Failure}\n    private String userData;\n    private String name;\n    private Type type;\n    private Status status=Status.Waiting;\n    private Set setDependsOn;\n    private Set setRequiredFor;\n\n    // Ctor\n    public  Target(String name , String userData , Set setDependsOn , Set setRequiredFor) {\n        this.name = name;\n        this.userData = userData;\n        this.setDependsOn = setDependsOn;\n        this.setRequiredFor = setRequiredFor;\n    }\n    // Get function\n    public String getName() {\n        return name;\n    }\n    public String getUserData() {\n            return userData;\n        }\n    public Set<String> getSetDependsOn() {\n        return setDependsOn;\n    }\n    public Set<String> getSetRequiredFor() {\n        return setRequiredFor;\n    }\n    public Type getType() {\n        return type;\n    }\n    public Status getStatus() {\n        return status;\n    }\n    // Add to set functio\n    public void addToSetDependsOn(String st) {setDependsOn.add(st);}\n    public void addToSetRequiredFor(String st) {setRequiredFor.add(st);}\n    // Set function\n    public void SetType(Type t) {\n        this.type = t;\n    }\n    public void SetStatus(Status s) {\n        this.status = s;\n    }\n    public void run(int time, boolean random, float success, float warning, List<Information>res) throws Exception {\n        Random r=new Random();\n        float successRand;\n        float warningRand;\n\n        if(!this.status.equals(Status.Waiting)){\n            return;\n        }\n        for(Target t:(Set<Target>)setDependsOn){\n            if(t.getStatus().equals(Status.Failure)||t.getStatus().equals(Status.Skipped)){\n                t.SetStatus(Status.Skipped);\n                //need to create file in this condition too\n                res.add(new SumUpTarget(this.name,this.status.name(),\"00:00:00:00\"));\n                return;\n            }\n            else if(t.getStatus().equals(Status.Waiting)){\n                return;\n            }\n        }\n        //here we sim the task\n        if(random){//set random time\n            time=r.nextInt(time)+1;\n        }\n        long startTime = System.currentTimeMillis();//sim target and keep time of sim\n        Thread.sleep((long)time);\n        long simTime=System.currentTimeMillis()-startTime;\n        //turn simTime to string\n        long millis = simTime % 1000;\n        long second = (simTime / 1000) % 60;\n        long minute = (simTime / (1000 * 60)) % 60;\n        long hour = (simTime / (1000 * 60 * 60)) % 24;\n        String simTimeString = String.format(\"%02d:%02d:%02d.%d\", hour, minute, second, millis);\n        //\n        successRand=r.nextFloat();\n        warningRand=r.nextFloat();\n        if(success>=successRand){\n            if(warning>=warningRand){\n              this.status=Status.Warning;\n            }\n            else{\n                this.status=Status.Success;\n            }\n        }\n        else{\n            this.status=Status.Failure;\n        }\n        res.add(new SumUpTarget(this.name,this.status.name(),simTimeString));\n        //wright to file as well\n\n    }\n\n    @Override\n    public String toString() {\n        return \"Target: \"+ name + \"\\n\\r\"\n                + \"Target DependsOn:\" + setDependsOn + \"\\n\\r\"\n                + \"Target RequiredFor:\" + setRequiredFor + \"\\n\\r\"\n                + \"Target type:\" + type + \"\\n\\r\"\n                + \"Target Data: \"+ userData + \"\\n\\r\" ;\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/target/Target.java b/Engine/src/target/Target.java
--- a/Engine/src/target/Target.java	(revision b0e49c9bec48d49ada078e84282cbea3f67c8e1e)
+++ b/Engine/src/target/Target.java	(date 1637150293803)
@@ -62,7 +62,7 @@
         if(!this.status.equals(Status.Waiting)){
             return;
         }
-        for(Target t:(Set<Target>)setDependsOn){
+        for(Target t:   (Set<Target>)setDependsOn){
             if(t.getStatus().equals(Status.Failure)||t.getStatus().equals(Status.Skipped)){
                 t.SetStatus(Status.Skipped);
                 //need to create file in this condition too
Index: Engine/src/engine/engineImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package engine;\n\nimport information.*;\nimport target.Target;\nimport target.TargetIsExists;\nimport target.Targets;\nimport xml.Xmlimpl;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.*;\nimport java.time.format.DateTimeFormatter;\nimport java.time.LocalDateTime;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\n\npublic class engineImpl implements engine {\n    private boolean loadFile;\n    private Map<String, Target> targetMap;\n    private String workingDirectory;\n\n\n    /// methods\n    @Override\n    public boolean ifLoadFile(){return loadFile;}\n\n    @Override\n    public void loadFile(String path) throws Exception {/// option 2 in the menu\n        Map<String, Target> targetMapTemp;\n        //// member\n        Xmlimpl file = new Xmlimpl(path);                       // load XML file\n        targetMapTemp = file.makeAMap();// check if the XML file is proper and crate map (key - target name, val - target) from file\n        workingDirectory = file.getWorkingDirectoryXml();\n        loadFile = true;\n        targetMap = targetMapTemp;\n    }\n\n    public void printXml() {\n        System.out.println(targetMap);\n    } // print all the Xml file\n\n    @Override\n    public Information targetsInformation() { /// option 2 in the menu\n        int amountOfTargets = targetMap.entrySet().size();          // count all the targets in the map\n\n        int levies = (int) targetMap.entrySet()                                     // count all the levies targets in the map\n                .stream()\n                .filter(e -> e.getValue().getType().equals(Target.Type.LEAF))\n                .count();\n\n        int roots = (int) targetMap.entrySet()                                      // count all the roots targets in the map\n                .stream()\n                .filter(e -> e.getValue().getType().equals(Target.Type.ROOT))\n                .count();\n\n        int middles = (int) targetMap.entrySet()                                    // count all the middles targets in the map\n                .stream()\n                .filter(e -> e.getValue().getType().equals(Target.Type.MIDDLE))\n                .count();\n\n        int independents = (int) targetMap.entrySet()                               // count all the independents targets in the map\n                .stream()\n                .filter(e -> e.getValue().getType().equals(Target.Type.INDEPENDENTS))\n                .count();\n\n        return new GraphInformation(amountOfTargets, levies, middles, roots, independents);\n    }\n\n    @Override\n    public Information specificTargetInformation(String name) throws Exception {\n        Target target = targetMap.get(name);\n\n        if (target == null)                                               // the  target not found in the map\n            throw new TargetIsExists(name);\n        else {\n            Target.Type type = target.getType();\n            Set<String> dependsOn = target.getSetDependsOn();\n            Set<String> requiredFor = target.getSetRequiredFor();\n            String data = target.getUserData();\n            return new TargetInformation(name, type, dependsOn, requiredFor, data);\n        }\n    }\n\n    @Override\n    public PathBetweenTwoTargetsInfo findAPathBetweenTwoTargets(String t1, String t2, Dependence dependence) throws Exception {\n        Target target1 = targetMap.get(t1);\n        Target target2 = targetMap.get(t2);\n        IntX i = new IntX();\n        i.x = 0;\n\n        List<Targets> list = new ArrayList<>();\n        list.add(new Targets());\n\n       // check if the two targets are in the map\n        if (null == target1)\n            throw new TargetIsExists(t1);\n        if (null == target2)\n            throw new TargetIsExists(t2);\n\n        if (dependence == Dependence.REQUIRED_FOR && target1.getSetRequiredFor().size() != 0)\n            findPathBetweenTwoTargetsHelper(target1,target2,list,i, dependence);\n        else if (dependence == Dependence.DEPENDS_ON && target1.getSetDependsOn().size() != 0)\n            findPathBetweenTwoTargetsHelper(target1,target2,list,i , dependence);\n\n        return  new PathBetweenTwoTargetsInfo(t1 , t2 , dependence.name() , list);\n    }\n    public void findPathBetweenTwoTargetsHelper(Target t1, Target t2, List<Targets> listSt , IntX index , Dependence dependence) {\n\n        Set<String> tOneSet;\n\n        if (Dependence.DEPENDS_ON == dependence)\n            tOneSet = t1.getSetDependsOn();\n        else\n            tOneSet = t1.getSetRequiredFor();\n\n\n        if (tOneSet.size() == 0) {\n            listSt.get(index.x).getTargetsList().remove(listSt.get(index.x).getTargetsList().size() - 1);\n        }\n\n        else {\n            for (String st : tOneSet) {  /// search in all DEPENDS_ON or REQUIRED_FOR for each target\n                if (st.equals(t2.getName())) {\n                    listSt.add(new Targets()); /// the next list\n                    listSt.get(index.x).setFind(true); // find\n                    listSt.get(listSt.size()-1).getTargetsList().addAll(listSt.get(index.x).getTargetsList());\n                    ++index.x;\n                }\n\n                else if (! listSt.get(index.x).getTargetsList().contains(st)) { /// skip on direct dependency and handle cycle\n                    listSt.get(index.x).getTargetsList().add(st);\n                    findPathBetweenTwoTargetsHelper(targetMap.get(st), t2, listSt, index , dependence);\n                }\n            }\n\n            if ( listSt.get(index.x).getTargetsList().size() != 0 )\n                listSt.get(index.x).getTargetsList().remove(listSt.get(index.x).getTargetsList().size()-1);\n        }\n    }\n\n    @Override\n    public List<Information> runTask(int time, boolean random, float success, float warning,boolean keepLastRun) throws Exception {\n        boolean done=false;\n        List<Information>res=new ArrayList<Information>();\n        openDir();\n        if(!keepLastRun){\n            for(Map.Entry<String, Target> e : targetMap.entrySet()){\n                e.getValue().SetStatus(Target.Status.Waiting);\n            }\n\n        }\n        while(!done) {\n            for (Map.Entry<String, Target> e : targetMap.entrySet()) {\n                e.getValue().run(time,random,success,warning,res);\n            }\n            done=taskDoneCheck();\n        }\n        return res;\n    }\n    private void openDir() throws IOException {//doesnt have path yet,this func create directory for simulation task\n        Path path=Paths.get(workingDirectory);\n        Files.createDirectories(path);\n        File dir = new File(workingDirectory);\n\n        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"dd.mm.yyyy HH.MM.SS\");\n        LocalDateTime now = LocalDateTime.now();\n        String s =\"Simulation \"+dtf.format(now);\n       // dir.renameTo(s);\n    }\n    private boolean taskDoneCheck(){\n        for(Map.Entry<String, Target> e : targetMap.entrySet()){\n            if(e.getValue().getStatus().equals(Target.Status.Waiting));\n            return false;\n        }\n        return true;\n    }\n    @Override\n    public void exit() {\n        System.exit(0);\n    }\n    @Override\n    public CircuitDetectionInfo circuitDetection(String name)throws Exception {\n        PathBetweenTwoTargetsInfo info = findAPathBetweenTwoTargets(name,name,Dependence.DEPENDS_ON);\n        return new CircuitDetectionInfo(name , info.getPaths());\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/engine/engineImpl.java b/Engine/src/engine/engineImpl.java
--- a/Engine/src/engine/engineImpl.java	(revision b0e49c9bec48d49ada078e84282cbea3f67c8e1e)
+++ b/Engine/src/engine/engineImpl.java	(date 1637151812654)
@@ -22,9 +22,27 @@
 
 
     /// methods
+    /** If load file
+     *  Check if the XML file is open
+     *  @return true if is it opened, false if not
+     */
     @Override
     public boolean ifLoadFile(){return loadFile;}
 
+    /** Load file
+     *  Open XML file
+     *  Also check if the XML file is corrupt:
+     *  1. there is conflict between targets
+     *  2. all the targets are unique
+     *  3. all the targets are exists
+     *  if the XML is corrupt stay with the last detail you have
+     *  @exception target.TargetException
+     *  @exception target.TargetIsExists
+     *  @exception target.UniqueTarget
+     *  @exception target.DependsOnConflict
+     *  @exception target.RequiredForConflict
+     * @exception xml.XmlIsExists
+     */
     @Override
     public void loadFile(String path) throws Exception {/// option 2 in the menu
         Map<String, Target> targetMapTemp;
Index: Engine/src/xml/Xmlimpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package xml;\nimport generated.GPUPDescriptor;\nimport target.*;\n\nimport java.io.FileInputStream;\nimport java.io.InputStream;\nimport javax.xml.bind.JAXBContext;\nimport javax.xml.bind.JAXBException;\nimport javax.xml.bind.Unmarshaller;\nimport java.io.File;\nimport java.util.*;\n\n\npublic class Xmlimpl implements Xml {\n    private final GPUPDescriptor gpupDescriptor;\n    private final static String JAXB_XML_PACKAGE_NAME = \"generated\";\n\n    public Xmlimpl(String path) throws Exception {\n\n        try {\n            InputStream inputStream = new FileInputStream(new File(path));\n            gpupDescriptor = deserializeFrom(inputStream);\n        } catch (Exception ex) {\n            throw new XmlIsExists(path);\n        }\n    }\n\n    private static GPUPDescriptor deserializeFrom(InputStream in) throws JAXBException {\n        JAXBContext jc = JAXBContext.newInstance(JAXB_XML_PACKAGE_NAME);\n        Unmarshaller u = jc.createUnmarshaller();\n        return (GPUPDescriptor) u.unmarshal(in);\n    }\n\n    public Map<String, Target> makeAMap() throws Exception {\n        Map<String, Target> targetsMap = new HashMap<>();\n/*\n        for (GPUPTarget p : GPUPDescriptor.getGPUPTargets().getGPUPTarget()) {\n\n            if (targetsMap.containsKey(p.getName())) {\n                throw new UniqueTarget(p.getName());\n            } else {\n                Set<String> newSetDependency = new HashSet<>();\n                Set<String> newSetRequiredFor = new HashSet<>();\n\n                if (p.getGPUPTargetDependencies() == null)\n                    newTarget = new Target(p.getName(), p.getGPUPUserData(), newSetDependency, newSetRequiredFor);\n\n                else {\n                    for (GPUPTargetDependencies.GPUGDependency p2 : p.getGPUPTargetDependencies().getGPUGDependency()) {\n                        if (p2.getType().equals(\"dependsOn\"))\n                            newSetDependency.add(p2.getValue());\n                        else if (p2.getType().equals(\"requiredFor\"))\n                            newSetRequiredFor.add(p2.getValue());\n                    }\n                    newTarget = new Target(p.getName(), p.getGPUPUserData(), newSetDependency, newSetRequiredFor);\n                }\n\n                targetsMap.put(newTarget.getName(), newTarget);\n            }\n        }\n */\n        Set <String> setA = new HashSet<>();\n        setA.add(\"B\");\n        setA.add(\"D\");\n        Set <String> setB = new HashSet<>();\n        setB.add(\"C\");\n        Set <String> setC = new HashSet<>();\n        setC.add(\"A\");\n        setC.add(\"F\");\n        Set <String> setD = new HashSet<>();\n        setD.add(\"E\");\n        Set <String> setE = new HashSet<>();\n        setE.add(\"A\");\n        Set <String> setF = new HashSet<>();\n\n\n        targetsMap.put(\"A\" , new Target(\"A\" , null , setA , new HashSet()));\n        targetsMap.put(\"B\" , new Target(\"B\" , null , setB , new HashSet()));\n        targetsMap.put(\"C\" , new Target(\"C\" , null, setC , new HashSet()));\n        targetsMap.put(\"D\" , new Target(\"D\" , null , setD , new HashSet()));\n        targetsMap.put(\"E\" , new Target(\"E\" , null , setE , new HashSet()));\n        targetsMap.put(\"F\" , new Target(\"F\" , null , setF , new HashSet()));\n\n        organizeTheDependencies(targetsMap);\n        makeTypeForTargets(targetsMap);\n            return targetsMap;\n    }\n\n    public void organizeTheDependencies(Map<String, Target> targetMap) throws Exception {\n        Set<String> setOfKey = targetMap.keySet();\n\n        for (String targetKey: setOfKey) // organize all the map\n        {\n            // organize the RequiredFor of all target\n            for (String st2 : targetMap.get(targetKey).getSetDependsOn()) {\n                if (setOfKey.contains(st2)) { // check if the target is exists in the xml file\n                    if (!targetMap.get(st2).getSetDependsOn().contains(targetKey)) // check if there is a conflict\n                        targetMap.get(st2).addToSetRequiredFor(targetKey);\n                    else throw new DependsOnConflict(targetKey,st2);\n                }\n                else\n                    throw new TargetIsExists(st2);\n            }\n            // organize the DependsOn of all target\n            for (String st2 : targetMap.get(targetKey).getSetRequiredFor()) {\n                if (setOfKey.contains(st2)) { // check if the target is exists in the xml file\n                    if (!targetMap.get(st2).getSetRequiredFor().contains(targetKey)) // check if there is a conflict\n                        targetMap.get(st2).addToSetDependsOn(targetKey);\n                    else throw new RequiredForConflict(targetKey,st2);\n                }\n                else\n                    throw new TargetIsExists(st2);\n            }\n        }\n    }\n    public void makeTypeForTargets(Map<String, Target> targetMap) {\n        targetMap.forEach((k,t) ->\n                {\n                    if (t.getSetRequiredFor().size() == 0 && t.getSetDependsOn().size() == 0)\n                        t.SetType(Target.Type.INDEPENDENTS);\n                    else if (t.getSetDependsOn().size() == 0)\n                        t.SetType(Target.Type.LEAF);\n                    else if (t.getSetRequiredFor().size() == 0)\n                        t.SetType(Target.Type.ROOT);\n                    else\n                        t.SetType(Target.Type.MIDDLE);\n                }\n        );\n    }\n    public String getWorkingDirectoryXml(){\n        return gpupDescriptor.getGPUPConfiguration().getGPUPWorkingDirectory();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Engine/src/xml/Xmlimpl.java b/Engine/src/xml/Xmlimpl.java
--- a/Engine/src/xml/Xmlimpl.java	(revision b0e49c9bec48d49ada078e84282cbea3f67c8e1e)
+++ b/Engine/src/xml/Xmlimpl.java	(date 1637150594340)
@@ -1,5 +1,7 @@
 package xml;
 import generated.GPUPDescriptor;
+import generated.GPUPTarget;
+import generated.GPUPTargetDependencies;
 import target.*;
 
 import java.io.FileInputStream;
@@ -32,9 +34,10 @@
     }
 
     public Map<String, Target> makeAMap() throws Exception {
+        Target newTarget;
         Map<String, Target> targetsMap = new HashMap<>();
 /*
-        for (GPUPTarget p : GPUPDescriptor.getGPUPTargets().getGPUPTarget()) {
+        for (GPUPTarget p : gpupDescriptor.getGPUPTargets().getGPUPTarget()) {
 
             if (targetsMap.containsKey(p.getName())) {
                 throw new UniqueTarget(p.getName());
@@ -61,7 +64,7 @@
  */
         Set <String> setA = new HashSet<>();
         setA.add("B");
-        setA.add("D");
+        setA.add("G");
         Set <String> setB = new HashSet<>();
         setB.add("C");
         Set <String> setC = new HashSet<>();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"30f48137-87a5-4e03-962e-6e8bd68df68d\" name=\"Changes\" comment=\"Bar Sela\">\n      <change afterPath=\"$PROJECT_DIR$/Engine/src/engine/IntX.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Engine/src/engine/engineImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Engine/src/engine/engineImpl.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Engine/src/information/PathBetweenTwoTargetsInfo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Engine/src/information/PathBetweenTwoTargetsInfo.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Engine/src/xml/Xmlimpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Engine/src/xml/Xmlimpl.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Exception/src/target/DependsOnConflict.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Exception/src/target/DependsOnConflict.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/UI/src/UIimpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/UI/src/UIimpl.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Engine/engine/engineImpl.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Engine/engine/engineImpl.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Engine/information/PathBetweenTwoTargetsInfo.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Engine/information/PathBetweenTwoTargetsInfo.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Engine/target/Targets.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Engine/target/Targets.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Engine/xml/Xmlimpl.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Engine/xml/Xmlimpl.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/UI/UIimpl.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/UI/UIimpl.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\n      <list>\n        <option value=\"nov israeli &lt;nov.israeli888@gmail.com&gt;\" />\n      </list>\n    </option>\n    <option name=\"PUSH_TAGS\">\n      <GitPushTagMode>\n        <option name=\"argument\" value=\"--tags\" />\n        <option name=\"title\" value=\"All\" />\n      </GitPushTagMode>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"HighlightingSettingsPerFile\">\n    <setting file=\"jar:///Library/Java/JavaVirtualMachines/jdk1.8.0_301.jdk/Contents/Home/src.zip!/java/util/HashSet.java\" root0=\"SKIP_INSPECTION\" />\n  </component>\n  <component name=\"ProjectFrameBounds\" extendedState=\"6\">\n    <option name=\"x\" value=\"390\" />\n    <option name=\"y\" value=\"30\" />\n    <option name=\"width\" value=\"2100\" />\n    <option name=\"height\" value=\"1500\" />\n  </component>\n  <component name=\"ProjectId\" id=\"20iixnmBC5nOpmacU5bSVUJFsGH\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\n    <property name=\"ChangesTree.GroupingKeys\" value=\"directory\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"editor.preferences.fonts.default\" />\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"main\" />\n      <module name=\"UI\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"30f48137-87a5-4e03-962e-6e8bd68df68d\" name=\"Changes\" comment=\"\" />\n      <created>1636534060126</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1636534060126</updated>\n      <workItem from=\"1636534062741\" duration=\"27000\" />\n      <workItem from=\"1636534134964\" duration=\"484000\" />\n      <workItem from=\"1636534671547\" duration=\"16035000\" />\n      <workItem from=\"1636712961690\" duration=\"172000\" />\n      <workItem from=\"1636807537670\" duration=\"4000\" />\n      <workItem from=\"1636972352516\" duration=\"34939000\" />\n      <workItem from=\"1637136059584\" duration=\"12023000\" />\n    </task>\n    <task id=\"LOCAL\u200E00001\" summary=\"zxc\">\n      <created>1636536346510</created>\n      <option name=\"number\" value=\"LOCAL\u200E00001\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00001\" />\n      <updated>1636536346510</updated>\n    </task>\n    <task id=\"LOCAL\u200E00002\" summary=\"zxc\">\n      <created>1636536370594</created>\n      <option name=\"number\" value=\"LOCAL\u200E00002\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00002\" />\n      <updated>1636536370594</updated>\n    </task>\n    <task id=\"LOCAL\u200E00003\" summary=\"bar sela\">\n      <created>1636536377644</created>\n      <option name=\"number\" value=\"LOCAL\u200E00003\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00003\" />\n      <updated>1636536377644</updated>\n    </task>\n    <task id=\"LOCAL\u200E00004\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636540270843</created>\n      <option name=\"number\" value=\"LOCAL\u200E00004\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00004\" />\n      <updated>1636540270843</updated>\n    </task>\n    <task id=\"LOCAL\u200E00005\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636542968700</created>\n      <option name=\"number\" value=\"LOCAL\u200E00005\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00005\" />\n      <updated>1636542968700</updated>\n    </task>\n    <task id=\"LOCAL\u200E00006\" summary=\"Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;UI/src/UI.java\">\n      <created>1636543508863</created>\n      <option name=\"number\" value=\"LOCAL\u200E00006\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00006\" />\n      <updated>1636543508863</updated>\n    </task>\n    <task id=\"LOCAL\u200E00007\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636545043696</created>\n      <option name=\"number\" value=\"LOCAL\u200E00007\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00007\" />\n      <updated>1636545043696</updated>\n    </task>\n    <task id=\"LOCAL\u200E00008\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636549521300</created>\n      <option name=\"number\" value=\"LOCAL\u200E00008\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00008\" />\n      <updated>1636549521300</updated>\n    </task>\n    <task id=\"LOCAL\u200E00009\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636550827160</created>\n      <option name=\"number\" value=\"LOCAL\u200E00009\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00009\" />\n      <updated>1636550827160</updated>\n    </task>\n    <task id=\"LOCAL\u200E00010\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636550832604</created>\n      <option name=\"number\" value=\"LOCAL\u200E00010\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00010\" />\n      <updated>1636550832604</updated>\n    </task>\n    <task id=\"LOCAL\u200E00011\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636550840509</created>\n      <option name=\"number\" value=\"LOCAL\u200E00011\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00011\" />\n      <updated>1636550840509</updated>\n    </task>\n    <task id=\"LOCAL\u200E00012\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636550845954</created>\n      <option name=\"number\" value=\"LOCAL\u200E00012\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00012\" />\n      <updated>1636550845954</updated>\n    </task>\n    <task id=\"LOCAL\u200E00013\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636551354349</created>\n      <option name=\"number\" value=\"LOCAL\u200E00013\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00013\" />\n      <updated>1636551354349</updated>\n    </task>\n    <task id=\"LOCAL\u200E00014\" summary=\"Merge remote-tracking branch 'origin/master'\">\n      <created>1636553052358</created>\n      <option name=\"number\" value=\"LOCAL\u200E00014\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00014\" />\n      <updated>1636553052358</updated>\n    </task>\n    <task id=\"LOCAL\u200E00015\" summary=\"bar tsukerberg\">\n      <created>1636558070597</created>\n      <option name=\"number\" value=\"LOCAL\u200E00015\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00015\" />\n      <updated>1636558070597</updated>\n    </task>\n    <task id=\"LOCAL\u200E00016\" summary=\"bar tsukerberg\">\n      <created>1636558504677</created>\n      <option name=\"number\" value=\"LOCAL\u200E00016\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00016\" />\n      <updated>1636558504677</updated>\n    </task>\n    <task id=\"LOCAL\u200E00017\" summary=\"Bar Sela\">\n      <created>1636562916712</created>\n      <option name=\"number\" value=\"LOCAL\u200E00017\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00017\" />\n      <updated>1636562916712</updated>\n    </task>\n    <task id=\"LOCAL\u200E00018\" summary=\"Bar Sela\">\n      <created>1636567432333</created>\n      <option name=\"number\" value=\"LOCAL\u200E00018\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00018\" />\n      <updated>1636567432333</updated>\n    </task>\n    <task id=\"LOCAL\u200E00019\" summary=\"Bar Sela\">\n      <created>1636641029440</created>\n      <option name=\"number\" value=\"LOCAL\u200E00019\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00019\" />\n      <updated>1636641029440</updated>\n    </task>\n    <task id=\"LOCAL\u200E00020\" summary=\"Bar Sela\">\n      <created>1636642226800</created>\n      <option name=\"number\" value=\"LOCAL\u200E00020\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00020\" />\n      <updated>1636642226800</updated>\n    </task>\n    <task id=\"LOCAL\u200E00021\" summary=\"Bar Sela\">\n      <created>1636974027744</created>\n      <option name=\"number\" value=\"LOCAL\u200E00021\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00021\" />\n      <updated>1636974027744</updated>\n    </task>\n    <task id=\"LOCAL\u200E00022\" summary=\"Bar Sela\">\n      <created>1636980754037</created>\n      <option name=\"number\" value=\"LOCAL\u200E00022\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00022\" />\n      <updated>1636980754037</updated>\n    </task>\n    <task id=\"LOCAL\u200E00023\" summary=\"Bar Sela\">\n      <created>1636985330931</created>\n      <option name=\"number\" value=\"LOCAL\u200E00023\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00023\" />\n      <updated>1636985330931</updated>\n    </task>\n    <task id=\"LOCAL\u200E00024\" summary=\"Bar Sela\">\n      <created>1637054192751</created>\n      <option name=\"number\" value=\"LOCAL\u200E00024\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00024\" />\n      <updated>1637054192751</updated>\n    </task>\n    <task id=\"LOCAL\u200E00025\" summary=\"Bar Sela\">\n      <created>1637098721072</created>\n      <option name=\"number\" value=\"LOCAL\u200E00025\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00025\" />\n      <updated>1637098721072</updated>\n    </task>\n    <task id=\"LOCAL\u200E00026\" summary=\"Bar Sela\">\n      <created>1637098737266</created>\n      <option name=\"number\" value=\"LOCAL\u200E00026\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00026\" />\n      <updated>1637098737266</updated>\n    </task>\n    <task id=\"LOCAL\u200E00027\" summary=\"Bar Sela\">\n      <created>1637098753562</created>\n      <option name=\"number\" value=\"LOCAL\u200E00027\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00027\" />\n      <updated>1637098753562</updated>\n    </task>\n    <task id=\"LOCAL\u200E00028\" summary=\"Bar Sela\">\n      <created>1637138398897</created>\n      <option name=\"number\" value=\"LOCAL\u200E00028\" />\n      <option name=\"presentableId\" value=\"LOCAL\u200E00028\" />\n      <updated>1637138398897</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"29\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"57af23f1-ebdc-4980-8642-23c6d9864134\">\n          <value>\n            <State>\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"HEAD\" />\n                      </list>\n                    </value>\n                  </entry>\n                  <entry key=\"structure\">\n                    <value>\n                      <list>\n                        <option value=\"dir:/Users/bar_sela/IdeaProjects/GPUP1/Engine\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"OPEN_GENERIC_TABS\">\n      <map>\n        <entry key=\"57af23f1-ebdc-4980-8642-23c6d9864134\" value=\"TOOL_WINDOW\" />\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"zxc\" />\n    <MESSAGE value=\"bar sela\" />\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;UI/src/UI.java\" />\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/master'\" />\n    <MESSAGE value=\"bar tsukerberg\" />\n    <MESSAGE value=\"Bar Sela\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Bar Sela\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>111</line>\n          <option name=\"timeStamp\" value=\"54\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>113</line>\n          <option name=\"timeStamp\" value=\"56\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/Engine/src/engine/engineImpl.java</url>\n          <line>118</line>\n          <option name=\"timeStamp\" value=\"64\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>143</line>\n          <option name=\"timeStamp\" value=\"65\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>144</line>\n          <option name=\"timeStamp\" value=\"66\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>176</line>\n          <option name=\"timeStamp\" value=\"67\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/Engine/src/information/TargetInformation.java</url>\n          <line>29</line>\n          <properties class=\"information.TargetInformation\" method=\"toString\">\n            <option name=\"EMULATED\" value=\"true\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"50\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\n          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>\n          <line>97</line>\n          <properties class=\"UIimpl\" method=\"showTargetInfo\">\n            <option name=\"EMULATED\" value=\"true\" />\n          </properties>\n          <option name=\"timeStamp\" value=\"57\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n    <pin-to-top-manager>\n      <pinned-members>\n        <PinnedItemInfo parentTag=\"target.Targets\" memberName=\"targetsList\" />\n      </pinned-members>\n    </pin-to-top-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b0e49c9bec48d49ada078e84282cbea3f67c8e1e)
+++ b/.idea/workspace.xml	(date 1637151812668)
@@ -2,16 +2,11 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="30f48137-87a5-4e03-962e-6e8bd68df68d" name="Changes" comment="Bar Sela">
-      <change afterPath="$PROJECT_DIR$/Engine/src/engine/IntX.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Engine/src/engine/engineImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/Engine/src/engine/engineImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Engine/src/information/PathBetweenTwoTargetsInfo.java" beforeDir="false" afterPath="$PROJECT_DIR$/Engine/src/information/PathBetweenTwoTargetsInfo.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Engine/src/target/Target.java" beforeDir="false" afterPath="$PROJECT_DIR$/Engine/src/target/Target.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Engine/src/xml/Xmlimpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/Engine/src/xml/Xmlimpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Exception/src/target/DependsOnConflict.java" beforeDir="false" afterPath="$PROJECT_DIR$/Exception/src/target/DependsOnConflict.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/UI/src/UIimpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/UI/src/UIimpl.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/Engine/engine/engineImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Engine/engine/engineImpl.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Engine/information/PathBetweenTwoTargetsInfo.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Engine/information/PathBetweenTwoTargetsInfo.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Engine/target/Targets.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Engine/target/Targets.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/Engine/xml/Xmlimpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Engine/xml/Xmlimpl.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/UI/UIimpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/UI/UIimpl.class" afterDir="false" />
     </list>
@@ -107,7 +102,7 @@
       <workItem from="1636712961690" duration="172000" />
       <workItem from="1636807537670" duration="4000" />
       <workItem from="1636972352516" duration="34939000" />
-      <workItem from="1637136059584" duration="12023000" />
+      <workItem from="1637136059584" duration="14808000" />
     </task>
     <task id="LOCAL‎00001" summary="zxc">
       <created>1636536346510</created>
@@ -277,7 +272,19 @@
       <option name="presentableId" value="LOCAL‎00028" />
       <updated>1637138398897</updated>
     </task>
-    <option name="localTasksCounter" value="29" />
+    <task id="LOCAL‎00029" summary="Bar Sela">
+      <created>1637149141728</created>
+      <option name="number" value="LOCAL‎00029" />
+      <option name="presentableId" value="LOCAL‎00029" />
+      <updated>1637149141728</updated>
+    </task>
+    <task id="LOCAL‎00030" summary="Bar Sela">
+      <created>1637149173054</created>
+      <option name="number" value="LOCAL‎00030" />
+      <option name="presentableId" value="LOCAL‎00030" />
+      <updated>1637149173054</updated>
+    </task>
+    <option name="localTasksCounter" value="31" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -340,34 +347,44 @@
       <breakpoints>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>
-          <line>111</line>
+          <line>112</line>
           <option name="timeStamp" value="54" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>
-          <line>113</line>
+          <line>114</line>
           <option name="timeStamp" value="56" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/Engine/src/engine/engineImpl.java</url>
-          <line>118</line>
+          <line>142</line>
           <option name="timeStamp" value="64" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>
-          <line>143</line>
+          <line>144</line>
           <option name="timeStamp" value="65" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>
-          <line>144</line>
+          <line>145</line>
           <option name="timeStamp" value="66" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>
-          <line>176</line>
+          <line>177</line>
           <option name="timeStamp" value="67" />
         </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>
+          <line>217</line>
+          <option name="timeStamp" value="69" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/Engine/src/engine/engineImpl.java</url>
+          <line>170</line>
+          <option name="timeStamp" value="70" />
+        </line-breakpoint>
         <line-breakpoint enabled="true" type="java-method">
           <url>file://$PROJECT_DIR$/Engine/src/information/TargetInformation.java</url>
           <line>29</line>
@@ -378,7 +395,7 @@
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-method">
           <url>file://$PROJECT_DIR$/UI/src/UIimpl.java</url>
-          <line>97</line>
+          <line>98</line>
           <properties class="UIimpl" method="showTargetInfo">
             <option name="EMULATED" value="true" />
           </properties>
